<?xml version="1.0" encoding="utf-8"?>



<feed xmlns="http://www.w3.org/2005/Atom" >
  <generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator>
  <link href="https://hpehl.github.io//wildfly.org/feed.xml" rel="self" type="application/atom+xml" />
  <link href="https://hpehl.github.io//wildfly.org/" rel="alternate" type="text/html" />
  <updated>2025-01-14T10:40:23+01:00</updated>
  <id>https://hpehl.github.io//wildfly.org</id>

  
  
    <title type="html">WildFly</title>
  

  
    <entry>
      <title type="html">PKCS#12 with WildFly Elytron&apos;s Credential Store</title>
      <link href="https://lofthouse.dev/2025/01/06/pkcs12-with-wildfly-elytrons-credential-store/" rel="alternate" type="text/html" title="PKCS#12 with WildFly Elytron&apos;s Credential Store" />
      <published>2025-01-06T00:00:00+01:00</published>
      <updated>2025-01-06T00:00:00+01:00</updated>
      <id>https://lofthouse.dev/2025/01/06/pkcs12-with-wildfly-elytrons-credential-store/</id>
      
      
        <content type="html" xml:base="https://lofthouse.dev/2025/01/06/pkcs12-with-wildfly-elytrons-credential-store/">&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The default credential store used in WildFly from WildFly Elytron is the KeyStoreCredentialStore which is backed by a Java KeyStore to hold the credentials.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This in turn defaults to using the JCEKS KeyStore format, this blog post is to illustrate how we can configure this to use a PKCS#12 store instead both in WildFly and when using the elytron-tool CLI tool directly.&lt;/p&gt;
&lt;/div&gt;</content>
      

      
      
      
      
      

      
        <author>
          <name>Darran Lofthouse</name>
          
          
        </author>
      

      
        
      

      
        <category term="wildfly" />
      
        <category term="credential-store" />
      
        <category term="pkcs12" />
      

      
        <summary type="html">The default credential store used in WildFly from WildFly Elytron is the KeyStoreCredentialStore which is backed by a Java KeyStore to hold the credentials.</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">Thanks for a great 2024!</title>
      <link href="https://hpehl.github.io//wildfly.org/news/2024/12/18/year-end-message/" rel="alternate" type="text/html" title="Thanks for a great 2024!" />
      <published>2024-12-18T00:00:00+01:00</published>
      <updated>2024-12-18T00:00:00+01:00</updated>
      <id>https://hpehl.github.io//wildfly.org/news/2024/12/18/year-end-message</id>
      
      
        <content type="html" xml:base="https://hpehl.github.io//wildfly.org/news/2024/12/18/year-end-message/">&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We are almost at the end of 2024 and we wanted to take this opportunity to thank all our community members for their help on &lt;a href=&quot;https://wildfly.org&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;WildFly&lt;/a&gt; this year.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;2024 was a busy year for WildFly and a lot was accomplished. We continued with our quarterly releases and delivered 4 Major versions (31, 32, 33, 34) and 5 micro updates. WildFly 35 Beta also just came out last week.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;There were many developments done this year but here are some of the highlights from our &lt;a href=&quot;https://wildfly.org/releases/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;release notes&lt;/a&gt;:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;dlist&quot;&gt;
&lt;dl&gt;
&lt;dt class=&quot;hdlist1&quot;&gt;Stability levels&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;The WildFly project has high standards related to quality, stability and backwards compatibility. A key way an open source project like WildFly can ensure high standards are met is by &quot;community bake&quot;, allowing interested users to have access to features that are still undergoing a hardening process, while not forcing users who are not interested in such things to consume them. To better facilitate this, WildFly 31 introduced the notion of formal &quot;stability levels&quot; that can be associated with functionality.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&quot;hdlist1&quot;&gt;MicroProfile 7.0&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;We have added support for MicroProfile 7.0 with inclusion of updated specifications for MicroProfile Fault Tolerance, MicroProfile OpenAPI, MicroProfile REST Client and MicroProfile Telemetry.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&quot;hdlist1&quot;&gt;Jakarta EE 11&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;Work on support of Jakarta EE 11 is ongoing with inclusion of preview stability support for &lt;a href=&quot;https://jakarta.ee/specifications/data/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Jakarta Data&lt;/a&gt; in both standard WildFly and WildFly Preview, in addition to the updates of Jakarta EE 10 APIs in WildFly Preview.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&quot;hdlist1&quot;&gt;WildFly Glow&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;The WildFly Glow tools (a CLI application and a Maven plugin) will analyze your application artifact, determine what WildFly feature-packs and Galleon layers are needed to run your application, and make suggestions about other features (e.g. TLS support) that you may want to include in your optimized WildFly installation. You can take the information WildFly Glow provides and use it in your own provisioning configuration, or you can have WildFly Glow provision a server, bootable jar or Docker image for you.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&quot;hdlist1&quot;&gt;Jakarta MVC&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;We have added a preview stability extension and subsystem for &lt;a href=&quot;https://www.mvc-spec.org&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Jakarta MVC&lt;/a&gt;.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&quot;hdlist1&quot;&gt;Vert.x extension&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;We have added a preview stability extension and subsystem for &lt;a href=&quot;https://vertx.io&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Vert.x&lt;/a&gt; to configure and share the Vert.x instance within WildFly server for other subsystems which need it.&lt;/p&gt;
&lt;/dd&gt;
&lt;dt class=&quot;hdlist1&quot;&gt;WildFly AI&lt;/dt&gt;
&lt;dd&gt;
&lt;p&gt;We have created a &lt;a href=&quot;https://github.com/wildfly-extras/wildfly-ai-feature-pack&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Feature pack&lt;/a&gt; for Generative AI that simplifies the integration of AI in WildFly applications.&lt;/p&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Overall, more than 300 feature, enhancement and bug issues were resolved in our main code by more than 60 contributors, and if you include task and component upgrade issues we resolved over 700. This is not counting all the work done in the components integrated in WildFly.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We have updated our release process with an emphasis on
&lt;a href=&quot;https://docs.wildfly.org/wildfly-proposals/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;WildFly Proposals&lt;/a&gt; to enhance and expand WildFly.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We continued to expand our &lt;a href=&quot;https://www.wildfly.org/guides/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;guides&lt;/a&gt; to cover more use cases.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We also organized two mini conferences around WildFly in March and November:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=_8g1rZ80u2A&amp;amp;t=22s&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Live stream of the March conference&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=Karu90yDIhs&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Live stream of the November conference&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We will start 2025 with the release of WildFly 35 and we have a lot of exciting news for the future of WildFly!&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Thanks all for of your for your work and help in making WildFly a successful Open Source project. We are looking forward to continuing working with you next year!&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Best wishes from the WildFly team and Happy New Year ðŸŽ‰ðŸŽŠ!&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Brian&lt;/p&gt;
&lt;/div&gt;</content>
      

      
      
      
      
      

      
        <author>
          <name>Brian Stansberry</name>
          
          
        </author>
      

      
        
      

      

      
        <summary type="html">We are almost at the end of 2024 and we wanted to take this opportunity to thank all our community members for their help on WildFly this year.</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">Using the management console on OpenShift</title>
      <link href="https://hpehl.github.io//wildfly.org/news/2024/12/18/Management-Console-on-OpenShift/" rel="alternate" type="text/html" title="Using the management console on OpenShift" />
      <published>2024-12-18T00:00:00+01:00</published>
      <updated>2024-12-18T00:00:00+01:00</updated>
      <id>https://hpehl.github.io//wildfly.org/news/2024/12/18/Management-Console-on-OpenShift</id>
      
      
        <content type="html" xml:base="https://hpehl.github.io//wildfly.org/news/2024/12/18/Management-Console-on-OpenShift/">&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In this blog post I&amp;#8217;d like to show how you can use the management console (aka &lt;a href=&quot;https://hal.github.io&quot;&gt;HAL&lt;/a&gt;) for WildFly instances running on OpenShift.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;prerequisites&quot;&gt;Prerequisites&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The console is an integral part of WildFly and is activated by default when running on-premise. For instances running on OpenShift, the console is not available by default, though. To use the console on OpenShift, you need a WildFly image that meets the following requirements:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Management user:&lt;br&gt;
The management console is protected by default and requires a management user added with the &lt;code&gt;add-user.sh&lt;/code&gt; script.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Public route to the management interface:&lt;br&gt;
The management interface has to be publicly available from the outside.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Allowed origin:&lt;br&gt;
The console uses the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API&quot;&gt;fetch API&lt;/a&gt; to talk to the management interface of a running WildFly instance. In an OpenShift environment, the origins of the public route and the management interface itself are different. That&amp;#8217;s why we need to tell WildFly that it is ok to make requests to the management interface from another origin (see &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS&quot;&gt;CORS policies&lt;/a&gt; for more details).&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;You can build such an image on your own based on the official WildFly images available at &lt;a href=&quot;https://quay.io/repository/wildfly/wildfly&quot;&gt;quay.io/wildfly/wildfly&lt;/a&gt; (see &quot;Extending the image&quot;). Another way is to use the pre-built images from &lt;a href=&quot;https://quay.io/repository/halconsole/wildfly&quot;&gt;quay.io/halconsole/wildfly&lt;/a&gt;. These images are mainly meant for HAL development and testing but already meet these requirements, which makes them suitable for our use case. In particular the images add a management user &lt;code&gt;admin:admin&lt;/code&gt; and have a list of preconfigured allowed origins.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;admonitionblock warning&quot;&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td class=&quot;icon&quot;&gt;
&lt;div class=&quot;title&quot;&gt;Warning&lt;/div&gt;
&lt;/td&gt;
&lt;td class=&quot;content&quot;&gt;
The additions in the &lt;a href=&quot;https://quay.io/repository/halconsole/wildfly&quot;&gt;quay.io/halconsole/wildfly&lt;/a&gt; images are &lt;strong&gt;only&lt;/strong&gt; meant for &lt;strong&gt;development and testing&lt;/strong&gt; purposes. Under &lt;strong&gt;no circumstances&lt;/strong&gt; must this be &lt;strong&gt;used in production&lt;/strong&gt;! Do not rely on the management user &lt;code&gt;admin:admin&lt;/code&gt; or the preconfigured allowed origins.
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;To add the allowed origin for the public route, we make use of the &lt;a href=&quot;https://github.com/jmesnil/kubectl-jboss-cli/&quot;&gt;&lt;code&gt;jboss-cli&lt;/code&gt;&lt;/a&gt; &lt;code&gt;kubectl&lt;/code&gt; plugin. This plugin makes it straightforward to connect to a WildFly instance running on OpenShift and execute CLI commands. Please visit &lt;a href=&quot;https://github.com/jmesnil/kubectl-jboss-cli/&quot; class=&quot;bare&quot;&gt;https://github.com/jmesnil/kubectl-jboss-cli/&lt;/a&gt; to find out how to install and use the plugin.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;instructions&quot;&gt;Instructions&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The steps below assume you have access to an OpenShift cluster and installed &lt;code&gt;kubectl&lt;/code&gt; and the &lt;code&gt;jboss-cli&lt;/code&gt; plugin.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;olist arabic&quot;&gt;
&lt;ol class=&quot;arabic&quot;&gt;
&lt;li&gt;
&lt;p&gt;Create application&lt;/p&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;oc new-app quay.io/halconsole/wildfly
oc create route edge --service wildfly --port 9990&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Add allowed origin&lt;/p&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Use &lt;code&gt;oc get pods&lt;/code&gt; to find the name of the pod to connect to and &lt;code&gt;oc get routes&lt;/code&gt; to get the hostname of the public route to the management interface.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;kubectl jboss-cli -p &amp;lt;pod&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Login using &lt;code&gt;admin:admin&lt;/code&gt; and execute these CLI commands:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;/core-service=management/management-interface=http-interface:list-add(name=allowed-origins,value=https://&amp;lt;hostname&amp;gt;)
reload
exit&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Open the management console at &lt;code&gt;https://&amp;lt;hostname&amp;gt;&lt;/code&gt; and login using &lt;code&gt;admin:admin&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;online-version-of-the-management-console&quot;&gt;Online version of the management console&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;As an alternative to adding the allowed origin, you can also use the online version of the management console available at &lt;a href=&quot;https://hal.github.io/console&quot; class=&quot;bare&quot;&gt;https://hal.github.io/console&lt;/a&gt;. This URL ships the latest version of the management console.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;admonitionblock note&quot;&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td class=&quot;icon&quot;&gt;
&lt;div class=&quot;title&quot;&gt;Note&lt;/div&gt;
&lt;/td&gt;
&lt;td class=&quot;content&quot;&gt;
The management console is a single-page application (&lt;a href=&quot;https://en.wikipedia.org/wiki/Single-page_application&quot;&gt;SPA&lt;/a&gt;) without any server side dependencies. As such, it can run on its own and connect to an arbitrary management interface. The online version of the console makes use of this fact. See &lt;a href=&quot;https://hal.github.io/documentation/get-started/#standalone-mode&quot; class=&quot;bare&quot;&gt;https://hal.github.io/documentation/get-started/#standalone-mode&lt;/a&gt; for more details.
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&quot;olist arabic&quot;&gt;
&lt;ol class=&quot;arabic&quot;&gt;
&lt;li&gt;
&lt;p&gt;Create the application as above and find the hostname of the public route using &lt;code&gt;oc get routes&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Open &lt;a href=&quot;https://hal.github.io/console&quot; class=&quot;bare&quot;&gt;https://hal.github.io/console&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Add a management interface to the public route:&lt;/p&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Give an arbitrary name, select &lt;strong&gt;https&lt;/strong&gt; as a scheme, enter the hostname of the public route &lt;em&gt;without&lt;/em&gt; https and port &lt;strong&gt;80&lt;/strong&gt;:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;/assets/img/news/hal/add-management-interface.png&quot; alt=&quot;Add management interface&quot;&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Click &lt;strong&gt;Add&lt;/strong&gt; and then &lt;strong&gt;Connect&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Login using &lt;code&gt;admin:admin&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;things-to-keep-in-mind&quot;&gt;Things to keep in mind&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Please note that the above instructions are just a workaround to access the OpenShift management console as long as there is no more compatible, container-friendly way. In particular, the approach ignores some principles that should not be applied in a cloud environment:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Changing the management configuration of a pod is an antipattern as it will not outlive a pod restart. At that point, you&amp;#8217;ll have to reconfigure the allowed origin.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;With a route, you are accessing pods behind a service. If your deployments have multiple pods, it&amp;#8217;s complex and hacky to access a specific pod or configure all pods.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Do not use&lt;/strong&gt; the &lt;a href=&quot;https://quay.io/repository/halconsole/wildfly&quot;&gt;quay.io/halconsole/wildfly&lt;/a&gt; images &lt;strong&gt;in production&lt;/strong&gt; under any circumstances. They contain preconfigured, insecure credentials and are meant only for development and testing purposes.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;outlook&quot;&gt;Outlook&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We&amp;#8217;re currently working on the &lt;a href=&quot;https://github.com/hal/foundation&quot;&gt;next-gen management console&lt;/a&gt;. This version will also support a dedicated variant for OpenShift that will integrate with the OpenShift management console and addresses the limitations mentioned above. For more information you can watch the &lt;a href=&quot;https://www.youtube.com/watch?v=Karu90yDIhs&amp;amp;t=571s&quot;&gt;talk&lt;/a&gt; on the next-gen management console from the last &lt;a href=&quot;https://www.wildfly.org/conference/&quot;&gt;WildFly mini conference&lt;/a&gt;, get the &lt;a href=&quot;https://www.wildfly.org/assets/data/conference/202411_wmc_nextgen_console.pdf&quot;&gt;slides&lt;/a&gt; or reach out to us in the HAL Zulip &lt;a href=&quot;https://wildfly.zulipchat.com/#narrow/channel/174373-hal&quot;&gt;channel&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</content>
      

      
      
      
      
      

      
        <author>
          <name>Harald Pehl</name>
          
          
        </author>
      

      
        
      

      
        <category term="hal" />
      
        <category term="management" />
      
        <category term="console" />
      
        <category term="openshift" />
      

      
        <summary type="html">In this blog post I&amp;#8217;d like to show how you can use the management console (aka HAL) for WildFly instances running on OpenShift.</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">Introducing Vertx Subsystem in WildFly Preview</title>
      <link href="https://hpehl.github.io//wildfly.org/news/2024/12/17/vertx-subsystem-in-preview/" rel="alternate" type="text/html" title="Introducing Vertx Subsystem in WildFly Preview" />
      <published>2024-12-17T00:00:00+01:00</published>
      <updated>2024-12-17T00:00:00+01:00</updated>
      <id>https://hpehl.github.io//wildfly.org/news/2024/12/17/vertx-subsystem-in-preview</id>
      
      
        <content type="html" xml:base="https://hpehl.github.io//wildfly.org/news/2024/12/17/vertx-subsystem-in-preview/">&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I&amp;#8217;m excited to announce the integration of the &lt;a href=&quot;https://github.com/wildfly-extras/wildfly-vertx-feature-pack&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;WildFly Vertx Feature Pack&lt;/a&gt; into WildFly Preview from WildFly 35 Beta release. This feature pack introduces Vertx configuration capabilities through the WildFly management model, making it easier to manage and integrate Vertx with existing WildFly subsystems.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;admonitionblock note&quot;&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td class=&quot;icon&quot;&gt;
&lt;div class=&quot;title&quot;&gt;Note&lt;/div&gt;
&lt;/td&gt;
&lt;td class=&quot;content&quot;&gt;
In the 35 release, the vertx subsystem is only available in WildFly Preview, and not in standard WildFly. It is provided at the &lt;a href=&quot;https://docs.wildfly.org/34/Admin_Guide.html#Feature_stability_levels&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;preview&lt;/code&gt; stability level&lt;/a&gt;, which is enabled out-of-the-box in WildFly Preview.
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;eclipse-vert-x-overview&quot;&gt;Eclipse Vert.x Overview&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/eclipse-vertx/vert.x/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Eclipse Vert.x&lt;/a&gt; is an open-source toolkit designed for building event-driven, asynchronous applications.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Currently, Vertx instances have been used by &lt;code&gt;opentelemetry&lt;/code&gt; and &lt;code&gt;microprofile-reactive-messaging-smallrye&lt;/code&gt; subsystems within WildFly to provide features powered by vertx components underneath, but there was no central mechanism to configure them.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;key-features-of-the-wildfly-vertx-feature-pack&quot;&gt;Key Features of the WildFly Vertx Feature Pack&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This feature pack provides centralized configuration and management of the Vertx instance, so administrators now have a unified way to define and manage the Vertx instance.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Following the recommendation from the Vert.x team, it is good to have a single Vertx instance for everything, which ensures optimal efficiency and simplicity.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;olist arabic&quot;&gt;
&lt;ol class=&quot;arabic&quot;&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Configurable VertxOptions&lt;/strong&gt;: Administrators can define Vertx configurations using the WildFly management model, ensuring consistency across subsystems.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Expose the Vertx Instance to CDI container&lt;/strong&gt;: When administrators set up a Vertx instance in the vertx subsystem, it is exposed to the CDI container with a fixed qualifier, so other subsystems like opentelemetry and microprofile-reactive-messaging-smallrye can use it using CDI API.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;configuring-vertx-instance-in-wildfly-preview&quot;&gt;Configuring Vertx instance in WildFly Preview&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Vertx instance in WildFly Preview is configured using the new &lt;code&gt;vertx&lt;/code&gt; subsystem. This subsystem isn&amp;#8217;t included in any of WildFly Preview&amp;#8217;s out-of-the-box configuration files, so to use it you&amp;#8217;ll need to add it to your configuration.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;If you&amp;#8217;re using a complete WildFly Preview installation, like the ones available from the &lt;a href=&quot;https://wildfly.org/downloads&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;WildFly downloads page&lt;/a&gt;, then you can use the JBoss CLI to add the vertx extension and subsystem to your configuration:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ /extension=org.wildfly.extension.vertx:add
$ /subsystem=vertx:add&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Once &lt;code&gt;vertx&lt;/code&gt; subsystem is added, you can define some VertxOptions and set up the Vertx instance to refer to the options you just configured:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ /subsystem=vertx/vertx-option=vo:add(event-loop-pool-size=20, max-eventloop-execute-time=5, max-eventloop-execute-time-unit=SECONDS)
$ /subsystem=vertx/vertx=vertx:add(option-name=vo)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;You will see the configuration like:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;title&quot;&gt;standalone.xml&lt;/div&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&amp;lt;subsystem xmlns=&quot;urn:wildfly:vertx:preview:1.0&quot;&amp;gt;
    &amp;lt;vertx option-name=&quot;vo&quot;/&amp;gt;
    &amp;lt;vertx-options&amp;gt;
        &amp;lt;vertx-option name=&quot;vo&quot; event-loop-pool-size=&quot;20&quot; max-eventloop-execute-time=&quot;5&quot; max-eventloop-execute-time-unit=&quot;SECONDS&quot;/&amp;gt;
    &amp;lt;/vertx-options&amp;gt;
&amp;lt;/subsystem&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;For more configuration, please refer to the &lt;a href=&quot;https://github.com/wildfly-extras/wildfly-vertx-feature-pack/wiki/Configuration-Guide&quot;&gt;Configuration-Guide&lt;/a&gt; in the wildfly-vertx-feature-pack Wiki page.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;use-cases&quot;&gt;Use Cases&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;With above configuration, there is a Vertx instance exposed in CDI container with a qualifier, which has been integrated to opentelemetry subsystem (microprofile-reactive-messaging-smallrye subsystem soon) by setting the associated configuration item internally.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;So when you play &lt;a href=&quot;https://github.com/wildfly/quickstart/tree/35.0.0.Beta1/opentelemetry-tracing&quot;&gt;opentelemetry-tracing&lt;/a&gt; quickstart with the vertx configuration above, you will see a log message:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[org.wildfly.extension.vertx] (default task-1) WFLYVTX0008: Use Vertx instance from vertx subsystem&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;which indicates that the Vertx instance from the vertx subsystem is used underneath. The Vertx instance has &lt;code&gt;20&lt;/code&gt; event loop threads set, and it will log a warning if it detects that event loop threads haven&amp;#8217;t returned within &lt;code&gt;5 seconds&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;future-plan&quot;&gt;Future plan&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;There is a plan to increase the stability level to &lt;code&gt;community&lt;/code&gt; and finally to the &lt;code&gt;default&lt;/code&gt; level to be used in the standalone WildFly distributions.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Now the vertx subsystem is integrated internally whenever it is available, maybe it is better to give the decisions to the administrators so that they can configure the opentelemetry subsystem and microprofile-reactive-messaging-smallrye subsystem to use or not the vertx instance coming from the vertx subsystem.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;When this vertx subsystem becomes mature enough and higher stability level, we also consider to move it to WildFly codebase to align the release cycles.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Please try out the vertx subsystem in WildFly Preview and give us your feedback! Weâ€™ll continue to work on the integration, with a goal of including it in standard WildFly in one of the next couple of releases.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</content>
      

      
      
      
      
      

      
        <author>
          <name>Lin Gao</name>
          
          
        </author>
      

      
        
      

      
        <category term="wildfly," />
      
        <category term="vertx," />
      
        <category term="microprofile" />
      

      
        <summary type="html">I&amp;#8217;m excited to announce the integration of the WildFly Vertx Feature Pack into WildFly Preview from WildFly 35 Beta release. This feature pack introduces Vertx configuration capabilities through the WildFly management model, making it easier to manage and integrate Vertx with existing WildFly subsystems.</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">A kubectl plugin to run WildFly management operations on Kubernetes</title>
      <link href="https://jmesnil.net/weblog/2024/12/11/a-kubectl-plugin-for-wildfly-jboss-cli/" rel="alternate" type="text/html" title="A kubectl plugin to run WildFly management operations on Kubernetes" />
      <published>2024-12-12T00:00:00+01:00</published>
      <updated>2024-12-12T00:00:00+01:00</updated>
      <id>https://jmesnil.net/weblog/2024/12/11/a-kubectl-plugin-for-wildfly-jboss-cli/</id>
      
      
        <content type="html" xml:base="https://jmesnil.net/weblog/2024/12/11/a-kubectl-plugin-for-wildfly-jboss-cli/"></content>
      

      
      
      
      
      

      
        <author>
          <name>Jeff Mesnil</name>
          
          
        </author>
      

      
        
      

      
        <category term="kubernetes" />
      

      
        <summary type="html">In this article, Jeff Mesnil presents a kubectl plugin to run WildFly management operations on Kubernetes.</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">WildFly 35 Beta is released!</title>
      <link href="https://hpehl.github.io//wildfly.org/news/2024/12/12/WildFly35Beta-released/" rel="alternate" type="text/html" title="WildFly 35 Beta is released!" />
      <published>2024-12-12T00:00:00+01:00</published>
      <updated>2024-12-12T00:00:00+01:00</updated>
      <id>https://hpehl.github.io//wildfly.org/news/2024/12/12/WildFly35Beta-released</id>
      
      
        <content type="html" xml:base="https://hpehl.github.io//wildfly.org/news/2024/12/12/WildFly35Beta-released/">&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I&amp;#8217;m pleased to announce that the new WildFly 35.0.0.Beta1 release is available for download at &lt;a href=&quot;https://wildfly.org/downloads&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://wildfly.org/downloads&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;new_and_notable&quot;&gt;New and Notable&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This quarter we had a heavy focus on MicroProfile, particularly &lt;a href=&quot;https://microprofile.io/2024/08/22/microprofile-7-0-release/#&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;MicroProfile 7.0&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;WildFly now &lt;a href=&quot;https://docs.wildfly.org/wildfly-proposals/microprofile/WFLY-19592_MicroProfile_Fault_Tolerance_4_1.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;supports MicroProfile Fault Tolerance 4.1&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;WildFly now &lt;a href=&quot;https://docs.wildfly.org/wildfly-proposals/microprofile/WFLY-19591_MicroProfile_OpenAPI_4.0.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;supports MicroProfile OpenAPI 4.0&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Standard WildFly now &lt;a href=&quot;https://docs.wildfly.org/wildfly-proposals/microprofile/WFLY-19866-promote-mp-rest-client-to-default.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;supports MicroProfile REST Client 4.0&lt;/a&gt;. This was previously supported in WildFly Preview.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Standard WildFly now &lt;a href=&quot;https://docs.wildfly.org/wildfly-proposals/observability/WFLY-19846-promote-mp-tel-2-to-default.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;supports MicroProfile Telemetry 2.0&lt;/a&gt;. This was previously supported in WildFly Preview.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Our MicroProfile Reactive Messaging subsystem has added OpenTelemetry tracing integration for &lt;a href=&quot;https://docs.wildfly.org/wildfly-proposals/microprofile/WFLY-19835_microprofile_reactive_messaging_otel_with_kafka.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Kafka connectors&lt;/a&gt; and &lt;a href=&quot;https://docs.wildfly.org/wildfly-proposals/microprofile/WFLY-19836_microprofile_reactive_messaging_otel_with_amqp.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;AMQP connectors&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;There&amp;#8217;s plenty of new things beyond MicroProfile area as well, though:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;WildFly now includes &lt;a href=&quot;https://docs.wildfly.org/wildfly-proposals/scripts/WFCORE-6935-system-daemon-scripts.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;supported &lt;code&gt;systemd&lt;/code&gt; units&lt;/a&gt; in the &lt;code&gt;bin/systemd&lt;/code&gt; directory, replacing the old, unsupported &lt;code&gt;docs/contrib/scripts/systemd&lt;/code&gt; files. The new units include support for a managed domain.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;code&gt;jaxrs&lt;/code&gt; subsystem now &lt;a href=&quot;https://docs.wildfly.org/wildfly-proposals/jaxrs/WFLY-13122_Add_Json_Merge_Patch_support.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;provides JSON merge patch support&lt;/a&gt;. This feature allows the client to send a JSON http request with Content-Type &quot;application/merge-patch+json&quot;, and the JSON content will be directly merged to the target resource.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;We added &lt;a href=&quot;https://docs.wildfly.org/wildfly-proposals/ee/WFLY-19776_Jakarta_Data_in_standard_WildFly.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;support for Jakarta Data 1.0&lt;/a&gt; to standard WildFly. This was previously &lt;a href=&quot;https://www.wildfly.org/news/2024/10/10/jakarta-data/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;included in WildFly Preview 34&lt;/a&gt;; now it is available in standard WildFly as well. This feature is provided at the &lt;a href=&quot;https://docs.wildfly.org/34/Admin_Guide.html#Feature_stability_levels&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;preview&lt;/code&gt; stability level&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;WildFly Preview has  a new &lt;a href=&quot;https://docs.wildfly.org/wildfly-proposals/microprofile/WFLY-19954_Preview_Support_vertx_feature_pack.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;vertx&lt;/code&gt; subsystem and Galleon layer&lt;/a&gt;, intended to give user&amp;#8217;s greater control over the configuration of Vert.x instances running in the server. This feature is provided at the &lt;a href=&quot;https://docs.wildfly.org/34/Admin_Guide.html#Feature_stability_levels&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;preview&lt;/code&gt; stability level&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;WildFly Glow has also received a new feature to &lt;a href=&quot;https://docs.wildfly.org/wildfly-proposals/wf-galleon/WFLY-19855_glow_spaces.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;introduce spaces to structure discovered Galleon feature-packs&lt;/a&gt;, this allows feature packs to be grouped into spaces such as an incubating space to reflect the stability of the feature pack and to allow users to select which spaces they want to use.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;For further details please see the detailed &lt;a href=&quot;https://github.com/wildfly/wildfly/releases/tag/35.0.0.Beta1&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;35.0.0.Beta1 Release Notes&lt;/a&gt; in GitHub.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;As we approach the end of 2024 this is the time of the year where we release the Beta release of the major version just before
we wrap up for the end of the year and will follow up with the Final release once we return in the new year.  Please take this
time as an opportunity to try out this release and provide us with any feedback.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Finally I would like to thank everyone who has contributed to making this release happen, both via direct contributions to WildFly as well as the countless contributions to the projects that WildFly depends upon. We also had a couple of first time contributors this release so I would like to thank &lt;a href=&quot;https://github.com/aldaris&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Peter Major&lt;/a&gt; for taking on one of our &lt;code&gt;good-first-issue&lt;/code&gt; Jira issues to remove redundant code from our application client implementation and &lt;a href=&quot;https://github.com/pedro-hos&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Pedro Hos&lt;/a&gt; for contributing updates to our testsuite to move tests to a more appropriate location.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</content>
      

      
      
      
      
      

      
        <author>
          <name>Darran Lofthouse</name>
          
          
        </author>
      

      
        
      

      
        <category term="announcement" />
      
        <category term="release" />
      

      
        <summary type="html">I&amp;#8217;m pleased to announce that the new WildFly 35.0.0.Beta1 release is available for download at https://wildfly.org/downloads.</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">WildFly 34.0.1 is released!</title>
      <link href="https://hpehl.github.io//wildfly.org/news/2024/11/22/WildFly3401-Released/" rel="alternate" type="text/html" title="WildFly 34.0.1 is released!" />
      <published>2024-11-22T00:00:00+01:00</published>
      <updated>2024-11-22T00:00:00+01:00</updated>
      <id>https://hpehl.github.io//wildfly.org/news/2024/11/22/WildFly3401-Released</id>
      
      
        <content type="html" xml:base="https://hpehl.github.io//wildfly.org/news/2024/11/22/WildFly3401-Released/">&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;WildFly 34.0.1.Final is now available &lt;a href=&quot;https://wildfly.org/downloads&quot;&gt;for download&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;It&amp;#8217;s been about a month since the WildFly 34 release, so we have done a small bug fix update, WildFly 34.0.1. This includes an update to WildFly Preview.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The following issues were resolved in 34.0.1:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;bugs&quot;&gt;Bugs&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;[&lt;a href=&quot;https://issues.redhat.com/browse/WFLY-19891&quot;&gt;WFLY-19891&lt;/a&gt;] - ISPN000299: Unable to acquire lock&amp;#8230;&amp;#8203; when cancelling a persistent timer in @PostConstruct on a suspended node&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;[&lt;a href=&quot;https://issues.redhat.com/browse/WFLY-19909&quot;&gt;WFLY-19909&lt;/a&gt;] - Wrong routing of EJB calls in cluster&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;component-upgrades&quot;&gt;Component Upgrades&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;[&lt;a href=&quot;https://issues.redhat.com/browse/WFLY-19927&quot;&gt;WFLY-19927&lt;/a&gt;] - Upgrade RESTEasy to 6.2.11.Final&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;[&lt;a href=&quot;https://issues.redhat.com/browse/WFLY-19928&quot;&gt;WFLY-19928&lt;/a&gt;] - Upgrade RESTEasy to 7.0.0.Alpha4 (WF preview)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;[&lt;a href=&quot;https://issues.redhat.com/browse/WFLY-19964&quot;&gt;WFLY-19964&lt;/a&gt;] - Upgrade Netty to 4.1.115.Final&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;[&lt;a href=&quot;https://issues.redhat.com/browse/WFLY-19977&quot;&gt;WFLY-19977&lt;/a&gt;] - Upgrade wildfly-clustering to 1.1.3.Final&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Enjoy!&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</content>
      

      
      
      
      
      

      
        <author>
          <name>Paul Ferraro</name>
          
          
        </author>
      

      
        
      

      
        <category term="announcement" />
      
        <category term="release" />
      

      
        <summary type="html">WildFly 34.0.1.Final is now available for download.</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">Using the maven-wildfly-plugin to provision the WildFly to use the PostgreSQL datasource.</title>
      <link href="https://hpehl.github.io//wildfly.org/news/2024/11/14/using-maven-wildfly-plugin-with-postgresql-ds/" rel="alternate" type="text/html" title="Using the maven-wildfly-plugin to provision the WildFly to use the PostgreSQL datasource." />
      <published>2024-11-14T00:00:00+01:00</published>
      <updated>2024-11-14T00:00:00+01:00</updated>
      <id>https://hpehl.github.io//wildfly.org/news/2024/11/14/using-maven-wildfly-plugin-with-postgresql-ds</id>
      
      
        <content type="html" xml:base="https://hpehl.github.io//wildfly.org/news/2024/11/14/using-maven-wildfly-plugin-with-postgresql-ds/">&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Recently I needed to configure a WildFly server to use a PostgreSQL datasource for some testings, and Iâ€™d like to use the`wildfly-maven-plugin` to automate the server provision process, so I invested some time into the topic and finally made it work. To sum up what I have learned, I have put the usage example in this PR:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/jberet/jberet-examples/pull/8&quot;&gt;jberet-examples / add postgresql based repository example #8&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;From the above pull request, we can see that the &lt;code&gt;wildfly-datasources-galleon-pack&lt;/code&gt; feature pack&lt;sup class=&quot;footnote&quot;&gt;[&lt;a id=&quot;_footnoteref_1&quot; class=&quot;footnote&quot; href=&quot;#_footnotedef_1&quot; title=&quot;View footnote.&quot;&gt;1&lt;/a&gt;]&lt;/sup&gt; is added into the plugin configuration:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&amp;lt;feature-pack&amp;gt;
    &amp;lt;location&amp;gt;org.wildfly:wildfly-datasources-galleon-pack:8.0.1.Final&amp;lt;/location&amp;gt;
&amp;lt;/feature-pack&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;And this layer is used:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&amp;lt;layers&amp;gt;
    &amp;lt;layer&amp;gt;postgresql-driver&amp;lt;/layer&amp;gt;
&amp;lt;/layers&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The above layer will just add the PostgreSQL driver into the provisioned WildFly server, and it wonâ€™t add any datasource by default. If I run the provisioned server with the above feature pack and layer added into the configuration with the following command in the example:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;$ mvn clean wildfly:dev -Ppostgres&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I can see from the server log that the PostgreSQL driver is enabled during the server startup process:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;language-txt&quot; data-lang=&quot;txt&quot;&gt;22:11:00,626 INFO  [org.jboss.as.connector.subsystems.datasources] (ServerService Thread Pool -- 42) WFLYJCA0005: Deploying non-JDBC-compliant driver class org.postgresql.Driver (version 42.5)
22:11:00,631 INFO  [org.jboss.as.connector.deployers.jdbc] (MSC service thread 1-6) WFLYJCA0018: Started Driver service with driver-name = postgresql&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;So the feature pack and the layer will prepare the provisioned WildFly server to connect to the PostgreSQL driver, and then we can configure the datasource in the server. In the above example, there are scripts that will add the PostgreSQL datasource&lt;sup class=&quot;footnote&quot;&gt;[&lt;a id=&quot;_footnoteref_2&quot; class=&quot;footnote&quot; href=&quot;#_footnotedef_2&quot; title=&quot;View footnote.&quot;&gt;2&lt;/a&gt;]&lt;/sup&gt;:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;language-txt&quot; data-lang=&quot;txt&quot;&gt;xa-data-source add --name=batch_db --enabled=true --use-java-context=true --use-ccm=true --jndi-name=java:jboss/jsr352/batch_db --xa-datasource-properties={&quot;URL&quot;=&amp;gt;&quot;jdbc:postgresql://localhost:5432/batch_db&quot;} --driver-name=postgresql --password=123 --user-name=batch_user --same-rm-override=false --no-recovery=true
/subsystem=batch-jberet/jdbc-job-repository=batch_db:add(data-source=batch_db)
/subsystem=batch-jberet/:write-attribute(name=default-job-repository,value=batch_db)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The above configuration add the PostgreSQL datasource I need, and then it configures the batch subsystem to use the datasource as its job store, and is used in the &lt;code&gt;wildfly-maven-plugin&lt;/code&gt; configuration section:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&amp;lt;scripts&amp;gt;
    &amp;lt;script&amp;gt;${configure.ds.script}&amp;lt;/script&amp;gt;
&amp;lt;/scripts&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The &lt;code&gt;configure.ds.script&lt;/code&gt; property is configured in the &lt;code&gt;postgresql&lt;/code&gt; profile:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&amp;lt;profile&amp;gt;
    &amp;lt;id&amp;gt;postgres&amp;lt;/id&amp;gt;
    &amp;lt;activation&amp;gt;
        &amp;lt;property&amp;gt;
            &amp;lt;name&amp;gt;postgres&amp;lt;/name&amp;gt;
        &amp;lt;/property&amp;gt;
    &amp;lt;/activation&amp;gt;
    &amp;lt;properties&amp;gt;
        &amp;lt;configure.ds.script&amp;gt;${project.basedir}/add-postgresql-ds.cli&amp;lt;/configure.ds.script&amp;gt;
    &amp;lt;/properties&amp;gt;
&amp;lt;/profile&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;With the script execution during the server startup, I can see from the server log that the datasource is bound:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;language-txt&quot; data-lang=&quot;txt&quot;&gt;17:47:36,063 INFO  [org.jboss.as.connector.subsystems.datasources] (MSC service thread 1-6) WFLYJCA0001: Bound data source [java:jboss/jsr352/batch_db]&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Please note that the &lt;code&gt;script&lt;/code&gt; section configuration can be used with the &lt;code&gt;provision&lt;/code&gt; goal(and it can be used in other goals as well like &lt;code&gt;dev&lt;/code&gt;):&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&amp;lt;execution&amp;gt;
    &amp;lt;goals&amp;gt;
        &amp;lt;goal&amp;gt;provision&amp;lt;/goal&amp;gt;
    &amp;lt;/goals&amp;gt;
&amp;lt;/execution&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;If you want to use the &lt;code&gt;script&lt;/code&gt; with the &lt;code&gt;package&lt;/code&gt; goal:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&amp;lt;execution&amp;gt;
    &amp;lt;goals&amp;gt;
        &amp;lt;goal&amp;gt;package&amp;lt;/goal&amp;gt;
    &amp;lt;/goals&amp;gt;
&amp;lt;/execution&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Then you should configure the script like this:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&amp;lt;packaging-scripts&amp;gt;
    &amp;lt;packaging-script&amp;gt;
        &amp;lt;scripts&amp;gt;
            &amp;lt;script&amp;gt;${configure.ds.script}&amp;lt;/script&amp;gt;
        &amp;lt;/scripts&amp;gt;
        &amp;lt;!-- Expressions resolved during server execution --&amp;gt;
        &amp;lt;resolve-expressions&amp;gt;false&amp;lt;/resolve-expressions&amp;gt;
    &amp;lt;/packaging-script&amp;gt;
&amp;lt;/packaging-scripts&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Here is an example that is showing the above configuration method:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://docs.wildfly.org/wildfly-maven-plugin/releases/5.0/package-mojo.html#packagingScripts&quot;&gt;WildFly Maven Plugin â€“ wildfly:package#packagingScripts&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;To sum up, if you want to play with the &lt;code&gt;jberet-example&lt;/code&gt; as noted in above by using a PostgreSQL back-end DB, you can use &lt;code&gt;podman&lt;/code&gt;(or Docker) to start a container that runs a PostgreSQL database:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;$ podman run -it -e POSTGRES_PASSWORD=123 -e POSTGRES_USER=batch_user -e POSTGRES_DB=batch_db -p 5432:5432 postgres&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Then run:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;$ mvn clean wildfly:dev -Dpostgres&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;You should be able to play with the example.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Above is the introduction to the script configuration. Besides the &lt;code&gt;postgresql-driver&lt;/code&gt; layer, the &lt;code&gt;wildfly-datasources-galleon-pack&lt;/code&gt; also provide other layers as described in the document&lt;sup class=&quot;footnote&quot;&gt;[&lt;a id=&quot;_footnoteref_3&quot; class=&quot;footnote&quot; href=&quot;#_footnotedef_3&quot; title=&quot;View footnote.&quot;&gt;3&lt;/a&gt;]&lt;/sup&gt;:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;quoteblock&quot;&gt;
&lt;blockquote&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;postgresql-default-datasource&lt;/code&gt;: Provision the PostgreSQLDS non xa
datasource and configures it as the default one. Depends on
postgresql-datasource layer.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;postgresql-datasource&lt;/code&gt;: Provision the PostgreSQLDS non xa
datasource. Depends on postgresql-driver layer.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;postgresql-driver&lt;/code&gt;: Provision the postgresql driver. This layer
installs the JBoss Modules module org.postgresql.jdbc.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;As the document described above, the &lt;code&gt;postgresql-datasource&lt;/code&gt; and the &lt;code&gt;postgresql-default-datasource&lt;/code&gt; layers define a &lt;code&gt;PostgreSQLDS&lt;/code&gt; datasource in the provisioned server by default. In addition, the default &lt;code&gt;PostgreSQLDS&lt;/code&gt; datasource uses some built-in parameters to connect to the underlying PostgreSQL database. Here are the parameters that must be defined:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;POSTGRESQL_DATABASE&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;POSTGRESQL_PASSWORD&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;POSTGRESQL_URL&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;POSTGRESQL_USER&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In the example, it also contains a profile called &lt;code&gt;postgres-ds&lt;/code&gt; that showing the usage of the &lt;code&gt;postgresql-datasource&lt;/code&gt; layer:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&amp;lt;layers&amp;gt;
    &amp;lt;layer&amp;gt;postgresql-datasource&amp;lt;/layer&amp;gt;
&amp;lt;/layers&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In the profile it defines the following properties for the &lt;code&gt;PostgreSQLDS&lt;/code&gt; datasource:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&amp;lt;env&amp;gt;
    &amp;lt;POSTGRESQL_JNDI&amp;gt;java:jboss/jsr352/batch_db&amp;lt;/POSTGRESQL_JNDI&amp;gt;
    &amp;lt;POSTGRESQL_DATABASE&amp;gt;batch_db&amp;lt;/POSTGRESQL_DATABASE&amp;gt;
    &amp;lt;POSTGRESQL_PASSWORD&amp;gt;123&amp;lt;/POSTGRESQL_PASSWORD&amp;gt;
    &amp;lt;POSTGRESQL_URL&amp;gt;jdbc:postgresql://localhost:5432/batch_db&amp;lt;/POSTGRESQL_URL&amp;gt;
    &amp;lt;POSTGRESQL_USER&amp;gt;batch_user&amp;lt;/POSTGRESQL_USER&amp;gt;
&amp;lt;/env&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;After the above configuration is used, and if the provisioned server is run by &lt;code&gt;mvn clean wildfly:dev -Ppostgres-ds&lt;/code&gt;, we can check the datasource by using the CLI tool to connect to the WildFly server:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;./jboss-cli.sh --connect
[standalone@localhost:9990 /]&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;And then we can check the configured datasource in the server:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;language-txt&quot; data-lang=&quot;txt&quot;&gt;[standalone@localhost:9990 /] /subsystem=datasources:read-resource
{
    &quot;outcome&quot; =&amp;gt; &quot;success&quot;,
    &quot;result&quot; =&amp;gt; {
        &quot;data-source&quot; =&amp;gt; {&quot;PostgreSQLDS&quot; =&amp;gt; undefined},
        &quot;jdbc-driver&quot; =&amp;gt; {&quot;postgresql&quot; =&amp;gt; undefined},
        &quot;xa-data-source&quot; =&amp;gt; undefined
    }
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;You can see the &lt;code&gt;PostgreSQLDS&lt;/code&gt; is now the configured datasource. Then we can check the &lt;code&gt;default-job-repository&lt;/code&gt; used by the &lt;code&gt;batch-jberet&lt;/code&gt; subsystem:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;language-txt&quot; data-lang=&quot;txt&quot;&gt;[standalone@localhost:9990 /] /subsystem=batch-jberet:read-resource
{
    &quot;outcome&quot; =&amp;gt; &quot;success&quot;,
    &quot;result&quot; =&amp;gt; {
        &quot;restart-jobs-on-resume&quot; =&amp;gt; true,
        &quot;security-domain&quot; =&amp;gt; &quot;ApplicationDomain&quot;,
        &quot;default-job-repository&quot; =&amp;gt; &quot;batch_db&quot;,
        &quot;default-thread-pool&quot; =&amp;gt; &quot;batch&quot;,
        &quot;in-memory-job-repository&quot; =&amp;gt; {&quot;in-memory&quot; =&amp;gt; undefined},
        &quot;jdbc-job-repository&quot; =&amp;gt; {&quot;batch_db&quot; =&amp;gt; undefined},
        &quot;thread-factory&quot; =&amp;gt; undefined,
        &quot;thread-pool&quot; =&amp;gt; {&quot;batch&quot; =&amp;gt; undefined}
    }
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;As the output shown above, the &lt;code&gt;default-job-repository&lt;/code&gt; is configured to use the &lt;code&gt;batch_db&lt;/code&gt;. Finally, we can check the definition of the &lt;code&gt;batch_db&lt;/code&gt;:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;language-txt&quot; data-lang=&quot;txt&quot;&gt;[standalone@localhost:9990 /] /subsystem=batch-jberet/jdbc-job-repository=batch_db:read-resource
{
    &quot;outcome&quot; =&amp;gt; &quot;success&quot;,
    &quot;result&quot; =&amp;gt; {
        &quot;data-source&quot; =&amp;gt; &quot;PostgreSQLDS&quot;,
        &quot;execution-records-limit&quot; =&amp;gt; undefined
    }
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;It&amp;#8217;s clear that the used &lt;code&gt;data-source&lt;/code&gt; is &lt;code&gt;PostgreSQLDS&lt;/code&gt;. This configuration is done by the &lt;code&gt;enable-jdbc-job-repo.cli&lt;/code&gt;:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;language-txt&quot; data-lang=&quot;txt&quot;&gt;/subsystem=batch-jberet/jdbc-job-repository=batch_db:add(data-source=PostgreSQLDS)
/subsystem=batch-jberet/:write-attribute(name=default-job-repository,value=batch_db)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;And the above script is configured to be executed in the &lt;code&gt;postgres-ds&lt;/code&gt; profile of the example:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&amp;lt;properties&amp;gt;
    &amp;lt;configure.ds.script&amp;gt;${project.basedir}/enable-jdbc-job-repo.cli&amp;lt;/configure.ds.script&amp;gt;
&amp;lt;/properties&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;If you check the configuration by running the example with the &lt;code&gt;-Ppostgres&lt;/code&gt; profile. You can see the following output from the CLI:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;language-txt&quot; data-lang=&quot;txt&quot;&gt;[standalone@localhost:9990 /] /subsystem=batch-jberet/jdbc-job-repository=batch_db:read-resource
{
    &quot;outcome&quot; =&amp;gt; &quot;success&quot;,
    &quot;result&quot; =&amp;gt; {
        &quot;data-source&quot; =&amp;gt; &quot;batch_db&quot;,
        &quot;execution-records-limit&quot; =&amp;gt; undefined
    }
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Which is expected, because we configured the data-source manually by using the &lt;code&gt;postgresql-driver&lt;/code&gt; layer.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Above is the introduction to the usage of the &lt;code&gt;wildfly-datasources-galleon-pack&lt;/code&gt; in the &lt;code&gt;maven-wildfly-plugin&lt;/code&gt;. An alternative way to do the configuration to use the &lt;code&gt;add-resources&lt;/code&gt; goal in the &lt;code&gt;wildfly-maven-plugin&lt;/code&gt;. The document of the WildFly Maven Plugin shows its usage:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://docs.wildfly.org/wildfly-maven-plugin/releases/5.0/add-resource-example.html&quot;&gt;WildFly Maven Plugin â€“ Adding Resources Examples&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;With the above configuration, the datasource is deployed during the &lt;code&gt;add-resource&lt;/code&gt; goal running process. Because this method depends on the &lt;code&gt;add-resource&lt;/code&gt; goal, so it needs server to be run firstly, and then deploy the PostgreSQL driver(The PostgreSQL driver need to be added into the dependencies section for it to be deployed).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In addition, there is another way to do the PostgreSQL datasource configuration by using the Glow&lt;sup class=&quot;footnote&quot;&gt;[&lt;a id=&quot;_footnoteref_4&quot; class=&quot;footnote&quot; href=&quot;#_footnotedef_4&quot; title=&quot;View footnote.&quot;&gt;4&lt;/a&gt;]&lt;/sup&gt; in the &lt;code&gt;wildfly-maven-plugin&lt;/code&gt;. Here is the relative document to describe its usage:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://www.wildfly.org/guides/database-integrating-with-postgresql&quot;&gt;Integrating with a PostgreSQL database&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Please note that the &lt;code&gt;batch-processing&lt;/code&gt; example&lt;sup class=&quot;footnote&quot;&gt;[&lt;a id=&quot;_footnoteref_5&quot; class=&quot;footnote&quot; href=&quot;#_footnotedef_5&quot; title=&quot;View footnote.&quot;&gt;5&lt;/a&gt;]&lt;/sup&gt; in the WildFly Quickstart uses the above Glow solution to do the datasource configuration, and here is a relative pull request that contains the discussion related with the Glow usage:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/wildfly/quickstart/pull/973&quot;&gt;WFLY-19790 Replaces -ds.xml deprecated filed with Jakartaâ€™s DataSouâ€¦ by emmartins Â· Pull Request #973 Â· wildfly/quickstart&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In the above pull request, it also contains the example usage of the &lt;code&gt;jakarta.annotation.sql.DataSourceDefinition&lt;/code&gt; class that eliminates the usage of the CLI script to configure the datasource&lt;sup class=&quot;footnote&quot;&gt;[&lt;a id=&quot;_footnoteref_6&quot; class=&quot;footnote&quot; href=&quot;#_footnotedef_6&quot; title=&quot;View footnote.&quot;&gt;6&lt;/a&gt;]&lt;/sup&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Personally I prefer to use the &lt;code&gt;wildfly-datasources-galleon-pack&lt;/code&gt; to configure the datasource because I can either use the default datasource layer configuration or manually configure it by choosing different layers, but you can always choose a solution that best fits your own projectâ€™s requirement.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;references&quot;&gt;References&lt;/h3&gt;

&lt;/div&gt;
&lt;div id=&quot;footnotes&quot;&gt;
&lt;hr&gt;
&lt;div class=&quot;footnote&quot; id=&quot;_footnotedef_1&quot;&gt;
&lt;a href=&quot;#_footnoteref_1&quot;&gt;1&lt;/a&gt;. &lt;a href=&quot;https://github.com/wildfly-extras/wildfly-datasources-galleon-pack&quot;&gt;wildfly-extras/wildfly-datasources-galleon-pack&lt;/a&gt;
&lt;/div&gt;
&lt;div class=&quot;footnote&quot; id=&quot;_footnotedef_2&quot;&gt;
&lt;a href=&quot;#_footnoteref_2&quot;&gt;2&lt;/a&gt;. &lt;a href=&quot;https://github.com/jberet/jberet-examples/blob/main/deployment/add-postgresql-ds.cli&quot; class=&quot;bare&quot;&gt;https://github.com/jberet/jberet-examples/blob/main/deployment/add-postgresql-ds.cli&lt;/a&gt;
&lt;/div&gt;
&lt;div class=&quot;footnote&quot; id=&quot;_footnotedef_3&quot;&gt;
&lt;a href=&quot;#_footnoteref_3&quot;&gt;3&lt;/a&gt;. &lt;a href=&quot;https://github.com/wildfly-extras/wildfly-datasources-galleon-pack/blob/main/doc/postgresql/README.md&quot; class=&quot;bare&quot;&gt;https://github.com/wildfly-extras/wildfly-datasources-galleon-pack/blob/main/doc/postgresql/README.md&lt;/a&gt;
&lt;/div&gt;
&lt;div class=&quot;footnote&quot; id=&quot;_footnotedef_4&quot;&gt;
&lt;a href=&quot;#_footnoteref_4&quot;&gt;4&lt;/a&gt;. &lt;a href=&quot;https://github.com/wildfly/wildfly-glow&quot;&gt;wildfly/wildfly-glow:Galleon Layers Output from War: Automatic discover of WildFly provisioning information from an application.&lt;/a&gt;
&lt;/div&gt;
&lt;div class=&quot;footnote&quot; id=&quot;_footnotedef_5&quot;&gt;
&lt;a href=&quot;#_footnoteref_5&quot;&gt;5&lt;/a&gt;. &lt;a href=&quot;https://github.com/wildfly/quickstart/tree/main/batch-processing&quot;&gt;quickstart/batch-processing at main Â· wildfly/quickstart&lt;/a&gt;
&lt;/div&gt;
&lt;div class=&quot;footnote&quot; id=&quot;_footnotedef_6&quot;&gt;
&lt;a href=&quot;#_footnoteref_6&quot;&gt;6&lt;/a&gt;. &lt;a href=&quot;https://github.com/wildfly/quickstart/pull/973/files#diff-c2ef4683cc221a472071d924c4598af19d1152ad40f3b773cf4fe9c60fbc686d&quot;&gt;WFLY-19790 Replaces -ds.xml deprecated filed with Jakartaâ€™s DataSouâ€¦ by emmartins Â· Pull Request #973 Â· wildfly/quickstart&lt;/a&gt;
&lt;/div&gt;
&lt;/div&gt;</content>
      

      
      
      
      
      

      
        <author>
          <name>é˜¿ç”·</name>
          
          
        </author>
      

      
        
      

      
        <category term="wildfly" />
      
        <category term="wildfly-maven-plugin" />
      
        <category term="postgresql" />
      
        <category term="jberet" />
      
        <category term="glow" />
      

      
        <summary type="html">Recently I needed to configure a WildFly server to use a PostgreSQL datasource for some testings, and Iâ€™d like to use the`wildfly-maven-plugin` to automate the server provision process, so I invested some time into the topic and finally made it work. To sum up what I have learned, I have put the usage example in this PR:</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">Next WildFly Mini Conference</title>
      <link href="https://hpehl.github.io//wildfly.org/news/2024/11/12/WildFly-mini-conference/" rel="alternate" type="text/html" title="Next WildFly Mini Conference" />
      <published>2024-11-12T00:00:00+01:00</published>
      <updated>2024-11-12T00:00:00+01:00</updated>
      <id>https://hpehl.github.io//wildfly.org/news/2024/11/12/WildFly-mini-conference</id>
      
      
        <content type="html" xml:base="https://hpehl.github.io//wildfly.org/news/2024/11/12/WildFly-mini-conference/">&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The WildFly team organizes the next WildFly mini conference. It will take place on &lt;strong&gt;Wednesday, November 20, 2024&lt;/strong&gt;. It starts at &lt;strong&gt;14:00 UTC&lt;/strong&gt; and includes &lt;strong&gt;four sessions&lt;/strong&gt; with topics related to WildFly. All sessions will be streamed live on YouTube.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;For more information, please take a look at the conference page at &lt;a href=&quot;https://www.wildfly.org/conference/&quot; class=&quot;bare&quot;&gt;https://www.wildfly.org/conference/&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We&amp;#8217;re looking forward to seeing you there!&lt;/p&gt;
&lt;/div&gt;</content>
      

      
      
      
      
      

      
        <author>
          <name>Harald Pehl</name>
          
          
        </author>
      

      
        
      

      
        <category term="announcement" />
      
        <category term="conference" />
      

      
        <summary type="html">The WildFly team organizes the next WildFly mini conference. It will take place on Wednesday, November 20, 2024. It starts at 14:00 UTC and includes four sessions with topics related to WildFly. All sessions will be streamed live on YouTube.</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">Playing with Generative AI with WildFly</title>
      <link href="https://hpehl.github.io//wildfly.org/news/2024/11/04/WildFly-playing-with-generative-ai/" rel="alternate" type="text/html" title="Playing with Generative AI with WildFly" />
      <published>2024-11-04T00:00:00+01:00</published>
      <updated>2024-11-04T00:00:00+01:00</updated>
      <id>https://hpehl.github.io//wildfly.org/news/2024/11/04/WildFly-playing-with-generative-ai</id>
      
      
        <content type="html" xml:base="https://hpehl.github.io//wildfly.org/news/2024/11/04/WildFly-playing-with-generative-ai/">&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This blog post provides information on how to use the AI Galleon Feature pack to write generative AI applications.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Please note that this feature pack is currently a proof of concept and is not ready for production.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;You can access the release &lt;a href=&quot;https://github.com/wildfly-extras/wildfly-ai-feature-pack/releases/tag/0.1.0&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;strong&gt;org.wildfly:wildfly-ai-galleon-pack:0.1.0&lt;/strong&gt;&lt;/a&gt; to follow the examples provided here.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;whats-in-this-feature-pack&quot;&gt;What&amp;#8217;s in this feature pack ?&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This feature pack is work in progress so we will only cover what is already available as of today.
It relies on configuring and exposing &lt;a href=&quot;https://github.com/langchain4j&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;LangChain4J&lt;/a&gt; via &lt;a href=&quot;https://github.com/smallrye/smallrye-llm&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;smallrye-llm&lt;/a&gt; to your application.
It provides a way to inject some basic elements to make creating a Retrieval-Augmented Generation (RAG) application easy.
It helps by configuring and providing all the required elements for such an application.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;what-is-rag&quot;&gt;What is RAG ?&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;As its name indicates, RAG is about retrieving relevant elements from pieces of information in your data and using them to enrich the prompt before sending the whole query (initial prompt + relevant data) to the LLM.
The goal is to provide sufficient context to the LLM so that it can use those pieces of information and not hallucinate.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect3&quot;&gt;
&lt;h4 id=&quot;the-core-elements-of-rag&quot;&gt;The core elements of RAG&lt;/h4&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;As you can see on the schema below, you need a few elements to provide a RAG functionality:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;some components to get relevant pieces of information. We will focus on using a &apos;semantic&apos; search approach, a.k.a. vector search, so we will need:&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;an embedding model to create embeddings (aka semantic vectors) from the user query thus creating an embedding query.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;an embedding store containing all the embeddings and the associated segments of data and against which/ the embedding query will be run.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;a client to the LLM to send the enriched query against.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;/assets/img/news/ai/rag.png&quot; alt=&quot;RAG&quot;&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect3&quot;&gt;
&lt;h4 id=&quot;rag-with-langchain4j&quot;&gt;RAG with LangChain4j&lt;/h4&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The current feature pack provides a basic integration with the library LangChain4J. That means that currently we are exposing the LangChain4J API to the application.
So it provides:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;dev.langchain4j.model.embedding.EmbeddingModel&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;dev.langchain4j.store.embedding.EmbeddingStore&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;dev.langchain4j.rag.content.retriever.ContentRetriever&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;dev.langchain4j.model.chat.ChatLanguageModel&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;So you can configure instances of these objects via the WildFly management API to be injected via CDI into your application.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We also support partially LangChain4J &lt;a href=&quot;https://docs.langchain4j.dev/tutorials/ai-services/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;strong&gt;AI Services&lt;/strong&gt;&lt;/a&gt; using &lt;a href=&quot;https://github.com/smallrye/smallrye-llm/blob/0.0.1/smallrye-llm-langchain4j-core/src/main/java/io/smallrye/llm/spi/RegisterAIService.java&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;RegisterAIService&lt;/a&gt; from &lt;a href=&quot;https://github.com/smallrye/smallrye-llm&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;smallrye-llm&lt;/a&gt;. Please note that this will change in the future as this project is quite new.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;the-feature-pack&quot;&gt;The feature pack&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The feature pack is composed of a subsystem and a CDI extension. It supports several layers based on what you are trying to acheive. The list is not exhaustive and may vary in the future.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect3&quot;&gt;
&lt;h4 id=&quot;the-layers&quot;&gt;The layers&lt;/h4&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This feature pack provides several layers to choose from when provisioning your server:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Support for chat models to interact with a LLM via &lt;code&gt;ChatModelLanguage&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;mistral-ai-chat-model&lt;/code&gt;: provides integration with &lt;a href=&quot;https://mistral.ai/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Mistral AI&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;ollama-chat-model&lt;/code&gt;: provides integration with &lt;a href=&quot;https://ollama.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Ollama&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;openai-chat-model&lt;/code&gt;: provides integration with &lt;a href=&quot;https://openai.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;OpenAI&lt;/a&gt; (current configuration target &lt;a href=&quot;https://console.groq.com/playground&quot;&gt;Groq&lt;/a&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Support for embedding models via &lt;code&gt;EmbeddingModel&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;in-memory-embedding-model-all-minilm-l6-v2&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;in-memory-embedding-model-all-minilm-l6-v2-q&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;in-memory-embedding-model-bge-small-en&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;in-memory-embedding-model-bge-small-en-q&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;in-memory-embedding-model-bge-small-en-v15&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;in-memory-embedding-model-bge-small-en-v15-q&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;in-memory-embedding-model-e5-small-v2&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;in-memory-embedding-model-e5-small-v2-q&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;ollama-embedding-model&lt;/code&gt;: using &lt;a href=&quot;https://ollama.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Ollama&lt;/a&gt; to compute embeddings.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Support for embedding stores via  &lt;code&gt;EmbeddingStore&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;in-memory-embedding-store&lt;/code&gt;: provides integration with an in memory embedding store (for demo purpose only).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;weaviate-embedding-store&lt;/code&gt;: provides integration with &lt;a href=&quot;https://weaviate.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Weaviate&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Support for content retriever as &lt;code&gt;ContentRetriever&lt;/code&gt; for RAG:&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;default-embedding-content-retriever&lt;/code&gt;: default content retriever using an &lt;code&gt;in-memory-embedding-store&lt;/code&gt; and &lt;code&gt;in-memory-embedding-model-all-minilm-l6-v2&lt;/code&gt; for embedding model.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;web-search-engines&lt;/code&gt;: provides support for Google and Tavily search engine.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The layers will provide the required management resources, operations and modules.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect3&quot;&gt;
&lt;h4 id=&quot;provisioning-the-feature-pack&quot;&gt;Provisioning the feature pack&lt;/h4&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&amp;lt;!-- The WildFly plugin deploys your war to a local WildFly container --&amp;gt;
&amp;lt;plugin&amp;gt;
    &amp;lt;groupId&amp;gt;org.wildfly.plugins&amp;lt;/groupId&amp;gt;
    &amp;lt;artifactId&amp;gt;wildfly-maven-plugin&amp;lt;/artifactId&amp;gt;
    &amp;lt;version&amp;gt;${version.wildfly.maven.plugin}&amp;lt;/version&amp;gt;
    &amp;lt;configuration&amp;gt;
        &amp;lt;feature-packs&amp;gt;
            &amp;lt;feature-pack&amp;gt;
                &amp;lt;location&amp;gt;org.wildfly:wildfly-galleon-pack:${version.wildfly.bom}&amp;lt;/location&amp;gt;
            &amp;lt;/feature-pack&amp;gt;
            &amp;lt;feature-pack&amp;gt;
                &amp;lt;location&amp;gt;org.wildfly:wildfly-ai-galleon-pack:0.1.0&amp;lt;/location&amp;gt;
            &amp;lt;/feature-pack&amp;gt;
        &amp;lt;/feature-packs&amp;gt;
        &amp;lt;layers&amp;gt;
            &amp;lt;layer&amp;gt;cloud-server&amp;lt;/layer&amp;gt;
            &amp;lt;layer&amp;gt;ollama-chat-model&amp;lt;/layer&amp;gt;
            &amp;lt;layer&amp;gt;default-embedding-content-retriever&amp;lt;/layer&amp;gt;
            &amp;lt;!-- default-embedding-content-retriever provides the following layers --&amp;gt;
            &amp;lt;!--
                &amp;lt;layer&amp;gt;in-memory-embedding-model-all-minilm-l6-v2&amp;lt;/layer&amp;gt;
                &amp;lt;layer&amp;gt;in-memory-embedding-store&amp;lt;/layer&amp;gt;
            --&amp;gt;
            &amp;lt;!-- Existing layers that can be used instead--&amp;gt;
            &amp;lt;!--
                &amp;lt;layer&amp;gt;ollama-embedding-model&amp;lt;/layer&amp;gt;
                &amp;lt;layer&amp;gt;openai-chat-model&amp;lt;/layer&amp;gt;
                &amp;lt;layer&amp;gt;mistral-ai-chat-model&amp;lt;/layer&amp;gt;
                &amp;lt;layer&amp;gt;weaviate-embedding-store&amp;lt;/layer&amp;gt;
                &amp;lt;layer&amp;gt;web-search-engines&amp;lt;/layer&amp;gt;
            --&amp;gt;
        &amp;lt;/layers&amp;gt;
        &amp;lt;name&amp;gt;ROOT.war&amp;lt;/name&amp;gt;
        &amp;lt;extraServerContentDirs&amp;gt;
            &amp;lt;extraServerContentDir&amp;gt;extra-content&amp;lt;/extraServerContentDir&amp;gt;
        &amp;lt;/extraServerContentDirs&amp;gt;
        &amp;lt;packagingScripts&amp;gt;
            &amp;lt;packaging-script&amp;gt;
                &amp;lt;scripts&amp;gt;
                    &amp;lt;script&amp;gt;./src/scripts/configure_llm.cli&amp;lt;/script&amp;gt;
                &amp;lt;/scripts&amp;gt;
            &amp;lt;/packaging-script&amp;gt;
        &amp;lt;/packagingScripts&amp;gt;
    &amp;lt;/configuration&amp;gt;
    &amp;lt;executions&amp;gt;
        &amp;lt;execution&amp;gt;
            &amp;lt;goals&amp;gt;
                &amp;lt;goal&amp;gt;package&amp;lt;/goal&amp;gt;
            &amp;lt;/goals&amp;gt;
        &amp;lt;/execution&amp;gt;
    &amp;lt;/executions&amp;gt;
&amp;lt;/plugin&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In our example we are provisioning everything via layers.
The script &lt;code&gt;configure_llm.cli&lt;/code&gt; provides sample commands to further configure the subsystem manually.
Please note that all modules might not be provisionned so you need to add the corresponding layers in &lt;code&gt;the pom.xml&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;###Embedding Models
# Adding the SentenceTransformers all-MiniLM-L6-v2 EmbeddingModel that runs within the server JVM.
#/subsystem=ai/embedding-model=myembedding:add(module=dev.langchain4j.embeddings.all-minilm-l6-v2, embedding-class=dev.langchain4j.model.embedding.onnx.allminilml6v2.AllMiniLmL6V2EmbeddingModel)


# Adding an Ollama EmbeddingModel connecting to http://192.168.1.11:11434 using the model llama3:8b.
#/subsystem=ai/ollama-embedding-model=test:add(base-url=&quot;http://192.168.1.11:11434&quot;, model-name=&quot;llama3:8b&quot;)

###Chat Language Models
# Adding an OpenAI REST ChatLanguageModel connecting to Groq using the model llama3-8b-8192.
#/subsystem=ai/openai-chat-model=mychat:add(base-url=&quot;https://api.groq.com/openai/v1&quot;, api-key=&quot;${env.GROQ_API_KEY}&quot;, log-requests=&quot;true&quot;, log-responses=&quot;true&quot;, model-name=&quot;llama3-8b-8192&quot;)

### Mistral
#/subsystem=ai/mistral-ai-chat-model=test:add(api-key=&quot;${env.MISTRAL_API_KEY}&quot;, base-url=&quot;https://api.mistral.ai/v1&quot;, log-requests=&quot;true&quot;, log-responses=&quot;true&quot;, model-name=&quot;mistral-small-latest&quot;)


# Adding an Ollama ChatLanguageModel connecting to http://127.0.0.1:11434 using the model llama3:8b.
#/subsystem=ai/ollama-chat-model=mychat:add(model-name=&quot;llama3.1:8b&quot;, base-url=&quot;http://127.0.0.1:11434&quot;, log-requests=&quot;true&quot;, log-responses=&quot;true&quot;, temperature=&quot;0.9&quot;)
#/subsystem=ai/ollama-chat-model=mychat:add(model-name=&quot;mistral&quot;, base-url=&quot;http://127.0.0.1:11434&quot;, log-requests=&quot;true&quot;, log-responses=&quot;true&quot;, temperature=&quot;0.9&quot;)
#/subsystem=ai/openai-chat-model=mychat:add(base-url=&quot;https://api.groq.com/openai/v1&quot;, api-key=&quot;${env.GROQ_API_KEY}&quot;,model-name=&quot;llama3:8b&quot;)


###Embedding Stores

# Adding Weaviate as an embedding store
# podman run --rm -p 8090:8080 -p 50051:50051  -e AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED=&quot;true&quot; -v $SOME_PATH/volumes/weaviate/_data:/data --name=weaviate cr.weaviate.io/semitechnologies/weaviate:1.24.10
#/socket-binding-group=standard-sockets/remote-destination-outbound-socket-binding=weaviate:add(host=localhost, port=8090)
#/subsystem=ai/weaviate-embedding-store=mystore:add(socket-binding=weaviate, ssl-enabled=false, object-class=Simple, metadata=[url,language,parent_url,file_name,file_path,title,subtitle])
#/subsystem=logging/logger=io.weaviate.client.client:add(level=TRACE)

# Adding in memory embedding store loading form a json file
#/subsystem=ai/in-memory-embedding-store=mystore:add(file=/home/ehugonne/dev/AI/crawler/crawler/wildfly-admin-embeddings.json)


###Content retrievers

# Adding a content retriever using embeddings
#/subsystem=ai/embedding-store-content-retriever=myretriever:add(embedding-model=myembedding,embedding-store=mystore, max-results=2, min-score=0.7)

# Adding a content retriever using Tavily search engine
#/subsystem=ai/web-search-content-retriever=myretriever:add(tavily={api-key=${env.TAVILY_API_KEY}, base-url=https://api.tavily.com, connect-timeout=20000, exclude-domains=[example.org], include-domains=[example.com], include-answer=true})&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;putting-it-all-together-the-webchat-example&quot;&gt;Putting it all together: The WebChat example&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;To put it all together we are going to execute a sample RAG application with a web interface. It will use embeddings that were previously computed using WildFly documentation.
If you want to check the code of the application used to create embeddings out of WildFly documentation and store the results you can look at &lt;a href=&quot;https://github.com/ehsavoie/crawler&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/ehsavoie/crawler&lt;/a&gt;. It can be used to fill either a JSON file or a weaviate embedding store.The embeddings were computed using the &lt;strong&gt;All-MiniLM-L6-v2 EmbeddingModel&lt;/strong&gt;, so we need to use the same model in our RAG application.
This embedding model will be used to compute the embedding of the user query and then the application will search for the nearest contents in the in-memory embedding store.
The content retriever will retrieve and append those contents to the user query to create the prompt that will be sent to the LLM we are connected to, via the ChatLanguageModel.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect3&quot;&gt;
&lt;h4 id=&quot;running-ollama-locally&quot;&gt;Running Ollama locally&lt;/h4&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;podman run -d --rm --name ollama --replace --pull=always -p 11434:11434 -v ollama:/root/.ollama --stop-signal=SIGKILL docker.io/ollama/ollama&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Execute the following command to select the expected model (type &lt;strong&gt;/bye&lt;/strong&gt; to quit the ollama prompt):&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;podman exec -it ollama ollama run llama3.1:8b&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect3&quot;&gt;
&lt;h4 id=&quot;configuring-the-server&quot;&gt;Configuring the server&lt;/h4&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We will use the following layers:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;default-embedding-content-retriever&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ollama-chat-model&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;So the pom.xml should look like this:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&amp;lt;!-- The WildFly plugin deploys your war to a local JBoss AS container --&amp;gt;
&amp;lt;plugin&amp;gt;
    &amp;lt;groupId&amp;gt;org.wildfly.plugins&amp;lt;/groupId&amp;gt;
    &amp;lt;artifactId&amp;gt;wildfly-maven-plugin&amp;lt;/artifactId&amp;gt;
    &amp;lt;version&amp;gt;${version.wildfly.maven.plugin}&amp;lt;/version&amp;gt;
    &amp;lt;configuration&amp;gt;
        &amp;lt;feature-packs&amp;gt;
            &amp;lt;feature-pack&amp;gt;
                &amp;lt;location&amp;gt;org.wildfly:wildfly-galleon-pack:${version.wildfly.bom}&amp;lt;/location&amp;gt;
            &amp;lt;/feature-pack&amp;gt;
            &amp;lt;feature-pack&amp;gt;
                &amp;lt;location&amp;gt;org.wildfly:wildfly-ai-galleon-pack:0.1.0&amp;lt;/location&amp;gt;
            &amp;lt;/feature-pack&amp;gt;
        &amp;lt;/feature-packs&amp;gt;
        &amp;lt;layers&amp;gt;
            &amp;lt;layer&amp;gt;cloud-server&amp;lt;/layer&amp;gt;
            &amp;lt;layer&amp;gt;default-embedding-content-retriever&amp;lt;/layer&amp;gt;
            &amp;lt;layer&amp;gt;ollama-chat-model&amp;lt;/layer&amp;gt;
        &amp;lt;/layers&amp;gt;
        &amp;lt;name&amp;gt;ROOT.war&amp;lt;/name&amp;gt;
        &amp;lt;packagingScripts&amp;gt;
            &amp;lt;packaging-script&amp;gt;
                &amp;lt;scripts&amp;gt;
                    &amp;lt;script&amp;gt;./src/main/resources/scripts/configure_llm.cli&amp;lt;/script&amp;gt;
                &amp;lt;/scripts&amp;gt;
            &amp;lt;/packaging-script&amp;gt;
        &amp;lt;/packagingScripts&amp;gt;
    &amp;lt;/configuration&amp;gt;
    &amp;lt;executions&amp;gt;
        &amp;lt;execution&amp;gt;
            &amp;lt;goals&amp;gt;
                &amp;lt;goal&amp;gt;package&amp;lt;/goal&amp;gt;
            &amp;lt;/goals&amp;gt;
        &amp;lt;/execution&amp;gt;
    &amp;lt;/executions&amp;gt;
&amp;lt;/plugin&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect3&quot;&gt;
&lt;h4 id=&quot;the-code&quot;&gt;The code&lt;/h4&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The code itself is quite straightforward:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;@ServerEndpoint(value = &quot;/websocket/chatbot&quot;,
        configurator = org.wildfly.ai.websocket.CustomConfigurator.class)
public class RagChatBot {
    @Inject
    @Named(value = &quot;ollama&quot;)
    ChatLanguageModel chatModel;
    @Inject
    @Named(value = &quot;embedding-store-retriever&quot;)
    ContentRetriever retriever;

  private static final String PROMPT_TEMPLATE = &quot;You are a WildFly expert who understands well how to administrate the WildFly server and its components\n&quot;
            + &quot;Objective: answer the user question delimited by  ---\n&quot;
            + &quot;\n&quot;
            + &quot;---\n&quot;
            + &quot;{{userMessage}}\n&quot;
            + &quot;---&quot;
            + &quot;\n Here is some data to help you:\n&quot;
            + &quot;{{contents}}&quot;;

  @OnMessage
  public String sayHello(String question, Session session) throws IOException {
        ChatMemory chatMemory = MessageWindowChatMemory.builder().id(session.getUserProperties().get(&quot;httpSessionId&quot;)).maxMessages(3).build();
        ConversationalRetrievalChain chain = ConversationalRetrievalChain.builder()
                .chatLanguageModel(chatModel)
                .chatMemory(chatMemory)
                .retrievalAugmentor(createBasicRag())
                .build();
        String result = chain.execute(question).replace(&quot;\n&quot;, &quot;&amp;lt;br/&amp;gt;&quot;);
        return result;
    }

    private RetrievalAugmentor createBasicRag() {
        return DefaultRetrievalAugmentor.builder()
                .contentRetriever(retriever)
                .contentInjector(DefaultContentInjector.builder()
                        .promptTemplate(PromptTemplate.from(PROMPT_TEMPLATE))
                        .build())
                .queryRouter(new DefaultQueryRouter(retriever))
                .build();
    }
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The &lt;code&gt;dev.langchain4j.rag.content.retriever.ContentRetriever&lt;/code&gt; called &lt;strong&gt;embedding-store-retriever&lt;/strong&gt; defined in the subsystem is injected into our WebSocket endpoint using the the &lt;code&gt;@Named&lt;/code&gt; annotation.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;It is used to instantiate a &lt;code&gt;dev.langchain4j.rag.RetrievalAugmentor&lt;/code&gt; which is in charge of retrieving the contents and enriching the prompt with them.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In the same way, the &lt;code&gt;dev.langchain4j.model.chat.ChatLanguageModel&lt;/code&gt; called &lt;strong&gt;ollama&lt;/strong&gt; defined in the subsystem is injected into our WebSocket endpoint using the &lt;code&gt;@Named&lt;/code&gt; annotation.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;With those two elements, a &lt;code&gt;dev.langchain4j.chain.ConversationalRetrievalChain&lt;/code&gt; is created and used to interact with the LLM and send back the answer to the client using the WebSocket.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The final code of the application is a bit more complex than what is exposed here as it tries to keep some context between user queries.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect3&quot;&gt;
&lt;h4 id=&quot;building-and-running-the-application&quot;&gt;Building and Running the application&lt;/h4&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;First you need to clone it from &lt;a href=&quot;https://github.com/ehsavoie/webchat/tree/0.1.x&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/ehsavoie/webchat&lt;/a&gt; and select the branch 0.1.x.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In a console execute the following commands:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;git clone https://github.com/ehsavoie/webchat.git
cd webchat
git checkout 0.1.x
mvn clean install
./target/server/bin/standalone.sh&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Now that the server is started, you can access the &lt;a href=&quot;http://localhost:8080&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;application&lt;/a&gt;.
You need to open the WebSocket connection and then you can ask your questions.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;For example you can ask &lt;strong&gt;&quot;How do you configure a connection factory to a remote Artemis server ?&quot;&lt;/strong&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;If you look into the server log file you will see the effective prompt sent to the LLM as well as the answer from it.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;going-further&quot;&gt;Going further&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This feature pack is currently just a proof of concept and is quite limited.
If you look at the code you can easily tweak it to try several scenarios like using a Weaviate Embedding Store with metadata.
Also you can try &lt;a href=&quot;https://openai.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;OpenAI&lt;/a&gt; or &lt;a href=&quot;https://groq.com&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Groq&lt;/a&gt; instead of Ollama.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;All the source code of the feature pack is available on &lt;a href=&quot;https://github.com/wildfly-extras/wildfly-ai-feature-pack&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Github&lt;/a&gt; and can be improved by extending the components that may be of use.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</content>
      

      
      
      
      
      

      
        <author>
          <name>Emmanuel Hugonnet</name>
          
          
        </author>
      

      
        
      

      
        <category term="generative-ai" />
      
        <category term="rag" />
      
        <category term="wildfly" />
      

      
        <summary type="html">This blog post provides information on how to use the AI Galleon Feature pack to write generative AI applications.</summary>
      

      
      
    </entry>
  

</feed>

