<?xml version="1.0" encoding="utf-8"?>



<feed xmlns="http://www.w3.org/2005/Atom" >
  <generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator>
  <link href="https://hpehl.github.io/wildfly.org/feed.xml" rel="self" type="application/atom+xml" />
  <link href="https://hpehl.github.io/wildfly.org/" rel="alternate" type="text/html" />
  <updated>2024-03-19T14:23:08+01:00</updated>
  <id>https://hpehl.github.io/wildfly.org</id>

  
  
    <title type="html">WildFly</title>
  

  
    <entry>
      <title type="html">WildFly Mini Conference</title>
      <link href="https://hpehl.github.io/wildfly.org/news/2024/03/19/WildFly-mini-conference-recap/" rel="alternate" type="text/html" title="WildFly Mini Conference" />
      <published>2024-03-19T00:00:00+01:00</published>
      <updated>2024-03-19T00:00:00+01:00</updated>
      <id>https://hpehl.github.io/wildfly.org/news/2024/03/19/WildFly-mini-conference-recap</id>
      
      
        <content type="html" xml:base="https://hpehl.github.io/wildfly.org/news/2024/03/19/WildFly-mini-conference-recap/">&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Many thanks to all participants of the first WildFly Mini Conference!&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Our first WildFly Mini Conference took place on March 6. We had four talks on the &lt;a href=&quot;https://www.wildfly.org/conference/&quot;&gt;agenda&lt;/a&gt; and many interesting questions and feedback. The feedback we have received so far has been very positive and has encouraged us to organize similar events for the community in the future. Stay tuned!&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;If you haven&amp;#8217;t done so far, please let us know how you liked the conference using our &lt;a href=&quot;https://forms.gle/ruEytViEBBwthr5K7&quot;&gt;feedback form&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;For those who want to take a look at the slides, here are the links.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://www.wildfly.org/assets/data/wmc_wildfly_intro_and_getting_started.pdf&quot;&gt;Introduction to WildFly and how to get started fast&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/ansible-middleware/wfl-mini-conf-demo/blob/main/slides.md&quot;&gt;Deploying WildFly applications to bare-metal and the cloud&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://www.wildfly.org/assets/data/wmc_whats_new_and_roadmap.pdf&quot;&gt;What is new in WildFly and roadmap for future releases&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://www.wildfly.org/assets/data/wmc_glow.pdf&quot;&gt;WildFly Glow&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;You&amp;#8217;ll find the links also on the &lt;a href=&quot;/conference/&quot;&gt;conference page&lt;/a&gt; and in the description of the &lt;a href=&quot;https://www.youtube.com/watch?v=_8g1rZ80u2A&quot;&gt;YouTube video&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;</content>
      

      
      
      
      
      

      
        <author>
          <name>Harald Pehl</name>
          
          
        </author>
      

      
        
      

      
        <category term="conference" />
      

      
        <summary type="html">Many thanks to all participants of the first WildFly Mini Conference!</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">Trying Out An Upcoming Security Feature for WildFly on OpenShift</title>
      <link href="https://wildfly-security.github.io/wildfly-elytron/blog/in-progress-wildfly-feature-on-openshift/" rel="alternate" type="text/html" title="Trying Out An Upcoming Security Feature for WildFly on OpenShift" />
      <published>2024-03-13T00:00:00+01:00</published>
      <updated>2024-03-13T00:00:00+01:00</updated>
      <id>https://wildfly-security.github.io/wildfly-elytron/blog/in-progress-wildfly-feature-on-openshift/</id>
      
      
        <content type="html" xml:base="https://wildfly-security.github.io/wildfly-elytron/blog/in-progress-wildfly-feature-on-openshift/">&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;A future release of WildFly will include the ability to add additional scope values when securing applications using OpenID Connect (OIDC). This blog post demonstrates how to secure a WildFly application using OpenID Connect and configure scope values to request additional claims using an in-progress version of the feature. This feature adds the ability to specify additional scope values in the authentication request for applications secured using OIDC. For updates on the status of the feature, please keep an eye on &lt;a href=&quot;https://issues.redhat.com/browse/WFLY-16532&quot;&gt;WFLY-16532&lt;/a&gt;. We will also walk through how to deploy this feature on the cloud using &lt;a href=&quot;https://developers.redhat.com/developer-sandbox&quot;&gt;OpenShift&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;</content>
      

      
      
      
      
      

      
        <author>
          <name>Prarthona Paul</name>
          
          
        </author>
      

      
        
      

      
        <category term="oidc" />
      
        <category term="openshift" />
      
        <category term="authentication" />
      
        <category term="scopes" />
      

      
        <summary type="html">A future release of WildFly will include the ability to add additional scope values when securing applications using OpenID Connect (OIDC). This blog post demonstrates how to secure a WildFly application using OpenID Connect and configure scope values to request additional claims using an in-progress version of the feature. This feature adds the ability to specify additional scope values in the authentication request for applications secured using OIDC. For updates on the status of the feature, please keep an eye on WFLY-16532. We will also walk through how to deploy this feature on the cloud using OpenShift.</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">Hosting a React Application on WildFly</title>
      <link href="http://lofthouse.dev/2024/03/07/hosting-a-react-application-on-wildfly/" rel="alternate" type="text/html" title="Hosting a React Application on WildFly" />
      <published>2024-03-08T00:00:00+01:00</published>
      <updated>2024-03-08T00:00:00+01:00</updated>
      <id>http://lofthouse.dev/2024/03/07/hosting-a-react-application-on-wildfly/</id>
      
      
        <content type="html" xml:base="http://lofthouse.dev/2024/03/07/hosting-a-react-application-on-wildfly/">&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;As part of an upcoming development item I am going to be working with a React application deployed to the WildFly application server and invoking Jakarta RESTful Web Service endpoints to interact with the server side of the application.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I thought others might find it useful to see the steps I have taken. This blog post describes my steps up until the point I have the default React application deployed to WildFly, I may then follow up with some blogs of my subsequent steps.&lt;/p&gt;
&lt;/div&gt;</content>
      

      
      
      
      
      

      
        <author>
          <name>Darran Lofthouse</name>
          
          
        </author>
      

      
        
      

      
        <category term="react" />
      
        <category term="wildfly" />
      

      
        <summary type="html">As part of an upcoming development item I am going to be working with a React application deployed to the WildFly application server and invoking Jakarta RESTful Web Service endpoints to interact with the server side of the application.</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">WildFly - The GitOps Way</title>
      <link href="https://jmesnil.net/weblog/2024/03/05/wildfly-gitops/" rel="alternate" type="text/html" title="WildFly - The GitOps Way" />
      <published>2024-03-07T00:00:00+01:00</published>
      <updated>2024-03-07T00:00:00+01:00</updated>
      <id>https://jmesnil.net/weblog/2024/03/05/wildfly-gitops/</id>
      
      
        <content type="html" xml:base="https://jmesnil.net/weblog/2024/03/05/wildfly-gitops/"></content>
      

      
      
      
      
      

      
        <author>
          <name>Jeff Mesnil</name>
          
          
        </author>
      

      
        
      

      
        <category term="wildfly" />
      
        <category term="gitops" />
      

      
        <summary type="html"></summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">How to contribute to WildFly</title>
      <link href="https://hpehl.github.io/wildfly.org/news/2024/03/01/How-to-contribute-to-WildFly/" rel="alternate" type="text/html" title="How to contribute to WildFly" />
      <published>2024-03-01T00:00:00+01:00</published>
      <updated>2024-03-01T00:00:00+01:00</updated>
      <id>https://hpehl.github.io/wildfly.org/news/2024/03/01/How-to-contribute-to-WildFly</id>
      
      
        <content type="html" xml:base="https://hpehl.github.io/wildfly.org/news/2024/03/01/How-to-contribute-to-WildFly/">&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Welcome to the world of WildFly contributions, a place where your skills can make a real impact! If you&amp;#8217;re eager to dive in but not sure where to start, this guide is here to simplify the process for you. Whether you&amp;#8217;re new to open source or just getting acquainted with WildFly, we&amp;#8217;ve got your back.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In the upcoming sections, we&amp;#8217;ll walk you through the essential steps, providing insights into the WildFly ecosystem and equipping you with the tools and knowledge needed to actively participate in its development. From setting up your development environment to engaging with the vibrant community, each step is a gateway to not only enhancing your technical skills but also fostering connections within a community passionate about open-source excellence. Join us as we explore how you can navigate the wild and make your mark in the world of WildFly contributions.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;get-acquainted-with-wildfly&quot;&gt;Get Acquainted with WildFly&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The first step in contributing to WildFly is to familiarize yourself with the project. Visit the WildFly &lt;a href=&quot;https://github.com/wildfly/wildfly&quot;&gt;GitHub repository&lt;/a&gt;. Explore the project structure, review the source code, and read the &lt;a href=&quot;https://docs.wildfly.org/&quot;&gt;latest documentation&lt;/a&gt; available in the repository. The documentation provides valuable insights into building, configuring, and deploying applications with WildFly.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;set-up-your-development-environment-and-install-wildfly&quot;&gt;Set Up Your Development Environment and Install WildFly&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Before installing the latest version of WildFly, there are a few prerequisites:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Check that you have a JDK on your machine—JDK 11 or higher recommended to start WildFly. You can use the open source JDK called &lt;a href=&quot;https://openjdk.org/&quot;&gt;OpenJDK&lt;/a&gt;. Once you install the JDK, set the JAVA_HOME environment variable.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Ensure you have Maven 3.6.0 or higher installed. You can download Maven from &lt;a href=&quot;https://maven.apache.org/download.cgi&quot;&gt;here&lt;/a&gt; and set the environment variables.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;After loading both the variables, check the versions of JDK and Maven like below.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;literalblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;$ java -version
openjdk version “11.0.9” 2020-10-20 OpenJDK Runtime Environment AdoptOpenJDK (build 11.0.9+11)
OpenJDK 64-Bit Server VM AdoptOpenJDK (build 11.0.9+11, mixed mode)&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;literalblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;$ mvn -version
Apache Maven 3.6.3 (cecedd343002696d0abb50b32b541b8a6ba2883f) Maven home: /usr/share/maven
Java version: 11.0.9, vendor: AdoptOpenJDK, runtime: /usr/lib64/adoptopenjdk
Default locale: en_US, platform encoding: UTF-8
OS name: “linux”, version: “5.9.1”, arch: “amd64”, family: “unix”&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;There are many ways you can install WildFly, including unzipping our traditional download zip, provisioning a custom installation using Galleon, or building a bootable jar. The official &lt;a href=&quot;https://docs.wildfly.org/24/Installation_Guide.html&quot;&gt;installation guide&lt;/a&gt; helps you identify the kind of WildFly installation that best fits your application’s deployment needs.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;create-an-issue-or-follow-the-jira&quot;&gt;Create an Issue or Follow the JIRA&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;WildFly uses JIRA for issue tracking. You can find the list of issues and tasks on the &lt;a href=&quot;https://issues.redhat.com/projects/WFLY&quot;&gt;WildFly JIRA dashboard&lt;/a&gt;. If you encounter a bug, have a feature request, spot something in the documentation that could be improved or spot something missing in the documentation, or want to contribute in any way, create a new issue on JIRA. Alternatively, you can pick an existing issue or go through &lt;a href=&quot;https://issues.redhat.com/issues/?filter=12403174&quot;&gt;good first issues&lt;/a&gt; that aligns with your interests or skills.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;select-an-issue-and-send-a-pull-request&quot;&gt;Select an Issue and Send a Pull Request:&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Once you&amp;#8217;ve identified an issue you&amp;#8217;d like to work on, &lt;a href=&quot;https://github.com/wildfly/wildfly/fork&quot;&gt;fork the WildFly repository&lt;/a&gt;, create a new branch, and start working on the issue. Make your changes, commit them, and push the changes to your forked repository. Finally, submit a pull request to the main WildFly repository. For better understanding you can also follow the official &lt;a href=&quot;https://docs.wildfly.org/31/Hacking_On_WildFly.html#getting-started&quot;&gt;getting started guide&lt;/a&gt;. Make sure to follow the &lt;a href=&quot;https://github.com/wildfly/wildfly/blob/main/CODE_OF_CONDUCT.md&quot;&gt;code of conduct&lt;/a&gt; and &lt;a href=&quot;https://github.com/wildfly/wildfly/blob/main/CONTRIBUTING.md&quot;&gt;contribution guidelines&lt;/a&gt; to ensure a smooth review process.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;participate-in-code-review&quot;&gt;Participate in Code Review&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Code review is a crucial aspect of any open-source project. Engage in discussions with other contributors, address feedback, and iterate on your changes. This collaborative process helps maintain code quality and ensures that contributions align with the project&amp;#8217;s standards.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;engage-with-the-community&quot;&gt;Engage with the Community&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;WildFly has a diverse and active community of developers, users, and contributors. Join the discussion on the WildFly google group - &lt;a href=&quot;mailto:wildfly@googlegroups.com&quot;&gt;wildfly@googlegroups.com&lt;/a&gt; or via the Zulip &lt;a href=&quot;https://wildfly.zulipchat.com/#narrow/stream/196266-wildfly-user&quot;&gt;wildfly-user&lt;/a&gt;, &lt;a href=&quot;https://wildfly.zulipchat.com/#narrow/stream/174184-wildfly-developers&quot;&gt;wildfly-developer&lt;/a&gt; channels. We are also present on &lt;a href=&quot;https://twitter.com/WildFlyAS&quot;&gt;X&lt;/a&gt; and &lt;a href=&quot;https://www.youtube.com/@WildFlyAS&quot;&gt;YouTube&lt;/a&gt;, you can follow us there as well. Participate in community events, webinars, and conferences related to WildFly. Engaging with the community not only enhances your understanding of the project but also opens doors for collaboration and mentorship.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Contributing to WildFly is a rewarding experience that allows you to be part of a thriving open-source community. By following these steps, you can make meaningful contributions to the project, enhance your skills, and connect with like-minded individuals who share a passion for open-source development. Remember, every contribution, no matter how small, makes a valuable impact on the success of the WildFly project.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</content>
      

      
      
      
      
      

      
        <author>
          <name>Ranabir Chakraborty</name>
          
          
        </author>
      

      
        
      

      
        <category term="WildFly" />
      
        <category term="contribution" />
      

      
        <summary type="html">Welcome to the world of WildFly contributions, a place where your skills can make a real impact! If you&amp;#8217;re eager to dive in but not sure where to start, this guide is here to simplify the process for you. Whether you&amp;#8217;re new to open source or just getting acquainted with WildFly, we&amp;#8217;ve got your back.</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">Vlog: Securing WildFly Apps with Okta on OpenShift</title>
      <link href="https://www.youtube.com/watch?v=usquALvL2qc" rel="alternate" type="text/html" title="Vlog: Securing WildFly Apps with Okta on OpenShift" />
      <published>2024-02-29T00:00:00+01:00</published>
      <updated>2024-02-29T00:00:00+01:00</updated>
      <id>https://www.youtube.com/watch?v=usquALvL2qc</id>
      
      
        <content type="html" xml:base="https://www.youtube.com/watch?v=usquALvL2qc"></content>
      

      
      
      
      
      

      
        <author>
          <name>Prarthona Paul</name>
          
          
        </author>
      

      
        
      

      
        <category term="oidc" />
      
        <category term="openshift" />
      
        <category term="okta" />
      

      

      
      
    </entry>
  
    <entry>
      <title type="html">WildFly 31.0.1 is released!</title>
      <link href="https://hpehl.github.io/wildfly.org/news/2024/02/28/WildFly3101-Released/" rel="alternate" type="text/html" title="WildFly 31.0.1 is released!" />
      <published>2024-02-28T00:00:00+01:00</published>
      <updated>2024-02-28T00:00:00+01:00</updated>
      <id>https://hpehl.github.io/wildfly.org/news/2024/02/28/WildFly3101-Released</id>
      
      
        <content type="html" xml:base="https://hpehl.github.io/wildfly.org/news/2024/02/28/WildFly3101-Released/">&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;WildFly 31.0.1.Final is now available &lt;a href=&quot;https://wildfly.org/downloads&quot;&gt;for download&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;It&amp;#8217;s been about five weeks since the WildFly 31 release, so we&amp;#8217;ve done a small bug fix update, WildFly 31.0.1. This includes an update to WildFly Preview.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The following issues were resolved in 31.0.1:&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect4&quot;&gt;
&lt;h5 id=&quot;bugs&quot;&gt;Bugs&lt;/h5&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;[&lt;a href=&quot;https://issues.redhat.com/browse/WFLY-18700&quot;&gt;WFLY-18700&lt;/a&gt;] - java.lang.OutOfMemoryError: Direct buffer memory&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;[&lt;a href=&quot;https://issues.redhat.com/browse/WFLY-18959&quot;&gt;WFLY-18959&lt;/a&gt;] - Mail Quickstart maven dependencies have wrong scope&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;[&lt;a href=&quot;https://issues.redhat.com/browse/WFLY-18969&quot;&gt;WFLY-18969&lt;/a&gt;] - Give the Apache Lucene module access to jdk.unsupported&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;[&lt;a href=&quot;https://issues.redhat.com/browse/WFLY-19010&quot;&gt;WFLY-19010&lt;/a&gt;] - SSL Client context not loaded with AMQP Connector used in bootable jar&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;[&lt;a href=&quot;https://issues.redhat.com/browse/WFLY-19019&quot;&gt;WFLY-19019&lt;/a&gt;] - Exception that happened during deployment is being hidden&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;[&lt;a href=&quot;https://issues.redhat.com/browse/WFLY-19020&quot;&gt;WFLY-19020&lt;/a&gt;] - JakartaEE application client: module &quot;org.hibernate&quot; is not added to classpath&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;[&lt;a href=&quot;https://issues.redhat.com/browse/WFLY-19040&quot;&gt;WFLY-19040&lt;/a&gt;] - Regression due to SSLHandshakeException affecting HotRod client when connecting to remote Infinispan&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect4&quot;&gt;
&lt;h5 id=&quot;tasks&quot;&gt;Tasks&lt;/h5&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;[&lt;a href=&quot;https://issues.redhat.com/browse/WFLY-19029&quot;&gt;WFLY-19029&lt;/a&gt;] - Hibernate ORM 6.4+ should export services to consumer classpath&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect4&quot;&gt;
&lt;h5 id=&quot;component-upgrades&quot;&gt;Component Upgrades&lt;/h5&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;[&lt;a href=&quot;https://issues.redhat.com/browse/WFLY-18946&quot;&gt;WFLY-18946&lt;/a&gt;] - Upgrade Infinispan to 14.0.22.Final&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;[&lt;a href=&quot;https://issues.redhat.com/browse/WFLY-18977&quot;&gt;WFLY-18977&lt;/a&gt;] - Upgrade jgroups-kubernetes to 2.0.2.Final&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;[&lt;a href=&quot;https://issues.redhat.com/browse/WFLY-18989&quot;&gt;WFLY-18989&lt;/a&gt;] - Upgrade to Hibernate 6.4.4.Final release&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;[&lt;a href=&quot;https://issues.redhat.com/browse/WFLY-19003&quot;&gt;WFLY-19003&lt;/a&gt;] - Upgrade Netty to 4.1.106&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;[&lt;a href=&quot;https://issues.redhat.com/browse/WFLY-19032&quot;&gt;WFLY-19032&lt;/a&gt;] - Upgrade Snappy Java to 1.1.10.5 (CVEs CVE-2023-34453, CVE-2023-34454, CVE-2023-34455, CVE-2023-43642)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;[&lt;a href=&quot;https://issues.redhat.com/browse/WFLY-19034&quot;&gt;WFLY-19034&lt;/a&gt;] - Upgrade nimbus-jose-jwt to 9.37.3 [CVE-2023-52428]&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;[&lt;a href=&quot;https://issues.redhat.com/browse/WFLY-19042&quot;&gt;WFLY-19042&lt;/a&gt;] - Upgrade HAL to 3.7.0.Final (WildFly 31.0.1.Final)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;[&lt;a href=&quot;https://issues.redhat.com/browse/WFLY-19045&quot;&gt;WFLY-19045&lt;/a&gt;] - Upgrade Infinispan to 14.0.24.Final&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;[&lt;a href=&quot;https://issues.redhat.com/browse/WFLY-19046&quot;&gt;WFLY-19046&lt;/a&gt;] - Upgrade JGroups to 5.2.22.Final&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;[&lt;a href=&quot;https://issues.redhat.com/browse/WFLY-19048&quot;&gt;WFLY-19048&lt;/a&gt;] - Upgrade WildFly Core to 23.0.2.Final&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;[&lt;a href=&quot;https://issues.redhat.com/browse/WFLY-19058&quot;&gt;WFLY-19058&lt;/a&gt;] - Upgrade WildFly Core to 23.0.3.Final&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect4&quot;&gt;
&lt;h5 id=&quot;enhancements&quot;&gt;Enhancements&lt;/h5&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;[&lt;a href=&quot;https://issues.redhat.com/browse/WFLY-18956&quot;&gt;WFLY-18956&lt;/a&gt;] - Add sha1 to Quickstart&amp;#8217;s dist module&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Issues resolved in the WildFly Core updates included with WildFly 31.0.1 were:&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect4&quot;&gt;
&lt;h5 id=&quot;component-upgrades-2&quot;&gt;Component Upgrades&lt;/h5&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;[&lt;a href=&quot;https://issues.redhat.com/browse/WFCORE-6695&quot;&gt;WFCORE-6695&lt;/a&gt;] - CVE-2023-4639 Upgrade Undertow to 2.3.11.Final&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;[&lt;a href=&quot;https://issues.redhat.com/browse/WFCORE-6707&quot;&gt;WFCORE-6707&lt;/a&gt;] - CVE-2024-1635 Upgrade XNIO to 3.8.13.Final&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;[&lt;a href=&quot;https://issues.redhat.com/browse/WFCORE-6708&quot;&gt;WFCORE-6708&lt;/a&gt;] - CVE-2024-1635 Upgrade JBoss Remoting to 5.0.28.Final&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;[&lt;a href=&quot;https://issues.redhat.com/browse/WFCORE-6709&quot;&gt;WFCORE-6709&lt;/a&gt;] - CVE-2023-5379 CVE-2024-1459 CVE-2024-1635 Upgrade Undertow to 2.3.12.Final&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Enjoy!&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;</content>
      

      
      
      
      
      

      
        <author>
          <name>Brian Stansberry</name>
          
          
        </author>
      

      
        
      

      
        <category term="announcement" />
      
        <category term="release" />
      

      
        <summary type="html">WildFly 31.0.1.Final is now available for download.</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">WildFly Mini Conference</title>
      <link href="https://hpehl.github.io/wildfly.org/news/2024/02/12/WildFly-mini-conference/" rel="alternate" type="text/html" title="WildFly Mini Conference" />
      <published>2024-02-12T00:00:00+01:00</published>
      <updated>2024-02-12T00:00:00+01:00</updated>
      <id>https://hpehl.github.io/wildfly.org/news/2024/02/12/WildFly-mini-conference</id>
      
      
        <content type="html" xml:base="https://hpehl.github.io/wildfly.org/news/2024/02/12/WildFly-mini-conference/">&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The WildFly team organizes a conference. The conference will take place on &lt;strong&gt;Wednesday, March 6, 2024&lt;/strong&gt;. It starts at &lt;strong&gt;14:00 UTC&lt;/strong&gt; and includes &lt;strong&gt;four sessions&lt;/strong&gt; with topics related to WildFly. All sessions will be streamed live on YouTube.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;For more information, please take a look at the conference page at &lt;a href=&quot;https://www.wildfly.org/conference/&quot; class=&quot;bare&quot;&gt;https://www.wildfly.org/conference/&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We&amp;#8217;re looking forward to seeing you there!&lt;/p&gt;
&lt;/div&gt;</content>
      

      
      
      
      
      

      
        <author>
          <name>Harald Pehl</name>
          
          
        </author>
      

      
        
      

      
        <category term="announcement" />
      
        <category term="conference" />
      

      
        <summary type="html">The WildFly team organizes a conference. The conference will take place on Wednesday, March 6, 2024. It starts at 14:00 UTC and includes four sessions with topics related to WildFly. All sessions will be streamed live on YouTube.</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">WildFly testing with WildFly Glow</title>
      <link href="https://hpehl.github.io/wildfly.org/news/2024/02/05/testing-with-wildfly-glow/" rel="alternate" type="text/html" title="WildFly testing with WildFly Glow" />
      <published>2024-02-05T00:00:00+01:00</published>
      <updated>2024-02-05T00:00:00+01:00</updated>
      <id>https://hpehl.github.io/wildfly.org/news/2024/02/05/testing-with-wildfly-glow</id>
      
      
        <content type="html" xml:base="https://hpehl.github.io/wildfly.org/news/2024/02/05/testing-with-wildfly-glow/">&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This blog post provides information on how to use &lt;a href=&quot;https://github.com/wildfly/wildfly-glow&quot;&gt;WildFly Glow&lt;/a&gt; to produce a
WildFly server in order to test the applications you are developing for WildFly.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;admonitionblock note&quot;&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td class=&quot;icon&quot;&gt;
&lt;div class=&quot;title&quot;&gt;Note&lt;/div&gt;
&lt;/td&gt;
&lt;td class=&quot;content&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Reading this &lt;a href=&quot;https://www.wildfly.org/news/2024/01/29/wildfly-glow/&quot;&gt;blog post&lt;/a&gt; that provides detailed information on WildFly provisioning in general and WildFly Glow in particular is
a good pre-requisite to this blog post.&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The main goal of the WildFly Glow project is to help you produce a trimmed server that will properly execute your deployments.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The trimmed WildFly server can be produced to run your tests or execute your final deployments. This blog post focuses on the testing phase.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;provisioning-approaches-for-your-tests&quot;&gt;Provisioning approaches for your tests&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;To install a server to execute your tests, you can:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://www.wildfly.org/downloads/&quot;&gt;Download&lt;/a&gt; and install a WildFly distribution.
This approach is outside the scope of executing tests with a trimmed server. This would apply when executing your applications inside a full
WildFly server.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Provisioning a WildFly server using the WildFly Maven Plugin (with WildFly Glow support enabled) during test execution.
This approaches addresses simple applications composed of a single deployment.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use the &lt;a href=&quot;https://github.com/wildfly/wildfly-arquillian&quot;&gt;WildFly Arquillian Adapter&lt;/a&gt; and WildFly Glow to provision a server to
test more complex use-cases.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;admonitionblock important&quot;&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td class=&quot;icon&quot;&gt;
&lt;div class=&quot;title&quot;&gt;Important&lt;/div&gt;
&lt;/td&gt;
&lt;td class=&quot;content&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The server used by the tests should contain the same content as the one used in production (with some configuration adjustments
to cope with each context). So testing with a full WildFly distribution and then using a trimmed server in production will hide issues.
We strongly advise that you use provisioning in the first place and execute tests with a trimmed server.&lt;/p&gt;
&lt;/div&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Ok, so you are ready to provision a trimmed server, but what is the provisioning configuration you need
to provide to the provisioning tooling to produce a WildFly server that will properly execute your tests?&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;testing-using-the-wildfly-maven-plugin-to-provision-a-server&quot;&gt;Testing using the WildFly Maven Plugin to provision a server&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This is the simplest approach that applies to a single application deployed into WildFly. The WildFly quickstarts
cover this approach with the &lt;code&gt;provisioned-server&lt;/code&gt; profile. Each quickstart defines this profile as you can find in the quickstarts &lt;a href=&quot;https://github.com/wildfly/quickstart&quot;&gt;source code&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The WildFly quickstarts have been ported to rely on WildFly Glow.
You can clone the following quickstart &lt;a href=&quot;https://github.com/wildfly/quickstart/tree/glow-preview&quot;&gt;branch&lt;/a&gt; and play with the quickstarts of your choice.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The &lt;code&gt;package&lt;/code&gt; goal of the &lt;a href=&quot;https://github.com/wildfly/wildfly-maven-plugin&quot;&gt;WildFly Maven Plugin&lt;/a&gt; scans the application,
discovers the provisioning configuration then provisions the server and deploy the application.
The server is started (&lt;code&gt;wildfly:start&lt;/code&gt; goal) then the tests are executed to interact with the application deployed in the server.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;cd helloworld
mvn clean package -Pprovisioned-server
mvn wildfly:start
mvn verify -Pintegration-testing -Dserver.host=http://localhost:8080
mvn wildfly:shutdown&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In some cases you need to run tests from inside the server or you want to tests multiple deployments,
that is where the WildFly Arquillian Adapter is needed.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;testing-using-the-wildfly-arquillian-adapter&quot;&gt;Testing using the WildFly Arquillian Adapter&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;arquillian-deployments&quot;&gt;Arquillian deployments&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;When using Arquillian, the deployments to be deployed to the WildFly server are created by static Java methods
annotated with the &lt;code&gt;@org.jboss.arquillian.container.test.api.Deployment&lt;/code&gt; annotation.
These deployments are created and deployed during test execution by Arquillian.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;wildfly-glow-arquillian-maven-plugin&quot;&gt;WildFly Glow Arquillian Maven Plugin&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Details on how to use and configure the plugin can be found in the &lt;a href=&quot;https://docs.wildfly.org/wildfly-glow/#_wildfly_glow_arquillian_maven_plugin&quot;&gt;plugin documentation&lt;/a&gt;.
In this blog post we are introducing its usage.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The WildFly Glow Arquillian Maven plugin scans all the &lt;code&gt;@Deployment&lt;/code&gt;
annotated static methods, and invokes them to obtain each deployment.
It then scans these deployments to discover the required Galleon layers.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;A provisioning.xml file containing the discovered layers and feature-packs is generated.
This Galleon configuration file is then used by the actual provisioning tooling (&lt;a href=&quot;https://docs.wildfly.org/galleon/&quot;&gt;Galleon Maven Plugin&lt;/a&gt;,
&lt;a href=&quot;https://github.com/wildfly/wildfly-maven-plugin&quot;&gt;WildFly Maven Plugin&lt;/a&gt;,
&lt;a href=&quot;https://github.com/wildfly-extras/wildfly-jar-maven-plugin&quot;&gt;WildFly JAR Maven Plugin&lt;/a&gt;)
to provision the test server.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In order to validate that what the scanning has discovered is what you are expecting, you can configure the &lt;code&gt;wildfly-glow-arquillian-plugin&lt;/code&gt;
maven plugin to contain the element &lt;code&gt;&amp;lt;expected-discovery&amp;gt;&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;&amp;lt;expected-discovery&amp;gt;[cdi, ee-integration, ejb, ejb-lite, elytron-oidc-client, naming, servlet]==&amp;gt;ee-core-profile-server,ejb,elytron-oidc-client&amp;lt;/expected-discovery&amp;gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The left part of the arrow contains the list of the discovered layers according to the scanning.
The right part is what will get provisioned. Composed of a base layer (always &lt;code&gt;ee-core-profile-server&lt;/code&gt;) and
a list of the discovered layers not contained in the base layer.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;During plugin execution, the discovered layers are printed. If that is valid with respect to your tests,
you can copy and paste this output as the &lt;code&gt;&amp;lt;expected-discovery&amp;gt;&lt;/code&gt; value.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;If that is not valid (e.g.: some layers should not be present), you can enable &lt;code&gt;&amp;lt;verbose&amp;gt;true&amp;lt;/verbose&amp;gt;&lt;/code&gt; to see why a layer was selected.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;WildFly Glow is based on rules contained in the Wildfy Galleon layers. If a rule matches, the layer is included. The set of rules
contained in WildFly layers is documented in this &lt;a href=&quot;http://docs.wildfly.org/wildfly-galleon-feature-packs/&quot;&gt;documentation&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;An example of output:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre&gt;...
layers inclusion rules
* ee-core-profile-server
  - BASE_LAYER
* ee-concurrency
  - JAVA_TYPE: [jakarta.enterprise.concurrent.*]
* undertow-https
  - ADD_ON
...&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This output means:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;ee-core-profile-server&lt;/code&gt; is a base layer (always included).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;ee-concurrency&lt;/code&gt; layer is included because a Java class located in the java package &lt;code&gt;jakarta.enterprise.concurrent&lt;/code&gt; has been found.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;undertow-https&lt;/code&gt; is included because it is bound to an included add-on (in this case &lt;code&gt;ssl&lt;/code&gt;).&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;BTW: The &lt;a href=&quot;https://github.com/wildfly/wildfly/tree/main/testsuite/integration&quot;&gt;WildFly integration tests&lt;/a&gt; contain
a lot of examples of WildFly Glow scanning executions that you could use as a starting-point.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;simple-pom-xml-example&quot;&gt;Simple pom.xml example&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In this example, both the &lt;code&gt;wildfly-glow-arquillian-plugin&lt;/code&gt; and &lt;code&gt;wildfly-maven-plugin&lt;/code&gt; are bound to the
&lt;code&gt;test-compile&lt;/code&gt; phase (run after the test classes have been compiled).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The &lt;code&gt;wildfly-glow-arquillian-plugin&lt;/code&gt; execution produces the file &lt;code&gt;target/glow-scan/provisioning.xml&lt;/code&gt; that is then consumed by
the &lt;code&gt;wildfly-maven-plugin&lt;/code&gt; to provision the server (in the directory &lt;code&gt;target/server&lt;/code&gt;).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;...
&amp;lt;build&amp;gt;
    &amp;lt;plugins&amp;gt;
        &amp;lt;plugin&amp;gt;
            &amp;lt;groupId&amp;gt;org.wildfly.glow&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;wildfly-glow-arquillian-plugin&amp;lt;/artifactId&amp;gt;
            &amp;lt;version&amp;gt;1.0.0.Beta7&amp;lt;/version&amp;gt;
            &amp;lt;executions&amp;gt;
                &amp;lt;execution&amp;gt;
                    &amp;lt;id&amp;gt;scan&amp;lt;/id&amp;gt;
                    &amp;lt;goals&amp;gt;
                        &amp;lt;goal&amp;gt;scan&amp;lt;/goal&amp;gt;
                    &amp;lt;/goals&amp;gt;
                    &amp;lt;phase&amp;gt;test-compile&amp;lt;/phase&amp;gt;
                &amp;lt;/execution&amp;gt;
            &amp;lt;/executions&amp;gt;
        &amp;lt;/plugin&amp;gt;
        &amp;lt;plugin&amp;gt;
            &amp;lt;groupId&amp;gt;org.wildfly.plugins&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;wildfly-maven-plugin&amp;lt;/artifactId&amp;gt;
            &amp;lt;version&amp;gt;5.0.0.Beta2&amp;lt;/version&amp;gt;
            &amp;lt;configuration&amp;gt;
                &amp;lt;provisioning-file&amp;gt;${project.build.directory}/glow-scan/provisioning.xml&amp;lt;/provisioning-file&amp;gt;
            &amp;lt;/configuration&amp;gt;
            &amp;lt;executions&amp;gt;
                &amp;lt;execution&amp;gt;
                    &amp;lt;id&amp;gt;test-provisioning&amp;lt;/id&amp;gt;
                    &amp;lt;goals&amp;gt;
                        &amp;lt;goal&amp;gt;provision&amp;lt;/goal&amp;gt;
                    &amp;lt;/goals&amp;gt;
                    &amp;lt;phase&amp;gt;test-compile&amp;lt;/phase&amp;gt;
                &amp;lt;/execution&amp;gt;
            &amp;lt;/executions&amp;gt;
        &amp;lt;/plugin&amp;gt;
    &amp;lt;/plugins&amp;gt;
&amp;lt;/build&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The provisioned server is then started by Arquillian and tests are executed. As you can see the provisioning aspects are fully handled by
the tooling, allowing you to focus on the testing.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;For more advanced usage (e.g.: selecting a WildFly version, an execution profile, adding &lt;code&gt;add-ons&lt;/code&gt;,
selecting specific surefire executions to provision multiple servers) you should check the
WildFly Glow &lt;a href=&quot;https://docs.wildfly.org/wildfly-glow&quot;&gt;documentation&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We hope that you will see how useful WildFly Glow can be for your WildFly application testing.
Your feedback would be very valuable to evolve WildFly Glow in the right direction.
Feel free to log issues in the &lt;a href=&quot;https://github.com/wildfly/wildfly-glow/issues&quot;&gt;project&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Thank-you!&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Jean-Francois Denise&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</content>
      

      
      
      
      
      

      
        <author>
          <name>Jean-François Denise</name>
          
          
        </author>
      

      
        
      

      
        <category term="galleon" />
      
        <category term="provisioning" />
      
        <category term="wildfly-glow" />
      
        <category term="arquillian" />
      
        <category term="test" />
      
        <category term="wildfly-maven-plugin" />
      
        <category term="wildfly" />
      

      
        <summary type="html">This blog post provides information on how to use WildFly Glow to produce a WildFly server in order to test the applications you are developing for WildFly.</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">Using WildFly Glow to provision a WildFly server for a RESTEasy based project</title>
      <link href="https://resteasy.dev/2024/01/31/resteasy-glow/" rel="alternate" type="text/html" title="Using WildFly Glow to provision a WildFly server for a RESTEasy based project" />
      <published>2024-02-05T00:00:00+01:00</published>
      <updated>2024-02-05T00:00:00+01:00</updated>
      <id>https://resteasy.dev/2024/01/31/resteasy-glow/</id>
      
      
        <content type="html" xml:base="https://resteasy.dev/2024/01/31/resteasy-glow/"></content>
      

      
      
      
      
      

      
        <author>
          <name>阿男</name>
          
          
        </author>
      

      
        
      

      
        <category term="resteasy" />
      
        <category term="glow" />
      
        <category term="wildfly" />
      
        <category term="galleon" />
      

      
        <summary type="html"></summary>
      

      
      
    </entry>
  

</feed>

