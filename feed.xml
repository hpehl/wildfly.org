<?xml version="1.0" encoding="utf-8"?>



<feed xmlns="http://www.w3.org/2005/Atom" >
  <generator uri="https://jekyllrb.com/" version="4.3.4">Jekyll</generator>
  <link href="https://hpehl.github.io/wildfly.org/feed.xml" rel="self" type="application/atom+xml" />
  <link href="https://hpehl.github.io/wildfly.org/" rel="alternate" type="text/html" />
  <updated>2025-04-09T17:48:08+02:00</updated>
  <id>https://hpehl.github.io/wildfly.org</id>

  
  
    <title type="html">WildFly</title>
  

  
    <entry>
      <title type="html">WildFly 36 Beta is released!</title>
      <link href="https://hpehl.github.io/wildfly.org/news/2025/03/27/WildFly36Beta-released/" rel="alternate" type="text/html" title="WildFly 36 Beta is released!" />
      <published>2025-03-27T00:00:00+01:00</published>
      <updated>2025-03-27T00:00:00+01:00</updated>
      <id>https://hpehl.github.io/wildfly.org/news/2025/03/27/WildFly36Beta-released</id>
      
      
        <content type="html" xml:base="https://hpehl.github.io/wildfly.org/news/2025/03/27/WildFly36Beta-released/">&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I&amp;#8217;m pleased to announce that the new WildFly 36.0.0.Beta1 release is available for download at &lt;a href=&quot;https://wildfly.org/downloads&quot; class=&quot;bare&quot;&gt;https://wildfly.org/downloads&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;As can be seen from the &lt;a href=&quot;https://github.com/wildfly/wildfly/releases/tag/36.0.0.Beta1&quot;&gt;Release Notes&lt;/a&gt; a lot of issues were resolved in this release but I would also like to call out some of the following highlights:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;[&lt;a href=&quot;https://issues.redhat.com/browse/WFLY-18582&quot;&gt;WFLY-18582&lt;/a&gt;]&amp;#8201;&amp;#8212;&amp;#8201;Add a prometheus endpoint to the micrometer extension&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;[&lt;a href=&quot;https://issues.redhat.com/browse/WFCORE-5718&quot;&gt;WFCORE-5718&lt;/a&gt;]&amp;#8201;&amp;#8212;&amp;#8201;Support remote+tls with EJBClient and remote-outbound-connection&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;[&lt;a href=&quot;https://issues.redhat.com/browse/WFLY-20476&quot;&gt;WFLY-20476&lt;/a&gt;]&amp;#8201;&amp;#8212;&amp;#8201;Promote ajp-listener AJP_ALLOWED_REQUEST_ATTRIBUTES_PATTERN to community stability&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;[&lt;a href=&quot;https://issues.redhat.com/browse/WFLY-20477&quot;&gt;WFLY-20477&lt;/a&gt;]&amp;#8201;&amp;#8212;&amp;#8201;Promote undertow subsystem&amp;#8217;s reuse-x-forwarded and rewrite-host header configurability to community stability&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Within the WildFly Preview distribution we also &lt;a href=&quot;https://issues.redhat.com/browse/WFLY-19397&quot;&gt;upgraded to a beta of Hibernate ORM 7 and an alpha of Hibernate Search 8&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We&amp;#8217;ve also enhanced &lt;a href=&quot;https://docs.wildfly.org/wildfly-glow/&quot;&gt;WildFly Glow&lt;/a&gt;, so it is now possible to &lt;a href=&quot;https://github.com/wildfly/wildfly-proposals/issues/688&quot;&gt;run a source-only WildFly application&lt;/a&gt; using &lt;a href=&quot;https://www.jbang.dev/&quot;&gt;JBang&lt;/a&gt;!&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Please try out this release and let us know how you get on.&lt;/p&gt;
&lt;/div&gt;</content>
      

      
      
      
      
      

      
        <author>
          <name>Darran Lofthouse</name>
          
          
        </author>
      

      
        
      

      
        <category term="announcement" />
      
        <category term="release" />
      

      
        <summary type="html">I&amp;#8217;m pleased to announce that the new WildFly 36.0.0.Beta1 release is available for download at https://wildfly.org/downloads.</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">Vlog: WildFly AI - monitor and troubleshoot a WildFly server with the WildFly chatbot.</title>
      <link href="https://youtu.be/crSKeeBsXoE" rel="alternate" type="text/html" title="Vlog: WildFly AI - monitor and troubleshoot a WildFly server with the WildFly chatbot." />
      <published>2025-03-21T00:00:00+01:00</published>
      <updated>2025-03-21T00:00:00+01:00</updated>
      <id>https://youtu.be/crSKeeBsXoE</id>
      
      
        <content type="html" xml:base="https://youtu.be/crSKeeBsXoE"></content>
      

      
      
      
      
      

      
        <author>
          <name>Jean-Fran√ßois Denise</name>
          
          
        </author>
      

      
        
      

      
        <category term="wildfly" />
      
        <category term="ai" />
      
        <category term="management" />
      
        <category term="vlog" />
      

      
        <summary type="html">This video demonstrates how you can interact with a WildFly server using natural language.</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">Save the Date: WildFly Mini Conference on March 25th, 2025</title>
      <link href="https://hpehl.github.io/wildfly.org/news/2025/03/19/WildFly-mini-conference-2025-save-the-date/" rel="alternate" type="text/html" title="Save the Date: WildFly Mini Conference on March 25th, 2025" />
      <published>2025-03-19T00:00:00+01:00</published>
      <updated>2025-03-19T00:00:00+01:00</updated>
      <id>https://hpehl.github.io/wildfly.org/news/2025/03/19/WildFly-mini-conference-2025-save-the-date</id>
      
      
        <content type="html" xml:base="https://hpehl.github.io/wildfly.org/news/2025/03/19/WildFly-mini-conference-2025-save-the-date/">&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Hello, WildFly Community!&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We are excited to announce that the WildFly Mini Conference is scheduled for March 25th, 2025! Building on the success of our previous events, we‚Äôre looking forward to another day of insightful discussions, community engagement, and deep dives into the latest in enterprise Java and WildFly development.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This year‚Äôs conference will focus on key topics shaping the future of WildFly and enterprise Java, including:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Quick Prototyping with WildFly&lt;/strong&gt; ‚Äì Learn how to efficiently build and test applications using WildFly.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;WildFly Day One Operations with Ansible Automation&lt;/strong&gt; ‚Äì Discover best practices for deploying and managing WildFly with Ansible.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Everything about Jakarta EE TCKs in twenty minutes&lt;/strong&gt; ‚Äì A concise session covering the essentials of Jakarta EE compatibility testing.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;WildFly in a Vendor-Neutral Foundation&lt;/strong&gt; ‚Äì Exploring the ecosystem and collaboration opportunities for WildFly.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;WildFly AI Feature Pack: Deploying an MCP Server&lt;/strong&gt; ‚Äì Learn how the WildFly AI Feature Pack enables intelligent middleware capabilities and enhances application deployments with AI-driven optimizations.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect3&quot;&gt;
&lt;h4 id=&quot;date-tuesday-march-25-2025&quot;&gt;üìÖ Date: Tuesday, March 25, 2025&lt;/h4&gt;

&lt;/div&gt;
&lt;div class=&quot;sect3&quot;&gt;
&lt;h4 id=&quot;time-1400-1800-utc&quot;&gt;‚è∞ Time: 14:00 - 18:00 UTC&lt;/h4&gt;

&lt;/div&gt;
&lt;div class=&quot;sect3&quot;&gt;
&lt;h4 id=&quot;live-stream-youtube-live&quot;&gt;üîó Live stream: &lt;a href=&quot;https://www.youtube.com/live/d8IExBP7rxw&quot;&gt;YouTube Live&lt;/a&gt;&lt;/h4&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Make sure to click &quot;Notify me&quot; on YouTube to receive reminders before the event starts.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This conference is a great opportunity for Java developers, middleware engineers, and open-source enthusiasts to explore the future of WildFly and enterprise Java. For more details, checkout our &lt;a href=&quot;https://www.wildfly.org/events/wmc-202503.html&quot;&gt;conference page&lt;/a&gt;. We look forward to seeing you online for another great WildFly Mini Conference!&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;</content>
      

      
      
      
      
      

      
        <author>
          <name>Ranabir Chakraborty</name>
          
          
        </author>
      

      
        
      

      
        <category term="wildfly" />
      
        <category term="announcement" />
      
        <category term="conference" />
      
        <category term="wildfly-mini-conference" />
      

      
        <summary type="html">Hello, WildFly Community!</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">Testing WildFly applications on Kubernetes with Arquillian Cube</title>
      <link href="https://hpehl.github.io/wildfly.org/news/2025/03/06/testing-on-k8s-with-cube/" rel="alternate" type="text/html" title="Testing WildFly applications on Kubernetes with Arquillian Cube" />
      <published>2025-03-06T00:00:00+01:00</published>
      <updated>2025-03-06T00:00:00+01:00</updated>
      <id>https://hpehl.github.io/wildfly.org/news/2025/03/06/testing-on-k8s-with-cube</id>
      
      
        <content type="html" xml:base="https://hpehl.github.io/wildfly.org/news/2025/03/06/testing-on-k8s-with-cube/">&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Recently we blogged about testing WildFly on Docker effectively and easily, thanks to Arquillian Cube, now it&amp;#8217;s time to make it Kubernetes!&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In the &lt;a href=&quot;https://www.wildfly.org/news/2025/01/27/testing-on-docker-with-cube/&quot;&gt;Testing WildFly applications on Docker with Arquillian Cube&lt;/a&gt;
article we saw how an Arquillian Cube test can be implemented to automate the build and execution of a Docker image that
contains a WildFly deployment, and to run tests against it.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This time we&amp;#8217;ll see how a very similar process can be used to set up an automated integration test for a WildFly
application that should instead be run on Kubernetes.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Our goal is to provide an automated solution to replace the final part of the
&lt;a href=&quot;https://www.wildfly.org/guides/get-started-microservices-on-kubernetes/simple-microservice-part2&quot;&gt;WildFly Java Microservice - PART 2: Kubernetes&lt;/a&gt;
guide.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;use-case&quot;&gt;Use case&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The &lt;a href=&quot;https://www.wildfly.org/guides/get-started-microservices-on-kubernetes/simple-microservice-part2&quot;&gt;WildFly Java Microservice - PART 2: Kubernetes&lt;/a&gt;
guide uses an existing Docker image, pushes it to Quay.io, and then shows how to create Kubernetes resources, namely a
&lt;code&gt;Deployment&lt;/code&gt; that manages the WildFly application workload, and a &lt;code&gt;NodePort&lt;/code&gt; type &lt;code&gt;Service&lt;/code&gt; that exposes it externally.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;That&amp;#8217;s cool!&amp;#8230;&amp;#8203; but still, it is based on manual steps.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In order to automate this, we&amp;#8217;ll modify the example application that we showcased in
&lt;a href=&quot;https://www.wildfly.org/news/2025/01/27/testing-on-docker-with-cube/&quot;&gt;our previous article&lt;/a&gt;,
to add a JUnit test, powered by Arquillian Cube, that will automate the Kubernetes resources creation, starting from
existing YAML definitions, and use APIs and annotations at the test class level.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;step-by-step-changes&quot;&gt;Step by step changes&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;As said, we will to start from the
&lt;a href=&quot;https://www.wildfly.org/news/2025/01/27/testing-on-docker-with-cube/&quot;&gt;Testing WildFly applications on Docker with Arquillian Cube&lt;/a&gt; article, so make sure to go through it, and maybe create a separate Git repo, or branch if you want to keep working on
both examples, then&amp;#8230;&amp;#8203;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;kubernetes-resources-definition&quot;&gt;Kubernetes resources definition&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Let&amp;#8217;s copy/paste the YAML definition which is used in
&lt;a href=&quot;https://www.wildfly.org/guides/get-started-microservices-on-kubernetes/simple-microservice-part2&quot;&gt;WildFly Java Microservice - PART 2: Kubernetes&lt;/a&gt; into a &lt;em&gt;kubernetes.yaml&lt;/em&gt; file, that we&amp;#8217;ll place in our project &lt;code&gt;test/resources&lt;/code&gt; folder.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We&amp;#8217;ll modify the &lt;code&gt;Deployment&lt;/code&gt; name, but it is basically the same as the one in the guide:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-jaxrs-app-deployment
  labels:
    app: my-jaxrs-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: my-jaxrs-app
  template:
    metadata:
      labels:
        app: my-jaxrs-app
    spec:
      containers:
      - name: my-jaxrs-app
        image: quay.io/tborgato/my-jaxrs-app
        ports:
        - containerPort: 8080
        - containerPort: 9990
        livenessProbe:
          httpGet:
            path: /health/live
            port: 9990
        readinessProbe:
          httpGet:
            path: /health/ready
            port: 9990
        startupProbe:
          httpGet:
            path: /health/started
            port: 9990&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Then - similarly to what is manually done in the WildFly miniseries guide - let&amp;#8217;s add a Kubernetes &lt;code&gt;Service&lt;/code&gt; resource
definition, by appending it to the same file. Here as well, we&amp;#8217;ll use a meaningful name:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;apiVersion: v1
kind: Service
metadata:
  name: my-jaxrs-app-service
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: my-jaxrs-app&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The whole &lt;em&gt;kubernetes.yaml&lt;/em&gt; file will now look like this:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;apiVersion: v1
kind: Service
metadata:
  name: my-jaxrs-app-service
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: my-jaxrs-app
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-jaxrs-app-deployment
  labels:
    app: my-jaxrs-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: my-jaxrs-app
  template:
    metadata:
      labels:
        app: my-jaxrs-app
    spec:
      containers:
      - name: my-jaxrs-app
        image: quay.io/tborgato/my-jaxrs-app
        ports:
        - containerPort: 8080
        - containerPort: 9990
        livenessProbe:
          httpGet:
            path: /health/live
            port: 9990
        readinessProbe:
          httpGet:
            path: /health/ready
            port: 9990
        startupProbe:
          httpGet:
            path: /health/started
            port: 9990&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;and, rather than applying it manually to our &lt;em&gt;Minikube&lt;/em&gt; instance via a &lt;code&gt;kubectl&lt;/code&gt; command, we&amp;#8217;ll let Arquillian Cube do the job!&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Specifically, Arquillian Cube provides several ways to automate your Kubernetes tests - including a
&lt;a href=&quot;http://arquillian.org/arquillian-cube/#&lt;em&gt;jkube_kubernetes_openshift_maven_plugin_integration_with_cube&quot;&gt;JKube plugin
integration&lt;/a&gt; - but we&amp;#8217;ll use the most common approach in this example, i.e. using a _kubernetes.yaml&lt;/em&gt; definition in the
classpath.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;If such a definition exists, then Arquillian Cube will apply it to the cluster, and it will provide us with APIs and
annotations at the class level that we&amp;#8217;ll use to wire the test logic up, as we&amp;#8217;ll see later on.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;update-the-example-project-pom&quot;&gt;Update the example project POM&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;A few changes, provided we started from the previous article about
&lt;a href=&quot;https://www.wildfly.org/news/2025/01/27/testing-on-docker-with-cube/&quot;&gt;Testing WildFly applications on Docker with Arquillian Cube&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The first thing we need to do is to add a couple more properties for two new dependencies that we&amp;#8217;ll need to add; details
are explained later:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;    &amp;lt;fabric8.kubernetes-client.version&amp;gt;6.9.2&amp;lt;/fabric8.kubernetes-client.version&amp;gt;
    &amp;lt;undertow-core.version&amp;gt;1.3.33.Final&amp;lt;/undertow-core.version&amp;gt;
    &amp;lt;resteasy-client.version&amp;gt;6.2.11.Final&amp;lt;/resteasy-client.version&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Then, in order to make our project POM more readable, we should &lt;strong&gt;remove&lt;/strong&gt; the code that we commented out
&lt;a href=&quot;https://www.wildfly.org/news/2025/01/27/testing-on-docker-with-cube/&quot;&gt;in the above-mentioned article&lt;/a&gt;, so let&amp;#8217;s start
by removing the following block in the &lt;code&gt;&amp;lt;dependencyManagment&amp;gt;&lt;/code&gt; section, i.e.:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;        &amp;lt;!-- Arquillian Cube still using JUnit 4 by default --&amp;gt;
        &amp;lt;!--            &amp;amp;lt;!&amp;amp;ndash;Define the JUnit5 bom. WildFly BOM still contains JUnit4, so we have to declare a version here &amp;amp;ndash;&amp;amp;gt;--&amp;gt;
        &amp;lt;!--            &amp;lt;dependency&amp;gt;--&amp;gt;
        &amp;lt;!--                &amp;lt;groupId&amp;gt;org.junit&amp;lt;/groupId&amp;gt;--&amp;gt;
        &amp;lt;!--                &amp;lt;artifactId&amp;gt;junit-bom&amp;lt;/artifactId&amp;gt;--&amp;gt;
        &amp;lt;!--                &amp;lt;version&amp;gt;${version.junit5}&amp;lt;/version&amp;gt;--&amp;gt;
        &amp;lt;!--                &amp;lt;type&amp;gt;pom&amp;lt;/type&amp;gt;--&amp;gt;
        &amp;lt;!--                &amp;lt;scope&amp;gt;import&amp;lt;/scope&amp;gt;--&amp;gt;
        &amp;lt;!--            &amp;lt;/dependency&amp;gt;--&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;then, let&amp;#8217;s &lt;strong&gt;remove&lt;/strong&gt; the commented out fragments in the &lt;code&gt;&amp;lt;build&amp;gt;/&amp;lt;dependencies&amp;gt;&lt;/code&gt; section:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;        &amp;lt;!-- Test scope dependencies --&amp;gt;
        &amp;lt;!-- Arquillian Cube still using JUnit 4 by default --&amp;gt;
        &amp;lt;!--        &amp;lt;dependency&amp;gt;--&amp;gt;
        &amp;lt;!--            &amp;lt;groupId&amp;gt;org.junit.jupiter&amp;lt;/groupId&amp;gt;--&amp;gt;
        &amp;lt;!--            &amp;lt;artifactId&amp;gt;junit-jupiter&amp;lt;/artifactId&amp;gt;--&amp;gt;
        &amp;lt;!--            &amp;lt;scope&amp;gt;test&amp;lt;/scope&amp;gt;--&amp;gt;
        &amp;lt;!--        &amp;lt;/dependency&amp;gt;--&amp;gt;

        &amp;lt;!-- Not needed anymore because the test uses a standalone Docker container --&amp;gt;
        &amp;lt;!--        &amp;lt;dependency&amp;gt;--&amp;gt;
        &amp;lt;!--            &amp;lt;groupId&amp;gt;org.wildfly.arquillian&amp;lt;/groupId&amp;gt;--&amp;gt;
        &amp;lt;!--            &amp;lt;artifactId&amp;gt;wildfly-arquillian-container-managed&amp;lt;/artifactId&amp;gt;--&amp;gt;
        &amp;lt;!--            &amp;lt;scope&amp;gt;test&amp;lt;/scope&amp;gt;--&amp;gt;
        &amp;lt;!--        &amp;lt;/dependency&amp;gt;--&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Done with removals.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Now, onto the &lt;code&gt;dependencyManagment&lt;/code&gt; section, which also contains a definition of the wildfly-ee BOM,
used in &lt;a href=&quot;https://www.wildfly.org/news/2025/01/27/testing-on-docker-with-cube/&quot;&gt;our previous example&lt;/a&gt;. We can comment that
out now:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;            &amp;lt;!-- The wildfly-ee BOM isn&apos;t needed, since we will not build any WildFly application, but rather use an
            existing image on Quay.io --&amp;gt;
            &amp;lt;!--&amp;amp;lt;!&amp;amp;ndash; JBoss distributes a complete set of Jakarta EE APIs including
                a Bill of Materials (BOM). A BOM specifies the versions of a &quot;stack&quot; (or
                a collection) of artifacts. We use this here so that we always get the correct
                versions of artifacts (you can read this as the WildFly stack of the Jakarta EE APIs,
                with some extras tools for your project, such as Arquillian for testing)
            &amp;amp;ndash;&amp;amp;gt;
            &amp;lt;dependency&amp;gt;
                &amp;lt;groupId&amp;gt;org.wildfly.bom&amp;lt;/groupId&amp;gt;
                &amp;lt;artifactId&amp;gt;wildfly-ee&amp;lt;/artifactId&amp;gt;
                &amp;lt;version&amp;gt;${version.wildfly.bom}&amp;lt;/version&amp;gt;
                &amp;lt;type&amp;gt;pom&amp;lt;/type&amp;gt;
                &amp;lt;scope&amp;gt;import&amp;lt;/scope&amp;gt;
            &amp;lt;/dependency&amp;gt;--&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Let&amp;#8217;s move to the &lt;code&gt;dependencies&lt;/code&gt; section, where we&amp;#8217;ll first comment the Jakarta EE dependencies out:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;        &amp;lt;!-- No Jakarta EE application is built, so we don&apos;t need the dependencies that WildFly is meant to provide --&amp;gt;
        &amp;lt;!--&amp;amp;lt;!&amp;amp;ndash; Import the CDI API, we use provided scope as the API is included in WildFly &amp;amp;ndash;&amp;amp;gt;
        &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;jakarta.enterprise&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;jakarta.enterprise.cdi-api&amp;lt;/artifactId&amp;gt;
            &amp;lt;scope&amp;gt;provided&amp;lt;/scope&amp;gt;
        &amp;lt;/dependency&amp;gt;

        &amp;amp;lt;!&amp;amp;ndash; Import the JAX-RS API, we use provided scope as the API is included in WildFly &amp;amp;ndash;&amp;amp;gt;
        &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;jakarta.ws.rs&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;jakarta.ws.rs-api&amp;lt;/artifactId&amp;gt;
            &amp;lt;scope&amp;gt;provided&amp;lt;/scope&amp;gt;
        &amp;lt;/dependency&amp;gt;--&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The next one is quite important from the Arquillian perspective: we&amp;#8217;ll replace the dependency from the Arquillian Cube
Docker extension with the Arquillian Cube Kubernetes extension, so we&amp;#8217;ll keep the following commented out
block in the example sources for clarity:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;        &amp;lt;!-- Here we&apos;ll depend on arquillian-cube-kubernetes, in order to test on Kubernetes, so let&apos;s remove arquillian-cube-docker... --&amp;gt;
        &amp;lt;!--&amp;lt;dependency&amp;gt;
                &amp;lt;groupId&amp;gt;org.arquillian.cube&amp;lt;/groupId&amp;gt;
                &amp;lt;artifactId&amp;gt;arquillian-cube-docker&amp;lt;/artifactId&amp;gt;
                &amp;lt;scope&amp;gt;test&amp;lt;/scope&amp;gt;
            &amp;lt;/dependency&amp;gt;
            &amp;lt;dependency&amp;gt;
                &amp;lt;groupId&amp;gt;org.jboss.arquillian.junit&amp;lt;/groupId&amp;gt;
                &amp;lt;artifactId&amp;gt;arquillian-junit-container&amp;lt;/artifactId&amp;gt;
                &amp;lt;scope&amp;gt;test&amp;lt;/scope&amp;gt;
            &amp;lt;/dependency&amp;gt;--&amp;gt;
        &amp;lt;!-- ... and depend on arquillian-cube-kubernetes instead, in order to test on Kubernetes. --&amp;gt;
        &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;org.arquillian.cube&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;arquillian-cube-kubernetes&amp;lt;/artifactId&amp;gt;
            &amp;lt;scope&amp;gt;test&amp;lt;/scope&amp;gt;
        &amp;lt;/dependency&amp;gt;
        &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;org.arquillian.cube&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;arquillian-cube-kubernetes-starter&amp;lt;/artifactId&amp;gt;
            &amp;lt;scope&amp;gt;test&amp;lt;/scope&amp;gt;
        &amp;lt;/dependency&amp;gt;
        &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;io.fabric8&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;kubernetes-client&amp;lt;/artifactId&amp;gt;
            &amp;lt;version&amp;gt;${fabric8.kubernetes-client.version}&amp;lt;/version&amp;gt;
            &amp;lt;scope&amp;gt;test&amp;lt;/scope&amp;gt;
        &amp;lt;/dependency&amp;gt;
        &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;io.undertow&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;undertow-core&amp;lt;/artifactId&amp;gt;
            &amp;lt;version&amp;gt;${undertow-core.version}&amp;lt;/version&amp;gt;
            &amp;lt;scope&amp;gt;test&amp;lt;/scope&amp;gt;
        &amp;lt;/dependency&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;As you can see we added the &lt;code&gt;arquillian-cube-kubernetes-starter&lt;/code&gt; and &lt;code&gt;kubernetes-client&lt;/code&gt; dependencies, too.
The former is needed to let Arquillian Cube automatically start the Kubernetes &quot;container&quot; (broader meaning here).
The latter provides us with all the Kubernetes APIs, which we&amp;#8217;ll use in the test class, as we&amp;#8217;ll see below.
We had to lock the &lt;code&gt;undertow-core&lt;/code&gt; dependency version too, since we need one that is compatible with Arquillian Cube 2.0.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Let&amp;#8217;s remove the following JBoss Logging dependency, as it will not be used:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;        &amp;lt;!--See https://issues.redhat.com/browse/WFLY-19779 and https://github.com/wildfly/quickstart/pull/957/
            httpclient needs commons-logging yet the server uses this instead,
            to be fully compatible on apps we need to add this dependency whenever commons-logging is needed,
            but on testing clients like this we could use commons-logging instead
        &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;org.jboss.logging&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;commons-logging-jboss-logging&amp;lt;/artifactId&amp;gt;
            &amp;lt;scope&amp;gt;test&amp;lt;/scope&amp;gt;
        &amp;lt;/dependency&amp;gt;
        --&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;One last thing in the test dependencies section, let&amp;#8217;s give a version to the RESTEasy client dependency, since we
removed the &lt;code&gt;wildfly&amp;#8212;&amp;#8203;ee&lt;/code&gt; BOM from the &lt;code&gt;dependencyManagment&lt;/code&gt; section:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;        &amp;lt;dependency&amp;gt;
            &amp;lt;groupId&amp;gt;org.jboss.resteasy&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;resteasy-client&amp;lt;/artifactId&amp;gt;
            &amp;lt;!-- Add a version to the resteasy-client dependency, as the WildFly EE BOM has been removed from the
            dependencyManagement section --&amp;gt;
            &amp;lt;version&amp;gt;${resteasy-client.version}&amp;lt;/version&amp;gt;
            &amp;lt;scope&amp;gt;test&amp;lt;/scope&amp;gt;
        &amp;lt;/dependency&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Now, onto the &lt;code&gt;&amp;lt;build&amp;gt;/&amp;lt;plugins&amp;gt;&lt;/code&gt; section. First off we don&amp;#8217;t need for the &lt;code&gt;maven-clean-plugin&lt;/code&gt; to clean up any
Docker files; in fact we&amp;#8217;ll remove those from our project sources later on, since this test will not build nor run any
Docker images. Let&amp;#8217;s comment the section as follows:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;        &amp;lt;!-- No Docker resources are used in the test, so we don&apos;t need to clean up anything else --&amp;gt;
        &amp;lt;!--&amp;amp;lt;!&amp;amp;ndash; Let&apos;s remove ./docker-build/server, too &amp;amp;ndash;&amp;amp;gt;
        &amp;lt;configuration&amp;gt;
            &amp;lt;filesets&amp;gt;
                &amp;lt;fileset&amp;gt;
                    &amp;lt;directory&amp;gt;${project.basedir}/docker-build/server&amp;lt;/directory&amp;gt;
                &amp;lt;/fileset&amp;gt;
            &amp;lt;/filesets&amp;gt;
        &amp;lt;/configuration&amp;gt;--&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Then we should remove the WildFly Maven plugin definition, too, as this a Kubernetes test, which will rely on an
image that is deployed to Quay.io already, as per the
&lt;a href=&quot;https://www.wildfly.org/guides/get-started-microservices-on-kubernetes/simple-microservice-part2#quay-io&quot;&gt;WildFly Java
Microservice - PART 2: Kubernetes&lt;/a&gt; original example. Let&amp;#8217;s comment the whole plugin configuration out:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;        &amp;lt;!-- Not needed here, the test relies on an existing docker image which is deployed to Quay.io --&amp;gt;
        &amp;lt;!--&amp;amp;lt;!&amp;amp;ndash; The WildFly plugin deploys your war to a local JBoss AS container &amp;amp;ndash;&amp;amp;gt;
        &amp;lt;plugin&amp;gt;
            &amp;lt;groupId&amp;gt;org.wildfly.plugins&amp;lt;/groupId&amp;gt;
            &amp;lt;artifactId&amp;gt;wildfly-maven-plugin&amp;lt;/artifactId&amp;gt;
            &amp;lt;version&amp;gt;${version.wildfly.maven.plugin}&amp;lt;/version&amp;gt;
            &amp;lt;configuration&amp;gt;
                &amp;amp;lt;!&amp;amp;ndash; We need for the server to be provisioned in ./docker-build/server, as required by the Dockerfile &amp;amp;ndash;&amp;amp;gt;
                &amp;lt;provisioningDir&amp;gt;${project.basedir}/docker-build/server&amp;lt;/provisioningDir&amp;gt;
                &amp;lt;overwriteProvisionedServer&amp;gt;true&amp;lt;/overwriteProvisionedServer&amp;gt;
                &amp;lt;feature-packs&amp;gt;
                    &amp;lt;feature-pack&amp;gt;
                        &amp;lt;location&amp;gt;org.wildfly:wildfly-galleon-pack:${version.wildfly.bom}&amp;lt;/location&amp;gt;
                    &amp;lt;/feature-pack&amp;gt;
                    &amp;lt;feature-pack&amp;gt;
                        &amp;lt;location&amp;gt;org.wildfly.cloud:wildfly-cloud-galleon-pack:7.0.2.Final&amp;lt;/location&amp;gt;
                    &amp;lt;/feature-pack&amp;gt;
                &amp;lt;/feature-packs&amp;gt;
                &amp;lt;layers&amp;gt;
                    &amp;amp;lt;!&amp;amp;ndash; layers may be used to customize the server to provision&amp;amp;ndash;&amp;amp;gt;
                    &amp;lt;layer&amp;gt;cloud-server&amp;lt;/layer&amp;gt;
                &amp;lt;/layers&amp;gt;
            &amp;lt;/configuration&amp;gt;
            &amp;lt;executions&amp;gt;
                &amp;lt;execution&amp;gt;
                    &amp;lt;goals&amp;gt;
                        &amp;lt;goal&amp;gt;package&amp;lt;/goal&amp;gt;
                    &amp;lt;/goals&amp;gt;
                &amp;lt;/execution&amp;gt;
            &amp;lt;/executions&amp;gt;
        &amp;lt;/plugin&amp;gt;--&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Finally, let&amp;#8217;s comment the following section properties, too, since they&amp;#8217;re no longer relevant nor used:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;        &amp;lt;!-- Wildfly dependencies are not used directly, as the test is using an existing WildFly application image --&amp;gt;
        &amp;lt;!--&amp;amp;lt;!&amp;amp;ndash; JBoss dependency versions &amp;amp;ndash;&amp;amp;gt;
        &amp;lt;version.wildfly.maven.plugin&amp;gt;5.1.1.Final&amp;lt;/version.wildfly.maven.plugin&amp;gt;
        &amp;lt;version.wildfly.bom&amp;gt;35.0.0.Final&amp;lt;/version.wildfly.bom&amp;gt;--&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;and similarly with the JUnit 5 related property, since we&amp;#8217;re using JUnit 4:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;        &amp;lt;!-- We don&apos;t need JUnit5, and this property is not used --&amp;gt;
        &amp;lt;!--&amp;amp;lt;!&amp;amp;ndash;Use JUnit 5 here - the WildFly bom still brings 4.x &amp;amp;ndash;&amp;amp;gt;
        &amp;lt;version.junit5&amp;gt;5.10.1&amp;lt;/version.junit5&amp;gt;--&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;And that&amp;#8217;s it, we&amp;#8217;re done with the POM, and feel free to check your version against the example sources on GitHub, where
you can find a &lt;a href=&quot;https://github.com/fabiobrz/wildfly-mini-series-k8s-cube/blob/main/pom.minified.xml&quot;&gt;&quot;minified&quot;&lt;/a&gt; version, too.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Let&amp;#8217;s get to the &lt;code&gt;arquillian.xml&lt;/code&gt; file now, and see how should be modified.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;update-arquillian-xml-configuration&quot;&gt;Update &lt;code&gt;arquillian.xml&lt;/code&gt; configuration&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;A simple update will do, start by removing or commenting the &lt;code&gt;docker&lt;/code&gt; extension part out: easy, we don&amp;#8217;t need a &lt;code&gt;wildfly&lt;/code&gt;
container anymore, so let&amp;#8217;s remove it, and add a &lt;code&gt;kubernetes&lt;/code&gt; extension declaration, which we&amp;#8217;ll keep empty.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;    &amp;lt;!--&amp;lt;extension qualifier=&quot;docker&quot;&amp;gt;
        &amp;lt;property name=&quot;dockerContainersFile&quot;&amp;gt;./docker-compose.yml&amp;lt;/property&amp;gt;
    &amp;lt;/extension&amp;gt;--&amp;gt;
    &amp;lt;extension qualifier=&quot;kubernetes&quot;&amp;gt;
    &amp;lt;/extension&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The last part is about the test class itself, let&amp;#8217;s dive in&amp;#8230;&amp;#8203;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;remove-the-application-sources&quot;&gt;Remove the application sources&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Again, we&amp;#8217;re not building any application here. We rely on a Docker image on Quay that contains the application
already; therefore we don&amp;#8217;t need the application sources, which can be safely removed:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;$ rm -rf src/main/java/org
$ rm -rf src/main/webapp&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;create-a-test-class-for-testing-on-kubernetes&quot;&gt;Create a test class for testing on Kubernetes&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We must actually delete the existing Docker test, first:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;$ rm src/test/java/org/wildfly/examples/GettingStartedDockerIT.java&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;and - as anticipated previously, we&amp;#8217;ll now remove the Docker related resources, too:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;$ rm -rf docker-build
$ rm docker-compose.yml&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;There we go, now it&amp;#8217;s time to create a new &lt;code&gt;GettingStartedKubernetesIT.java&lt;/code&gt; class, with the following contents:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;package org.wildfly.examples;

import io.fabric8.kubernetes.api.model.Service;
import jakarta.ws.rs.client.Client;
import jakarta.ws.rs.client.ClientBuilder;
import jakarta.ws.rs.core.Response;
import org.arquillian.cube.kubernetes.annotations.Named;
import org.arquillian.cube.kubernetes.annotations.PortForward;
import org.jboss.arquillian.junit.Arquillian;
import org.jboss.arquillian.test.api.ArquillianResource;
import org.junit.Assert;
import org.junit.Test;
import org.junit.runner.RunWith;

import java.net.URISyntaxException;
import java.net.URL;

import static junit.framework.TestCase.assertFalse;
import static org.junit.Assert.assertNotNull;

/**
 * Run integration tests on Kubernetes with Arquillian Cube!
 */
@RunWith(Arquillian.class)
public class GettingStartedKubernetesIT {

    @Named(&quot;my-jaxrs-app-service&quot;)
    @ArquillianResource
    private Service myJaxrsAppService;

    @Named(&quot;my-jaxrs-app-service&quot;)
    @PortForward
    @ArquillianResource
    private URL url;

    @Test
    public void shouldFindServiceInstance() {
        assertNotNull(myJaxrsAppService);
        assertNotNull(myJaxrsAppService.getSpec());
        assertNotNull(myJaxrsAppService.getSpec().getPorts());
        assertFalse(myJaxrsAppService.getSpec().getPorts().isEmpty());
    }

    @Test
    public void shouldShowHelloWorld() throws URISyntaxException {
        assertNotNull(url);
        try (Client client = ClientBuilder.newClient()) {
            final String name = &quot;World&quot;;
            Response response = client
                    .target(url.toURI())
                    .path(&quot;/hello/&quot; + name)
                    .request()
                    .get();
            Assert.assertEquals(200, response.getStatus());
            Assert.assertEquals(String.format(&quot;Hello &apos;%s&apos;.&quot;, name), response.readEntity(String.class));
        }
    }
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;As you can see, the test didn&amp;#8217;t change much from the one in the
&lt;a href=&quot;https://www.wildfly.org/news/2025/01/27/testing-on-docker-with-cube/&quot;&gt;Testing WildFly applications on Docker with
Arquillian Cube&lt;/a&gt; example:
we verify that the service - which is implemented by a Kubernetes workload - returns HTTP 200 and the expected response
body when it is called via its URL.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;And that is where Arquillian Cube comes in handy because, thanks to it, we could inject such a URL in our test class
&lt;code&gt;url&lt;/code&gt; &lt;em&gt;field&lt;/em&gt; just by using an annotation.
Similarly, we have injected an &lt;code&gt;io.fabric8.kubernetes.api.model.Service&lt;/code&gt; instance which represents the Kubernetes
service resource that we Arquillian Cube creates based on the &lt;em&gt;kubernetes.yaml&lt;/em&gt; definition.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;run-the-test&quot;&gt;Run the test&lt;/h3&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;That&amp;#8217;s it, we can run our Kubernetes integration test. Arquillian Cube will use the information stored in the
~/.kube/config file to connect to a Kubernetes cluster, or
&lt;a href=&quot;http://arquillian.org/arquillian-cube/#_kubernetes_configuration_parameters&quot;&gt;let you provide parameters&lt;/a&gt;.
For this example, starting a &lt;a href=&quot;https://minikube.sigs.k8s.io/docs/&quot;&gt;&lt;code&gt;minikube&lt;/code&gt;&lt;/a&gt; instance will be enough:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;minikube start&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;and then issue the following command:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;mvn clean install&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;and we&amp;#8217;ll see how Arquillian Cube will gather the kubernetes extension configuration, then summarize the container
definition, trace the resources creation on the cluster, and eventually run the test:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;[INFO] -------------------------------------------------------
[INFO]  T E S T S
[INFO] -------------------------------------------------------
[INFO] Running org.wildfly.examples.GettingStartedKubernetesIT
...
CubeKubernetesConfiguration:
  namespace = itest-4d12b880
  master.url = https://192.168.39.213:8443/
  namespace.lazy.enabled = true
  namespace.cleanup.enabled = true
  namespace.cleanup.timeout = 0
  namespace.cleanup.confirm.enabled = false
  namespace.destroy.enabled = true
  namespace.destroy.confirm.enabled = false
  namespace.destroy.timeout = 0
  wait.enabled = true
  wait.timeout = 480000
  wait.poll.interval = 5000
  ansi.logger.enabled = true
  env.init.enabled = true
  logs.copy = false
  cube.api.version = v1
  cube.trust.certs = true
  cube.fmp.build = false
  cube.fmp.build.disable.for.mvn = false
  cube.fmp.pom.path = pom.xml
  cube.fmp.debug.output = false
  cube.fmp.logs = true

Initializing Session:4d12b880
Using Kubernetes at: https://192.168.39.213:8443/
Creating namespace: itest-4d12b880...
To switch to the new namespace: kubectl config set-context `kubectl config current-context` --namespace=itest-4d12b880
Applying kubernetes configuration from: file:/home/fburzigo/Projects/git/fabiobrz/wfly-mini-k8s-cube/getting-started/target/test-classes/kubernetes.yaml
ReplicaSet: [my-jaxrs-app-deployment-56bbc54bf9]
Pod: [my-jaxrs-app-deployment-56bbc54bf9-zsc2m] Status: [Running]
Service: [my-jaxrs-app-service] IP: [10.111.189.164] Ports: [ 80 ]
Jan 31, 2025 4:49:45 PM org.arquillian.cube.kubernetes.impl.resources.KubernetesResourcesApplier applyKubernetesResourcesAtClassScope
INFO: Creating environment for org.wildfly.examples.GettingStartedKubernetesIT
Jan 31, 2025 4:49:45 PM org.arquillian.cube.kubernetes.impl.resources.KubernetesResourcesApplier applyKubernetesResourcesAtMethodScope
INFO: Creating environment for org.wildfly.examples.GettingStartedKubernetesIT method shouldShowHelloWorld
Jan 31, 2025 4:49:45 PM org.xnio.Xnio &amp;lt;clinit&amp;gt;
INFO: XNIO version 3.8.16.Final
Jan 31, 2025 4:49:45 PM org.xnio.nio.NioXnio &amp;lt;clinit&amp;gt;
INFO: XNIO NIO Implementation Version 3.8.16.Final
Jan 31, 2025 4:49:46 PM org.jboss.threads.Version &amp;lt;clinit&amp;gt;
INFO: JBoss Threads version 2.4.0.Final
Jan 31, 2025 4:49:46 PM org.arquillian.cube.kubernetes.impl.resources.KubernetesResourcesApplier removeKubernetesResourcesAtMethodScope
INFO: Deleting environment for org.wildfly.examples.GettingStartedKubernetesIT method shouldShowHelloWorld
Jan 31, 2025 4:49:46 PM org.arquillian.cube.kubernetes.impl.resources.KubernetesResourcesApplier applyKubernetesResourcesAtMethodScope
INFO: Creating environment for org.wildfly.examples.GettingStartedKubernetesIT method shouldFindServiceInstance
Jan 31, 2025 4:49:46 PM org.arquillian.cube.kubernetes.impl.resources.KubernetesResourcesApplier removeKubernetesResourcesAtMethodScope
INFO: Deleting environment for org.wildfly.examples.GettingStartedKubernetesIT method shouldFindServiceInstance
Jan 31, 2025 4:49:46 PM org.arquillian.cube.kubernetes.impl.resources.KubernetesResourcesApplier removeKubernetesResourcesAtClassScope
INFO: Deleting environment for org.wildfly.examples.GettingStartedKubernetesIT
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 15.05 s -- in org.wildfly.examples.GettingStartedKubernetesIT
Deleting namespace: itest-4d12b880...
Namespace: itest-4d12b880, successfully deleted
Destroying Session:4d12b880
[INFO]
[INFO] Results:
[INFO]
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0
...
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  18.281 s
[INFO] Finished at: 2025-01-31T16:49:47+01:00
[INFO] ------------------------------------------------------------------------&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;in-conclusion&quot;&gt;In conclusion&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Testing a WildFly application directly on Kubernetes will make the test more effective, and will allow prototyping and
make debugging easier.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Arquillian Cube provides an easy and effective way to test on Kubernetes, with almost no configuration and instrumentation
changes with respect to existing Arquillian based tests.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The code for the example application which is described in this article is here: &lt;a href=&quot;https://github.com/fabiobrz/wildfly-mini-series-k8s-cube&quot; class=&quot;bare&quot;&gt;https://github.com/fabiobrz/wildfly-mini-series-k8s-cube&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Fabio Burzigotti&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</content>
      

      
      
      
      
      

      
        <author>
          <name>Fabio Burzigotti</name>
          
          
        </author>
      

      
        
      

      
        <category term="wildfly" />
      
        <category term="kubernetes" />
      
        <category term="arquillian" />
      
        <category term="cube" />
      
        <category term="containers" />
      

      
        <summary type="html">Recently we blogged about testing WildFly on Docker effectively and easily, thanks to Arquillian Cube, now it&amp;#8217;s time to make it Kubernetes!</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">WildFly and Red Hat's middleware strategy</title>
      <link href="https://hpehl.github.io/wildfly.org/news/2025/03/05/WildFly_and_Red_Hat_strategy/" rel="alternate" type="text/html" title="WildFly and Red Hat's middleware strategy" />
      <published>2025-03-05T00:00:00+01:00</published>
      <updated>2025-03-05T00:00:00+01:00</updated>
      <id>https://hpehl.github.io/wildfly.org/news/2025/03/05/WildFly_and_Red_Hat_strategy</id>
      
      
        <content type="html" xml:base="https://hpehl.github.io/wildfly.org/news/2025/03/05/WildFly_and_Red_Hat_strategy/">&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Hi,&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Red Hat announced significant changes to its middleware strategy last month, and I wanted to give the WildFly community some context about those changes and how they affect WildFly.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The Red Hat announcement can be found on the Red Hat blog:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;a href=&quot;https://www.redhat.com/en/blog/evolving-our-middleware-strategy&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Evolving our middleware strategy&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Some key points there are:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Red Hat‚Äôs Middleware and Integration Engineering and Products teams are moving to IBM in May 2025.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Red Hat will continue to sell and support its Middleware and Integration offerings as they do today; this will not be impacted.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;All transitioning Red Hat technology will remain open source and continue to follow an upstream-first development model.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Red Hat has sponsored the WildFly project (fka JBoss AS) since 2006, when it bought JBoss, Inc. Now, Red Hat‚Äôs participation in and support for WildFly is being transferred to IBM.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;WildFly has a vibrant, healthy community with different kinds of contributions from people from various companies all over the world. Still, it&amp;#8217;s undoubtedly the case that the bulk of our code contributions come from Red Hat employees working on the middleware product teams that are moving to IBM.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;However, I don&amp;#8217;t expect this change to have a significant impact on the WildFly project, beyond the inevitable temporary disruption as the people who are moving focus some of their energy on the move.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;WildFly is the upstream project for Red Hat&amp;#8217;s JBoss Enterprise Application Platform (EAP) product. EAP will continue to be sold and supported through Red Hat, and will continue to be developed following an upstream-first development model. That model means that features and fixes for EAP will land first in WildFly&amp;#8217;s main branch or in the main branches of the components integrated into WildFly.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;IBM and Red Hat leaders have clearly stated that current and future contributions to WildFly are a key component of their middleware strategy.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;So, we&amp;#8217;ll continue to work on behalf of the WildFly community, striving to improve WildFly. Some things we&amp;#8217;ll be doing:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;We&amp;#8217;ll have another &lt;a href=&quot;https://www.wildfly.org//events/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;WildFly Mini Conference&lt;/a&gt; soon. Watch this space for more details!&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;We&amp;#8217;re hard at work on WildFly 36, with its final release expected around April 10.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;After that, we move on to WildFly 37, which is expected in July. We intend to continue producing feature releases quarterly, followed by a bug fix release about a month later.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Work continues on EE 11 support in WildFly Preview and eventually in standard WildFly.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;We&amp;#8217;ll continue to innovate outside of the Jakarta and MicroProfile areas, including &lt;a href=&quot;https://www.youtube.com/watch?v=wg1hAdOoe2w&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;AI&lt;/a&gt; and &lt;a href=&quot;https://www.wildfly.org/news/2025/02/10/Glowing-with-AI/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;WildFly Glow&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;We&amp;#8217;ll continue to keep up with advancements in Java SE, with an aspiration of having each WildFly feature release run well on the latest SE release available when it comes out, and being able to recommend the latest LTS SE release as the preferred option as soon as possible after it comes out.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Last month, I posted about &lt;a href=&quot;https://www.wildfly.org/news/2025/02/03/WildFly-in-a-Foundation/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;transitioning the WildFly project to a vendor-neutral software foundation&lt;/a&gt;. I intend to continue with this process. Note that our interest in moving to an open source foundation was not triggered by Red Hat&amp;#8217;s strategy change. We&amp;#8217;d been thinking about a move to a foundation since well before we learned about the move to IBM.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Personally, I&amp;#8217;ll be sorry to leave Red Hat, which has been a fantastic place to work. Back in 2006, I was sorry to leave JBoss, Inc for the much bigger Red Hat, too, but it worked out very well. I think combining forces with Java teams at IBM makes a lot of sense and will be good for the middleware projects and products.  There&amp;#8217;s a lot of growth and innovation potential in the middleware technologies we offer and I&amp;#8217;m looking forward to being part of a larger team excited about and focused on that potential.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Best regards,&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Brian Stansberry&lt;br&gt;
WildFly Project Lead&lt;/p&gt;
&lt;/div&gt;</content>
      

      
      
      
      
      

      
        <author>
          <name>Brian Stansberry</name>
          
          
        </author>
      

      
        
      

      
        <category term="announcement" />
      
        <category term="red" />
      
        <category term="hat" />
      
        <category term="ibm" />
      

      
        <summary type="html">Hi,</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">Vlog: Admin your WildFly with LLM and MCP</title>
      <link href="https://www.youtube.com/watch?v=wg1hAdOoe2w" rel="alternate" type="text/html" title="Vlog: Admin your WildFly with LLM and MCP" />
      <published>2025-02-13T00:00:00+01:00</published>
      <updated>2025-02-13T00:00:00+01:00</updated>
      <id>https://www.youtube.com/watch?v=wg1hAdOoe2w</id>
      
      
        <content type="html" xml:base="https://www.youtube.com/watch?v=wg1hAdOoe2w"></content>
      

      
      
      
      
      

      
        <author>
          <name>smaesti</name>
          
          
        </author>
      

      
        
      

      
        <category term="wildfly" />
      
        <category term="ai" />
      
        <category term="management" />
      
        <category term="vlog" />
      

      
        <summary type="html">This video demonstrates using an MCP server to administer a WildFly installation with AI.</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">An introduction to use the domain mode of the current release of WildFly</title>
      <link href="https://hpehl.github.io/wildfly.org/news/2025/02/12/wildfly-domain-usage/" rel="alternate" type="text/html" title="An introduction to use the domain mode of the current release of WildFly" />
      <published>2025-02-12T00:00:00+01:00</published>
      <updated>2025-02-12T00:00:00+01:00</updated>
      <id>https://hpehl.github.io/wildfly.org/news/2025/02/12/wildfly-domain-usage</id>
      
      
        <content type="html" xml:base="https://hpehl.github.io/wildfly.org/news/2025/02/12/wildfly-domain-usage/">&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I recently tried to play with the domain mode in the current release of WildFly, version 35, while writing this blog post.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;According to the blog post written by Brian Stansberry&lt;sup class=&quot;footnote&quot;&gt;[&lt;a id=&quot;_footnoteref_1&quot; class=&quot;footnote&quot; href=&quot;#_footnotedef_1&quot; title=&quot;View footnote.&quot;&gt;1&lt;/a&gt;]&lt;/sup&gt;, there are some breaking backward-compatibility changes in the security configuration part related to Elytron since WildFly 25:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;quoteblock&quot;&gt;
&lt;blockquote&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;A key focus in WildFly 25 has been completing our migration away from the legacy security layer that dates back to JBoss AS and onto the &lt;a href=&quot;https://wildfly-security.github.io/wildfly-elytron/&quot;&gt;WildFly Elytron&lt;/a&gt; based &lt;a href=&quot;https://docs.wildfly.org/24/WildFly_Elytron_Security.html&quot;&gt;security layer&lt;/a&gt; introduced in WildFly 11. SE 17 does not provide packages that legacy security heavily relies upon, so the time has come to complete the transition off of legacy security.&lt;/p&gt;
&lt;/div&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Nevertheless, the resources I could find are mostly outdated or don&amp;#8217;t contain the step-by-step walkthrough about the minimal configuration to be done for using the domain mode of WildFly. I have written a book before, explaining the domain mode usage of WildFly&lt;sup class=&quot;footnote&quot;&gt;[&lt;a id=&quot;_footnoteref_2&quot; class=&quot;footnote&quot; href=&quot;#_footnotedef_2&quot; title=&quot;View footnote.&quot;&gt;2&lt;/a&gt;]&lt;/sup&gt;. There is also a relative document about the domain mode setup&lt;sup class=&quot;footnote&quot;&gt;[&lt;a id=&quot;_footnoteref_3&quot; class=&quot;footnote&quot; href=&quot;#_footnotedef_3&quot; title=&quot;View footnote.&quot;&gt;3&lt;/a&gt;]&lt;/sup&gt;. All these materials are outdated on the domain configuration topic, so I&amp;#8217;d like to update the knowledge on this topic in this blog post, showing how to configure the domain mode for the most recent version of WildFly server, which is version 35 when I&amp;#8217;m writing this blog post. I won‚Äôt cover all the detail usages of the domain mode in this blog post, but it will be a good start to follow the instructions in this blog posts for the further studies.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Here is my local environment setup to use the domain mode of the WildFly server:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;span class=&quot;image&quot;&gt;&lt;img src=&quot;/wildfly.org/assets/img/news/2025-01-wildfly-domain/01.png&quot; alt=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;As the deployment diagram shows above, I used two machines to run the WildFly server in domain mode. In the above setup, the WildFly server running on Machine A acts as a domain controller, and the WildFly server on Machine B will be connected to Machine A accepting the management from the domain server.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The host name of the WildFly server running on Machine A will be configured to &lt;code&gt;primary&lt;/code&gt;(this will be defined in the &lt;code&gt;name&lt;/code&gt; property in the &lt;code&gt;host.xml&lt;/code&gt;), and the host name of the WildFly server running on Machine B will be configured to &lt;code&gt;secondary&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Both WildFly servers, running on two different machines, will be configured to run a managed server (defined in the server section of the &lt;code&gt;host.xml&lt;/code&gt;) within the same server group, named &lt;code&gt;other-server-group&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The Primary Host Controller will define a &lt;code&gt;server-three&lt;/code&gt; managed server, while the Secondary Host Controller will define a &lt;code&gt;server-two&lt;/code&gt; managed server, both belonging to the &lt;code&gt;other-server-group&lt;/code&gt; server group.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In this way, the Domain Controller can manage the server group and deploy user applications to the managed servers within it, even though the managed servers are running on different hosts.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The first step is to download the current version of WildFly. I will use version &lt;code&gt;35.0.0.Final&lt;/code&gt; version in this blog post which is the newest final version when I‚Äôm writing this blog post. Here is the release page:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/wildfly/wildfly/releases/tag/35.0.0.Final&quot;&gt;Release 35.0.0.Final ¬∑ wildfly/wildfly&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;‚ùØ wget https://github.com/wildfly/wildfly/releases/download/35.0.0.Final/wildfly-35.0.0.Final.zip&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;After the WildFly server zip file is downloaded and extracted into both machines, I can do the configuration work. The extracted WildFly server directory has some of the configuration files out-of-box. Here are the domain configurations provided:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;‚ùØ ls wildfly-35.0.0.Final/domain/configuration/
application-roles.properties            host-secondary.xml
application-users.properties            host.xml
default-server-logging.properties       logging.properties
domain.xml                              mgmt-groups.properties
host-primary.xml                        mgmt-users.properties&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;From the above command output, we can see in the &lt;code&gt;wildfly-35.0.0.Final/domain/configuration/&lt;/code&gt; directory, it contains &lt;code&gt;host-primary.xml&lt;/code&gt; and &lt;code&gt;host-secondary.xml&lt;/code&gt; files. I will use &lt;code&gt;host-secondary.xml&lt;/code&gt; with some modifications in Machine B. However, I‚Äôll use the &lt;code&gt;host.xml&lt;/code&gt; instead of &lt;code&gt;host-primary.xml&lt;/code&gt; in Machine A, because &lt;code&gt;host-primary.xml&lt;/code&gt; has removed all the &lt;code&gt;servers&lt;/code&gt; configuration, but we need these &lt;code&gt;servers&lt;/code&gt; configuration in our setup. However, I still need to configure a Managed Server in Machine A for demonstration purposes.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;First, let‚Äôs check the &lt;code&gt;host.xml&lt;/code&gt; on Machine A to fit the requirement. In &lt;code&gt;host.xml&lt;/code&gt;, the host name is set to &lt;code&gt;primary&lt;/code&gt; by default:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&amp;lt;host xmlns=&quot;urn:jboss:domain:community:20.0&quot; name=&quot;primary&quot;&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This is what I expect, so I don‚Äôt need to change it.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Instead of directly editing the configuration file, we can use the &lt;code&gt;jboss-cli.sh&lt;/code&gt; to connect to the server to edit the configuration file in a more controllable way. To do this, we can first run the &lt;code&gt;jboss-cli.sh&lt;/code&gt;:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;‚ùØ pwd
/Users/weli/works/wildfly-35.0.0.Final/bin
weli@192 ~/works/wildfly-35.0.0.Final/bin
‚ùØ ./jboss-cli.sh
You are disconnected at the moment. Type &apos;connect&apos; to connect to the server or &apos;help&apos; for the list of supported commands.
[disconnected /]&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;After entering the CLI, run the following command to connect to the host controller:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;[disconnected /] embed-host-controller
[domain@embedded /]&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The above command will run the domain server in offline-mode(To learn about the detailed usages of the above command, you can read this blog post&lt;sup class=&quot;footnote&quot;&gt;[&lt;a id=&quot;_footnoteref_4&quot; class=&quot;footnote&quot; href=&quot;#_footnotedef_4&quot; title=&quot;View footnote.&quot;&gt;4&lt;/a&gt;]&lt;/sup&gt;). And we can now configure the server in the CLI, and all the changes will be persisted into the host controller configuration file(by default it‚Äôs &lt;code&gt;host.xml&lt;/code&gt;).&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Now we can use the CLI to read the host name:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;[domain@embedded /] /:read-attribute(name=local-host-name)
{
    &quot;outcome&quot; =&amp;gt; &quot;success&quot;,
    &quot;result&quot; =&amp;gt; &quot;primary&quot;
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;It&amp;#8217;s preferred to use CLI command instead of directly operating on the host controller configuration file. In the rest of this blog post, I&amp;#8217;ll introduce both the content of the host controller file, and the way to use the CLI command to modify it.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Now we can see the &lt;code&gt;host.xml&lt;/code&gt; file has two servers settings by default:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&amp;lt;server name=&quot;server-one&quot; group=&quot;main-server-group&quot;/&amp;gt;
&amp;lt;server name=&quot;server-two&quot; group=&quot;main-server-group&quot; auto-start=&quot;true&quot;&amp;gt;
    &amp;lt;jvm name=&quot;default&quot;/&amp;gt;
    &amp;lt;socket-bindings port-offset=&quot;150&quot;/&amp;gt;
&amp;lt;/server&amp;gt;
&amp;lt;server name=&quot;server-three&quot; group=&quot;other-server-group&quot; auto-start=&quot;false&quot;&amp;gt;
    &amp;lt;jvm name=&quot;default&quot;/&amp;gt;
    &amp;lt;socket-bindings port-offset=&quot;250&quot;/&amp;gt;
&amp;lt;/server&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I‚Äôll use only &lt;code&gt;server-three&lt;/code&gt; in this blog post, so I comment out the &lt;code&gt;server-one&lt;/code&gt; and the &lt;code&gt;server-two&lt;/code&gt; definitions and only leave the &lt;code&gt;server-three&lt;/code&gt; definition here.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Here are the commands to disable the &lt;code&gt;server-one&lt;/code&gt; and &lt;code&gt;server-two&lt;/code&gt; from auto-starting:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;[domain@embedded /] /host=primary/server-config=server-one:write-attribute(name=auto-start, value=false)
{
    &quot;outcome&quot; =&amp;gt; &quot;success&quot;,
    &quot;result&quot; =&amp;gt; undefined,
    &quot;server-groups&quot; =&amp;gt; undefined
}

[domain@embedded /] /host=primary/server-config=server-two:write-attribute(name=auto-start, value=false)
{
    &quot;outcome&quot; =&amp;gt; &quot;success&quot;,
    &quot;result&quot; =&amp;gt; undefined,
    &quot;server-groups&quot; =&amp;gt; undefined
}

[domain@embedded /]&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Alternatively, you can use these commands to remove the &lt;code&gt;server-one&lt;/code&gt; and &lt;code&gt;server-two&lt;/code&gt; directly:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;/host=primary/server-config=server-one:remove
/host=primary/server-config=server-two:remove&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In addition, there are several interface properties defined in the &lt;code&gt;host.xml&lt;/code&gt; file that we need to override during runtime. Here is the &lt;code&gt;interfaces&lt;/code&gt; section in the &lt;code&gt;host.xml&lt;/code&gt;:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&amp;lt;interfaces&amp;gt;
    &amp;lt;interface name=&quot;management&quot;&amp;gt;
        &amp;lt;inet-address value=&quot;${jboss.bind.address.management:127.0.0.1}&quot;/&amp;gt;
    &amp;lt;/interface&amp;gt;
    &amp;lt;interface name=&quot;public&quot;&amp;gt;
        &amp;lt;inet-address value=&quot;${jboss.bind.address:127.0.0.1}&quot;/&amp;gt;
    &amp;lt;/interface&amp;gt;
&amp;lt;/interfaces&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I checked my IP address of Machine A, and it‚Äôs &lt;code&gt;192.168.0.115&lt;/code&gt;, so I started the WildFly Server on Machine A by running the following commands in the &lt;code&gt;bin&lt;/code&gt; directory of WildFly:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;$ pwd
/wildfly-35.0.0.Final/bin&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;$ ./domain.sh --host-config=host.xml -Djboss.bind.address.management=192.168.0.115 -Djboss.bind.address=192.168.0.115 -Djboss.domain.primary.address=192.168.0.115&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Please note that the &lt;code&gt;host.xml&lt;/code&gt; is the default value for the &lt;code&gt;--host-config&lt;/code&gt; argument. So in this specific case we don‚Äôt have to add it.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;And I can see the server is started and here is the server log output of the above command:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;=========================================================================

JBoss Bootstrap Environment

JBOSS_HOME: /wildfly-35.0.0.Final

JAVA: .sdkman/candidates/java/current/bin/java

JAVA_OPTS: -Xms64m -Xmx512m -Djava.net.preferIPv4Stack=true -Djboss.modules.system.pkgs=org.jboss.byteman -Djava.awt.headless=true -Djdk.serialFilter=&quot;maxbytes=10485760;maxdepth=128;maxarray=100000;maxrefs=300000&quot;  --add-exports=java.desktop/sun.awt=ALL-UNNAMED --add-exports=java.naming/com.sun.jndi.ldap=ALL-UNNAMED --add-exports=java.naming/com.sun.jndi.url.ldap=ALL-UNNAMED --add-exports=java.naming/com.sun.jndi.url.ldaps=ALL-UNNAMED --add-exports=jdk.naming.dns/com.sun.jndi.dns=ALL-UNNAMED --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.security=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.management/javax.management=ALL-UNNAMED --add-opens=java.naming/javax.naming=ALL-UNNAMED -Djava.security.manager=allow

=========================================================================

17:06:49,064 INFO  [org.jboss.modules] (main) JBoss Modules version 2.1.6.Final
17:06:49,405 INFO  [org.jboss.threads] (main) JBoss Threads version 2.4.0.Final
17:06:49,428 INFO  [org.jboss.as.process.Host Controller.status] (main) WFLYPC0018: Starting process &apos;Host Controller&apos;
17:06:49,896 INFO  [org.jboss.as.process.Host Controller.system.stdout] (stdout for Host Controller) [Host Controller] 17:06:49,875 INFO  [org.jboss.modules] (main) JBoss Modules version 2.1.6.Final
[Host Controller] 17:06:50,385 INFO  [org.jboss.msc] (main) JBoss MSC version 1.5.5.Final
[Host Controller] 17:06:50,393 INFO  [org.jboss.threads] (main) JBoss Threads version 2.4.0.Final
[Host Controller] 17:06:50,441 INFO  [org.jboss.as] (MSC service thread 1-2) WFLYSRV0049: WildFly 35.0.0.Final (WildFly Core 27.0.0.Final) starting
[Host Controller] 17:06:50,806 INFO  [org.wildfly.security] (Controller Boot Thread) ELY00001: WildFly Elytron version 2.6.0.Final
[Host Controller] 17:06:51,088 INFO  [org.jboss.as.host.controller] (Controller Boot Thread) WFLYHC0003: Creating http management service using network interface (management) port (9990) securePort (-1)
[Host Controller] 17:06:51,099 INFO  [org.xnio] (MSC service thread 1-3) XNIO version 3.8.16.Final
[Host Controller] 17:06:51,103 INFO  [org.xnio.nio] (MSC service thread 1-3) XNIO NIO Implementation Version 3.8.16.Final
[Host Controller] 17:06:51,139 INFO  [org.jboss.remoting] (MSC service thread 1-7) JBoss Remoting version 5.0.30.Final
[Host Controller] 17:06:52,510 INFO  [org.jboss.as] (Controller Boot Thread) WFLYSRV0062: Http management interface listening on http://192.168.0.115:9990/management and https://192.168.0.115:-1/management
[Host Controller] 17:06:52,510 INFO  [org.jboss.as] (Controller Boot Thread) WFLYSRV0053: Admin console listening on http://192.168.0.115:9990 and https://192.168.0.115:-1
[Host Controller] 17:06:52,546 INFO  [org.jboss.as] (Controller Boot Thread) WFLYSRV0025: WildFly 35.0.0.Final (WildFly Core 27.0.0.Final) (Host Controller) started in 3066ms - Started 70 of 71 services (14 services are lazy, passive or on-demand) - Host Controller configuration files in use: domain.xml, host.xml - Minimum feature stability level: community&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;From the above server log output, I can see the server-bound address is &lt;code&gt;192.168.0.115&lt;/code&gt; instead of the default &lt;code&gt;127.0.0.1&lt;/code&gt;. Then I opened another terminal window and ran the following command in the &lt;code&gt;bin&lt;/code&gt; directory of the WildFly server:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;$ ./add-user.sh -u admin -p 123
Added user &apos;admin&apos; to file &apos;/wildfly-35.0.0.Final/standalone/configuration/mgmt-users.properties&apos;
Added user &apos;admin&apos; to file &apos;/wildfly-35.0.0.Final/domain/configuration/mgmt-users.properties&apos;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;From the above command output, we can see the &lt;code&gt;admin&lt;/code&gt; user is added and its password is &lt;code&gt;123&lt;/code&gt;. This added user will be used on the Secondary Host Controller to connect to the Primary Host controller.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Please note that the above command didn&amp;#8217;t generate a secret value related to the generated &lt;code&gt;admin&lt;/code&gt; user as described you may find in the other online materials, which is already deprecated since WildFly 25. So the following &lt;code&gt;secret&lt;/code&gt; configuration on the Secondary Host Controller is already deprecated:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&amp;lt;server-identities&amp;gt;
  &amp;lt;secret value=&quot;...&quot; /&amp;gt;
&amp;lt;/server-identities&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;As the Primary Host Controller is started on Machine A, now we can check the WildFly server configuration on Machine B. As planned, the Host Controller is named &lt;code&gt;secondary&lt;/code&gt;, and it will be connected to the Primary Host Controller on Machine A, which acts as the domain controller.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Now we can check the configuration on the Secondary Host Controller. The Secondary Host Controller on Machine B will use the &lt;code&gt;host-secondary.xml&lt;/code&gt; file as its configuration file. Please note that to edit the &lt;code&gt;host-secondary.xml&lt;/code&gt; file in CLI, you should use this command to connect to the embedded server and use the correct host controller file:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;[disconnected /] embed-host-controller --host-config=host-secondary.xml
[domain@embedded /]&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We need to make some modifications to this file. First I need to add the &lt;code&gt;name&lt;/code&gt; property to the &lt;code&gt;host&lt;/code&gt; section:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&amp;lt;host xmlns=&quot;urn:jboss:domain:community:20.0&quot; name=&quot;secondary&quot;&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Here is the method to use the CLI command to modify the host controller name:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;$ ./wildfly-35.0.0.Final/bin/jboss-cli.sh
You are disconnected at the moment. Type &apos;connect&apos; to connect to the server or &apos;help&apos; for the list of supported commands.
[disconnected /] embed-host-controller --host-config=host-secondary.xml
[domain@embedded /] /host=unknown-host.unknown-domain:write-attribute(name=name,value=secondary)
{
    &quot;outcome&quot; =&amp;gt; &quot;success&quot;,
    &quot;result&quot; =&amp;gt; undefined,
    &quot;server-groups&quot; =&amp;gt; undefined,
    &quot;response-headers&quot; =&amp;gt; {&quot;process-state&quot; =&amp;gt; &quot;reload-required&quot;}
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;[domain@embedded /] /host=unknown-host.unknown-domain:reload(admin-only=true)
{&quot;outcome&quot; =&amp;gt; &quot;success&quot;}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Please note that if you use tab complete, it should autocomplete your default host name. Giving the host a name can help to analyze the server log output later.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;So I need to define this &lt;code&gt;authentication-context&lt;/code&gt; in the &lt;code&gt;elytron&lt;/code&gt; subsystem. This configuration is different from the legacy authentication. Here are the details:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&amp;lt;profile&amp;gt;
    &amp;lt;subsystem xmlns=&quot;urn:jboss:domain:core-management:1.0&quot;/&amp;gt;
    &amp;lt;subsystem xmlns=&quot;urn:wildfly:elytron:community:18.0&quot; final-providers=&quot;combined-providers&quot;
               disallowed-providers=&quot;OracleUcrypto&quot; register-jaspi-factory=&quot;false&quot;&amp;gt;
        &amp;lt;authentication-client&amp;gt;
            &amp;lt;authentication-configuration sasl-mechanism-selector=&quot;DIGEST-MD5&quot; name=&quot;myConfig&quot;
                                          authentication-name=&quot;admin&quot; realm=&quot;ManagementRealm&quot;&amp;gt;
                &amp;lt;credential-reference clear-text=&quot;123&quot;/&amp;gt;
            &amp;lt;/authentication-configuration&amp;gt;
            &amp;lt;authentication-context name=&quot;myCtx&quot;&amp;gt;
                &amp;lt;match-rule match-host=&quot;${jboss.domain.primary.address}&quot; authentication-configuration=&quot;myConfig&quot;/&amp;gt;
            &amp;lt;/authentication-context&amp;gt;
        &amp;lt;/authentication-client&amp;gt;
        ...
    &amp;lt;/subsystem&amp;gt;
    ...
&amp;lt;/profile&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Here is the equivalent CLI command to do the configuration:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;[domain@embedded /] /host=secondary/subsystem=elytron/authentication-configuration=myConfig:add(sasl-mechanism-selector=DIGEST-MD5, authentication-name=admin, realm=ManagementRealm, credential-reference={clear-text=&quot;123&quot;})
{&quot;outcome&quot; =&amp;gt; &quot;success&quot;}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;[domain@embedded /] /host=secondary/subsystem=elytron/authentication-context=myCtx:add(match-rules=[{match-host=&quot;${jboss.domain.primary.address}&quot;, authentication-configuration=myConfig}])
{&quot;outcome&quot; =&amp;gt; &quot;success&quot;}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The above configuration shows how to configure the &lt;code&gt;elytron&lt;/code&gt; subsystem to provide user &lt;code&gt;admin&lt;/code&gt; and its password &lt;code&gt;123&lt;/code&gt; for usage. The &lt;code&gt;authentication-configuration&lt;/code&gt; section is added, and the authentication context &lt;code&gt;myCtx&lt;/code&gt; is using this configuration. Please note this is only one way to provide &lt;code&gt;username&lt;/code&gt; and &lt;code&gt;password&lt;/code&gt; via the Elytron subsystem, and you can avoid using &lt;code&gt;clear-text&lt;/code&gt; to provide the password. I won‚Äôt dig into more details on how to use Elytron in this blog post, but you can always refer to its document to learn its usage&lt;sup class=&quot;footnote&quot;&gt;[&lt;a id=&quot;_footnoteref_5&quot; class=&quot;footnote&quot; href=&quot;#_footnotedef_5&quot; title=&quot;View footnote.&quot;&gt;5&lt;/a&gt;]&lt;/sup&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Then I need to add modify configuration of the &lt;code&gt;domain-controller&lt;/code&gt;:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&amp;lt;domain-controller&amp;gt;
    &amp;lt;remote authentication-context=&quot;myCtx&quot;&amp;gt;
        &amp;lt;discovery-options&amp;gt;
            &amp;lt;static-discovery name=&quot;primary&quot; protocol=&quot;${jboss.domain.primary.protocol:remote+http}&quot;
                              host=&quot;${jboss.domain.primary.address}&quot; port=&quot;${jboss.domain.primary.port:9990}&quot;/&amp;gt;
        &amp;lt;/discovery-options&amp;gt;
    &amp;lt;/remote&amp;gt;
&amp;lt;/domain-controller&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;As the configuration is shown above, I defined the &lt;code&gt;authentication-context&lt;/code&gt; to be used as &lt;code&gt;myCtx&lt;/code&gt;. Here is the equivalent CLI command to do the configuration:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;/host=secondary:write-attribute(name=domain-controller.remote.authentication-context, value=myCtx)
{
    &quot;outcome&quot; =&amp;gt; &quot;success&quot;,
    &quot;result&quot; =&amp;gt; undefined,
    &quot;server-groups&quot; =&amp;gt; undefined,
    &quot;response-headers&quot; =&amp;gt; {&quot;process-state&quot; =&amp;gt; &quot;reload-required&quot;}
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;After configuring the authentication part in the &lt;code&gt;host-secondary.xml&lt;/code&gt; file on Machine B, the last thing is that I disabled the &lt;code&gt;server-one&lt;/code&gt; and left only &lt;code&gt;server-two&lt;/code&gt; in the configuration:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&amp;lt;servers&amp;gt;
    &amp;lt;!-- &amp;lt;server name=&quot;server-one&quot; group=&quot;main-server-group&quot;/&amp;gt; --&amp;gt;
    &amp;lt;server name=&quot;server-two&quot; group=&quot;other-server-group&quot;&amp;gt;
        &amp;lt;socket-bindings port-offset=&quot;150&quot;/&amp;gt;
    &amp;lt;/server&amp;gt;
&amp;lt;/servers&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Again it&amp;#8217;s better to use the CLI command to do the configuration:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;/host=secondary/server-config=server-one:remove&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Until now all the configurations are done, and then I can start the WildFly server on Machine B with the following command:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;‚ùØ ./domain.sh --host-config=host-secondary.xml -Djboss.bind.address.management=192.168.0.113 -Djboss.bind.address=192.168.0.113 -Djboss.domain.primary.address=192.168.0.115&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In the above command, I assign the value &lt;code&gt;host-secondary.xml&lt;/code&gt; to the &lt;code&gt;host-config&lt;/code&gt; property, and I assign values of &lt;code&gt;jboss.bind.address.management&lt;/code&gt; and &lt;code&gt;jboss.bind.address&lt;/code&gt; as &lt;code&gt;192.168.0.113&lt;/code&gt;, which is the IP address of Machine B itself. I assigned the value of &lt;code&gt;jboss.domain.primary.address&lt;/code&gt; as &lt;code&gt;192.168.0.115&lt;/code&gt;, which is the IP address of Machine A. On Machine A, there is a WildFly server running as a domain controller as described above. Now we can see the server log output of the above command from Machine B:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;=========================================================================

JBoss Bootstrap Environment

JBOSS_HOME: /wildfly-35.0.0.Final

JAVA: .sdkman/candidates/java/current/bin/java

JAVA_OPTS: -Xms64m -Xmx512m -Djava.net.preferIPv4Stack=true -Djboss.modules.system.pkgs=org.jboss.byteman -Djava.awt.headless=true -Djdk.serialFilter=&quot;maxbytes=10485760;maxdepth=128;maxarray=100000;maxrefs=300000&quot;  --add-exports=java.desktop/sun.awt=ALL-UNNAMED --add-exports=java.naming/com.sun.jndi.ldap=ALL-UNNAMED --add-exports=java.naming/com.sun.jndi.url.ldap=ALL-UNNAMED --add-exports=java.naming/com.sun.jndi.url.ldaps=ALL-UNNAMED --add-exports=jdk.naming.dns/com.sun.jndi.dns=ALL-UNNAMED --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.security=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.util.concurrent=ALL-UNNAMED --add-opens=java.management/javax.management=ALL-UNNAMED --add-opens=java.naming/javax.naming=ALL-UNNAMED -Djava.security.manager=allow

=========================================================================

17:17:30,558 INFO  [org.jboss.modules] (main) JBoss Modules version 2.1.6.Final
17:17:30,668 INFO  [org.jboss.threads] (main) JBoss Threads version 2.4.0.Final
17:17:30,677 INFO  [org.jboss.as.process.Host Controller.status] (main) WFLYPC0018: Starting process &apos;Host Controller&apos;
17:17:30,855 INFO  [org.jboss.as.process.Host Controller.system.stdout] (stdout for Host Controller) [Host Controller] 17:17:30,847 INFO  [org.jboss.modules] (main) JBoss Modules version 2.1.6.Final
[Host Controller] 17:17:31,008 INFO  [org.jboss.msc] (main) JBoss MSC version 1.5.5.Final
[Host Controller] 17:17:31,010 INFO  [org.jboss.threads] (main) JBoss Threads version 2.4.0.Final
[Host Controller] 17:17:31,026 INFO  [org.jboss.as] (MSC service thread 1-1) WFLYSRV0049: WildFly 35.0.0.Final (WildFly Core 27.0.0.Final) starting
[Host Controller] 17:17:31,158 INFO  [org.wildfly.security] (Controller Boot Thread) ELY00001: WildFly Elytron version 2.6.0.Final
[Host Controller] 17:17:31,270 INFO  [org.jboss.as.host.controller] (Controller Boot Thread) WFLYHC0003: Creating http management service using network interface (management) port (9990) securePort (-1)
[Host Controller] 17:17:31,275 INFO  [org.xnio] (MSC service thread 1-7) XNIO version 3.8.16.Final
[Host Controller] 17:17:31,278 INFO  [org.xnio.nio] (MSC service thread 1-7) XNIO NIO Implementation Version 3.8.16.Final
[Host Controller] 17:17:31,289 INFO  [org.jboss.remoting] (MSC service thread 1-7) JBoss Remoting version 5.0.30.Final
[Host Controller] 17:17:32,666 INFO  [org.jboss.as.host.controller] (Controller Boot Thread) WFLYHC0148: Connected to the domain controller at remote+http://192.168.0.115:9990
[Host Controller] 17:17:32,692 INFO  [org.jboss.as.host.controller] (Controller Boot Thread) WFLYHC0023: Starting server server-two
17:17:32,800 INFO  [org.jboss.as.process.Server:server-two.status] (ProcessController-threads - 3) WFLYPC0018: Starting process &apos;Server:server-two&apos;
[Host Controller] 17:17:33,442 INFO  [org.jboss.as.host.controller] (management task-1) WFLYHC0021: Server [Server:server-two] connected using connection [Channel ID 20a1192c (inbound) of Remoting connection 79a44d09 to 192.168.0.113/192.168.0.113:61942 of endpoint &quot;secondary:MANAGEMENT&quot; &amp;lt;6894739b&amp;gt;]
[Host Controller] 17:17:33,452 INFO  [org.jboss.as] (Controller Boot Thread) WFLYSRV0062: Http management interface listening on http://192.168.0.113:9990/management and https://192.168.0.113:-1/management
[Host Controller] 17:17:33,452 INFO  [org.jboss.as] (Controller Boot Thread) WFLYSRV0054: Admin console is not enabled
[Host Controller] 17:17:33,453 INFO  [org.jboss.as] (Controller Boot Thread) WFLYSRV0025: WildFly 35.0.0.Final (WildFly Core 27.0.0.Final) (Host Controller) started in 2754ms - Started 70 of 71 services (14 services are lazy, passive or on-demand) - Host Controller configuration file in use: host-secondary.xml - Minimum feature stability level: community
[Host Controller] 17:17:33,453 INFO  [org.jboss.as.host.controller] (server-registration-threads - 1) WFLYHC0020: Registering server server-two&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;From the above server log output on Machine B, we can see the WildFly server is started and &lt;code&gt;server-two&lt;/code&gt; is started. In addition, it‚Äôs connected to the Domain Controller on Machine A. Here is the server log output from the WildFly server on Machine A:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;[Host Controller] 17:17:32,549 INFO  [org.jboss.as.domain.controller] (Host Controller Service Threads - 23) WFLYHC0019: Registered remote secondary host &quot;secondary&quot;, JBoss WildFly 35.0.0.Final (WildFly 27.0.0.Final)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;From the above Primary Host Controller log output, I can see the secondary host is connected, so it starts to accept the management of Primary Host Controller, which acts as the domain controller. Now I can open the web browser on Machine A to access the WildFly server admin console: &lt;a href=&quot;http://192.168.0.115:9990&quot; class=&quot;bare&quot;&gt;http://192.168.0.115:9990&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Please note that I can‚Äôt use the IP address &lt;code&gt;127.0.0.1&lt;/code&gt; here, because the WildFly server is listening to the public IP address of Machine A, which we have assigned to the &lt;code&gt;jboss.bind.address.management&lt;/code&gt; property during the server startup process. Here is the screenshot of the admin page of the WildFly server:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;span class=&quot;image&quot;&gt;&lt;img src=&quot;/wildfly.org/assets/img/news/2025-01-wildfly-domain/02.png&quot; alt=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We need to enter &lt;code&gt;admin&lt;/code&gt; as the username and &lt;code&gt;123&lt;/code&gt; as the password, which is the user we added as the management user above. And then we can enter the admin page of the server:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;span class=&quot;image&quot;&gt;&lt;img src=&quot;/wildfly.org/assets/img/news/2025-01-wildfly-domain/03.png&quot; alt=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;As we have entered the WildFly admin page, we can try to deploy an example application. There is a &lt;code&gt;helloworld&lt;/code&gt; project in the WildFly Quickstart project:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/wildfly/quickstart/tree/35.0.0.Final/helloworld&quot;&gt;https://github.com/wildfly/quickstart/tree/35.0.0.Final/helloworld&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The above project is a simple application that just contains a servlet that will respond with the text &lt;code&gt;&amp;lt;h1&amp;gt;Hello World!&amp;lt;/h1&amp;gt;&lt;/code&gt; to the request. So I cloned the WildFly Quickstart project into my local environment and then built the &lt;code&gt;helloworld&lt;/code&gt; project to generate the &lt;code&gt;helloworld.war&lt;/code&gt;:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;$ pwd
/wildfly-quickstart/helloworld&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;$ mvn install
...
[INFO] BUILD SUCCESS
...&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;‚ùØ ls target/*.war
target/helloworld.war&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;As the project is built, I can deploy the above WAR file into the WildFly server group. So I go back to the WildFly admin page, and then I can click the &lt;code&gt;Deployments&lt;/code&gt; on the top menu and click the &lt;code&gt;Upload Deployment&lt;/code&gt;:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;span class=&quot;image&quot;&gt;&lt;img src=&quot;/wildfly.org/assets/img/news/2025-01-wildfly-domain/04.png&quot; alt=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;From the above screenshot, you can see that I tried to deploy the sample project into the &lt;code&gt;other-server-group&lt;/code&gt;. I use this server group because I have configured servers on both Primary Host Controller and Secondary Host Controller hosts into this server group. Here is the deployment diagram for the server group:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;span class=&quot;image&quot;&gt;&lt;img src=&quot;/wildfly.org/assets/img/news/2025-01-wildfly-domain/05.png&quot; alt=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;As the diagram shown above, I will use the domain controller‚Äôs admin page to deploy &lt;code&gt;helloworld.war&lt;/code&gt; into the &lt;code&gt;other-server-group&lt;/code&gt;, so the project will be deployed to &lt;code&gt;server-two&lt;/code&gt; and &lt;code&gt;server-three&lt;/code&gt;, because they both belong to &lt;code&gt;other-server-group&lt;/code&gt;. Coming back to the WildFly admin page, I drag and drop the &lt;code&gt;helloworld.war&lt;/code&gt; into the deployment page:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;span class=&quot;image&quot;&gt;&lt;img src=&quot;/wildfly.org/assets/img/news/2025-01-wildfly-domain/06.png&quot; alt=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Then I clicked &lt;code&gt;Next&lt;/code&gt; and left the deployment configuration fields as default:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;span class=&quot;image&quot;&gt;&lt;img src=&quot;/wildfly.org/assets/img/news/2025-01-wildfly-domain/07.png&quot; alt=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Then I clicked &lt;code&gt;Finished&lt;/code&gt; and reached the &lt;code&gt;Deployment successful&lt;/code&gt; page:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;span class=&quot;image&quot;&gt;&lt;img src=&quot;/wildfly.org/assets/img/news/2025-01-wildfly-domain/08.png&quot; alt=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Now the &lt;code&gt;helloworld.war&lt;/code&gt; is deployed to all the managed servers in the &lt;code&gt;other-server-group&lt;/code&gt;. Now I click the &lt;code&gt;Deployments&lt;/code&gt; on the top menu of the admin page, and then click the &lt;code&gt;other-server-group&lt;/code&gt;, we can see that the &lt;code&gt;helloworld.war&lt;/code&gt; is deployed into the server group:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;span class=&quot;image&quot;&gt;&lt;img src=&quot;/wildfly.org/assets/img/news/2025-01-wildfly-domain/09.png&quot; alt=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;As the &lt;code&gt;helloworld&lt;/code&gt; project is deployed, we can check the statuses of the two Host Controllers. I clicked the &lt;code&gt;Runtime&lt;/code&gt; on top of the menu of the admin page, and then clicked the &lt;code&gt;primary&lt;/code&gt; host tab, then I saw that &lt;code&gt;server-three&lt;/code&gt; has not started yet:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;span class=&quot;image&quot;&gt;&lt;img src=&quot;/wildfly.org/assets/img/news/2025-01-wildfly-domain/10.png&quot; alt=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;This is because the &lt;code&gt;auto-start&lt;/code&gt; property is configured to &lt;code&gt;false&lt;/code&gt; in the &lt;code&gt;host.xml&lt;/code&gt; of the primary host:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&amp;lt;server name=&quot;server-three&quot; group=&quot;other-server-group&quot; auto-start=&quot;false&quot;&amp;gt;
    &amp;lt;jvm name=&quot;default&quot;/&amp;gt;
    &amp;lt;socket-bindings port-offset=&quot;250&quot;/&amp;gt;
&amp;lt;/server&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;So I need to click the &lt;code&gt;Start&lt;/code&gt; button of the &lt;code&gt;server-three&lt;/code&gt;:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;span class=&quot;image&quot;&gt;&lt;img src=&quot;/wildfly.org/assets/img/news/2025-01-wildfly-domain/11.png&quot; alt=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;After a while the &lt;code&gt;server-three&lt;/code&gt; is started:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;span class=&quot;image&quot;&gt;&lt;img src=&quot;/wildfly.org/assets/img/news/2025-01-wildfly-domain/12.png&quot; alt=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Because we didn‚Äôt configure the &lt;code&gt;auto-start&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; on the
Secondary Host Controller, so it‚Äôs already started:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;&lt;span class=&quot;image&quot;&gt;&lt;img src=&quot;/wildfly.org/assets/img/news/2025-01-wildfly-domain/13.png&quot; alt=&quot;image&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;From the above screenshots, we can see that the URL of &lt;code&gt;server-two&lt;/code&gt; is &lt;a href=&quot;http://192.168.0.113:8230&quot; class=&quot;bare&quot;&gt;http://192.168.0.113:8230&lt;/a&gt;, and the URL of &lt;code&gt;server-three&lt;/code&gt; is &lt;a href=&quot;http://192.168.0.115:8330&quot; class=&quot;bare&quot;&gt;http://192.168.0.115:8330&lt;/a&gt;. Their ports are different because the &lt;code&gt;port-offset&lt;/code&gt; property settings are different. For &lt;code&gt;server-three&lt;/code&gt;, the &lt;code&gt;port-offset&lt;/code&gt; is configured like this:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&amp;lt;server name=&quot;server-three&quot; group=&quot;other-server-group&quot; auto-start=&quot;false&quot;&amp;gt;
    &amp;lt;jvm name=&quot;default&quot;/&amp;gt;
    &amp;lt;socket-bindings port-offset=&quot;250&quot;/&amp;gt;
&amp;lt;/server&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Because the &lt;code&gt;port-offset&lt;/code&gt; is set to &lt;code&gt;250&lt;/code&gt; for &lt;code&gt;server-three&lt;/code&gt;, and the default HTTP port setting is &lt;code&gt;8080&lt;/code&gt;, so &lt;code&gt;8080+250=8330&lt;/code&gt;. For &lt;code&gt;server-two&lt;/code&gt;, the configuration is like this:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&amp;lt;server name=&quot;server-two&quot; group=&quot;other-server-group&quot;&amp;gt;
    &amp;lt;socket-bindings port-offset=&quot;150&quot;/&amp;gt;
&amp;lt;/server&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;As the &lt;code&gt;port-offset&lt;/code&gt; setting is &lt;code&gt;150&lt;/code&gt;, the calculated HTTP port is &lt;code&gt;8080+150=8330&lt;/code&gt;, which is expected. Now we can use the &lt;code&gt;curl&lt;/code&gt; command to do the requests to both the Machine A and the Machine B to see if the &lt;code&gt;helloworld&lt;/code&gt; project is deployed on two both of the machines:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;‚ùØ curl http://192.168.0.115:8330/helloworld/HelloWorld
&amp;lt;html&amp;gt;&amp;lt;head&amp;gt;&amp;lt;title&amp;gt;helloworld&amp;lt;/title&amp;gt;&amp;lt;/head&amp;gt;&amp;lt;body&amp;gt;
&amp;lt;h1&amp;gt;Hello World!&amp;lt;/h1&amp;gt;
&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;‚ùØ curl http://192.168.0.113:8230/helloworld/HelloWorld
&amp;lt;html&amp;gt;&amp;lt;head&amp;gt;&amp;lt;title&amp;gt;helloworld&amp;lt;/title&amp;gt;&amp;lt;/head&amp;gt;&amp;lt;body&amp;gt;
&amp;lt;h1&amp;gt;Hello World!&amp;lt;/h1&amp;gt;
&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;From the above command output, we can see that the &lt;code&gt;helloworld&lt;/code&gt; project is deployed two both hosts. Though they are running on two different machines, because these two hosts are in the same &lt;code&gt;other-server-group&lt;/code&gt; and they are managed by the domain controller, so the project is deployed to both hosts.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I hope this blog post can be helpful to update your knowledge base to see how to use the domain mode in the most current WildFly release. For convenience, I have put the &lt;code&gt;host.xml&lt;/code&gt; of the Primary Host Controller and the &lt;code&gt;host-secondary.xml&lt;/code&gt; of the Secondary Host Controller online for reference&lt;sup class=&quot;footnote&quot;&gt;[&lt;a id=&quot;_footnoteref_6&quot; class=&quot;footnote&quot; href=&quot;#_footnotedef_6&quot; title=&quot;View footnote.&quot;&gt;6&lt;/a&gt;]&lt;/sup&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect2&quot;&gt;
&lt;h3 id=&quot;references&quot;&gt;References&lt;/h3&gt;

&lt;/div&gt;
&lt;div id=&quot;footnotes&quot;&gt;
&lt;hr&gt;
&lt;div class=&quot;footnote&quot; id=&quot;_footnotedef_1&quot;&gt;
&lt;a href=&quot;#_footnoteref_1&quot;&gt;1&lt;/a&gt;. &lt;a href=&quot;https://www.wildfly.org/news/2021/10/05/WildFly25-Final-Released/&quot;&gt;WildFly 25 is released!&lt;/a&gt;
&lt;/div&gt;
&lt;div class=&quot;footnote&quot; id=&quot;_footnotedef_2&quot;&gt;
&lt;a href=&quot;#_footnoteref_2&quot;&gt;2&lt;/a&gt;. &lt;a href=&quot;https://www.packtpub.com/en-us/product/jboss-eap6-high-availability-9781783282449?srsltid=AfmBOooUR6olUaY8qVHB6U70wb2oe_nAk8OloSeJAtkbn6AGgoQ7-OM9&quot;&gt;JBoss EAP6 High Availability | Programming | eBook&lt;/a&gt;
&lt;/div&gt;
&lt;div class=&quot;footnote&quot; id=&quot;_footnotedef_3&quot;&gt;
&lt;a href=&quot;#_footnoteref_3&quot;&gt;3&lt;/a&gt;. &lt;a href=&quot;https://docs.wildfly.org/35/Admin_Guide.html#Domain_Setup&quot;&gt;https://docs.wildfly.org/35/Admin_Guide.html#Domain_Setup&lt;/a&gt;
&lt;/div&gt;
&lt;div class=&quot;footnote&quot; id=&quot;_footnotedef_4&quot;&gt;
&lt;a href=&quot;#_footnoteref_4&quot;&gt;4&lt;/a&gt;. &lt;a href=&quot;https://www.wildfly.org/news/2017/10/10/Embedded-Host-Controller/&quot;&gt;Running an Embedded WildFly Host Controller in the CLI&lt;/a&gt;
&lt;/div&gt;
&lt;div class=&quot;footnote&quot; id=&quot;_footnotedef_5&quot;&gt;
&lt;a href=&quot;#_footnoteref_5&quot;&gt;5&lt;/a&gt;. &lt;a href=&quot;https://docs.wildfly.org/35/WildFly_Elytron_Security.html&quot;&gt;WildFly Elytron Security&lt;/a&gt;
&lt;/div&gt;
&lt;div class=&quot;footnote&quot; id=&quot;_footnotedef_6&quot;&gt;
&lt;a href=&quot;#_footnoteref_6&quot;&gt;6&lt;/a&gt;. &lt;a href=&quot;https://gist.github.com/liweinan/6cca8f88203e5aa76d3c1516d1758421&quot;&gt;WildFly Domain Mode Configuration Files&lt;/a&gt;
&lt;/div&gt;
&lt;/div&gt;</content>
      

      
      
      
      
      

      
        <author>
          <name>ÈòøÁî∑</name>
          
          
        </author>
      

      
        
      

      
        <category term="wildfly" />
      
        <category term="domain" />
      

      
        <summary type="html">I recently tried to play with the domain mode in the current release of WildFly, version 35, while writing this blog post.</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">Making WildFly Glow with Intelligence</title>
      <link href="https://hpehl.github.io/wildfly.org/news/2025/02/10/Glowing-with-AI/" rel="alternate" type="text/html" title="Making WildFly Glow with Intelligence" />
      <published>2025-02-10T00:00:00+01:00</published>
      <updated>2025-02-10T00:00:00+01:00</updated>
      <id>https://hpehl.github.io/wildfly.org/news/2025/02/10/Glowing-with-AI</id>
      
      
        <content type="html" xml:base="https://hpehl.github.io/wildfly.org/news/2025/02/10/Glowing-with-AI/">&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In WildFly 35 Beta, WildFly Glow has also received a new feature to &lt;a href=&quot;https://docs.wildfly.org/wildfly-proposals/wf-galleon/WFLY-19855_glow_spaces.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;introduce spaces to structure discovered Galleon feature-packs&lt;/a&gt;, this allows feature packs to be grouped into spaces such as an incubating space to reflect the stability of the feature pack and to allow users to select which spaces they want to use.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;One of the first feature pack to take advantage of that is the &lt;a href=&quot;https://github.com/wildfly-extras/wildfly-ai-feature-pack&quot;&gt;WildFly AI Feature Pack&lt;/a&gt; using the new &lt;strong&gt;incubating&lt;/strong&gt; space.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In this article I will show you how you can take advantage of this to provision a Generative AI server.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;wildfly-ai-feature-pack&quot;&gt;WildFly AI Feature Pack&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Since my first article the WildFly AI Feature Pack has evolved quite a bit. Of course we are following &lt;a href=&quot;https://docs.langchain4j.dev/&quot;&gt;LangChain4J&lt;/a&gt; and &lt;a href=&quot;https://github.com/smallrye/smallrye-llm&quot;&gt;smallrye-llm&lt;/a&gt; evolutions.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We have also added support for streaming tokens making the interaction lot more lively. Now, it is providing OpenTelemetry support to track your LLM usage and integrating with WildFly Glow to provide a default configuration on provisioning a lot easier.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Let&amp;#8217;s dive into this new feature.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;wildfly-ai-feature-pack-layers&quot;&gt;WildFly AI Feature Pack layers&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Currently the feature-pack provides 18 Galleon layers that build upon each other :&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Support for chat models to interact with a LLM:&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;mistral-ai-chat-model&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;ollama-chat-model&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;groq-chat-model&lt;/em&gt; (same as openai-chat-model but targeting Groq)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;openai-chat-model&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Support for embedding models:&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;in-memory-embedding-model-all-minilm-l6-v2&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;in-memory-embedding-model-all-minilm-l6-v2-q&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;in-memory-embedding-model-bge-small-en&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;in-memory-embedding-model-bge-small-en-q&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;in-memory-embedding-model-bge-small-en-v15&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;in-memory-embedding-model-bge-small-en-v15-q&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;in-memory-embedding-model-e5-small-v2&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;in-memory-embedding-model-e5-small-v2-q&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;ollama-embedding-model&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Support for embedding stores:&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;in-memory-embedding-store&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;neo4j-embedding-store&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;weaviate-embedding-store&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Support for content retriever for RAG:&lt;/p&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;default-embedding-content-retriever&lt;/em&gt;: default content retriever using an in-memory-embedding-store and in-memory-embedding-model-all-minilm-l6-v2 for embedding model.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;web-search-engines&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;For more details on these you can take a look at &lt;a href=&quot;https://docs.langchain4j.dev/&quot;&gt;LangChain4J&lt;/a&gt; and &lt;a href=&quot;https://github.com/smallrye/smallrye-llm&quot;&gt;Smallrye-llm&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;provisioning-the-server-with-glow&quot;&gt;Provisioning the server with Glow&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We are going to use the &lt;a href=&quot;https://github.com/wildfly-extras/wildfly-mcp/tree/main/wildfly-chat-bot&quot;&gt;chabot example&lt;/a&gt; of the &lt;a href=&quot;https://github.com/wildfly-extras/wildfly-mcp&quot;&gt;WildFly MCP&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The initial way to provision our server was to define the layers in the &lt;em&gt;pom.xml&lt;/em&gt; like this:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&amp;lt;plugin&amp;gt;
    &amp;lt;groupId&amp;gt;org.wildfly.plugins&amp;lt;/groupId&amp;gt;
    &amp;lt;artifactId&amp;gt;wildfly-maven-plugin&amp;lt;/artifactId&amp;gt;
    &amp;lt;version&amp;gt;${version.wildfly.maven.plugin}&amp;lt;/version&amp;gt;
    &amp;lt;configuration&amp;gt;
        &amp;lt;feature-packs&amp;gt;
            &amp;lt;feature-pack&amp;gt;
                &amp;lt;location&amp;gt;org.wildfly:wildfly-galleon-pack:${version.wildfly.server}&amp;lt;/location&amp;gt;*
            &amp;lt;/feature-pack&amp;gt;
            &amp;lt;feature-pack&amp;gt;
                &amp;lt;location&amp;gt;org.wildfly:wildfly-ai-feature-pack:${version.wildfly.ai.feature.pack}&amp;lt;/location&amp;gt;
            &amp;lt;/feature-pack&amp;gt;
        &amp;lt;/feature-packs&amp;gt;
        &amp;lt;layers&amp;gt;
            &amp;lt;layer&amp;gt;ee-core-profile-server&amp;lt;/layer&amp;gt;
            &amp;lt;layer&amp;gt;jaxrs&amp;lt;/layer&amp;gt;
            &amp;lt;layer&amp;gt;ollama-chat-model&amp;lt;/layer&amp;gt;
            &amp;lt;layer&amp;gt;groq-chat-model&amp;lt;/layer&amp;gt;
            &amp;lt;layer&amp;gt;openai-chat-model&amp;lt;/layer&amp;gt;
            &amp;lt;layer&amp;gt;default-embedding-content-retriever&amp;lt;/layer&amp;gt;
        &amp;lt;/layers&amp;gt;
        &amp;lt;name&amp;gt;ROOT.war&amp;lt;/name&amp;gt;
        &amp;lt;bootableJar&amp;gt;true&amp;lt;/bootableJar&amp;gt;
        &amp;lt;packagingScripts&amp;gt;
            &amp;lt;packaging-script&amp;gt;
                &amp;lt;scripts&amp;gt;
                    &amp;lt;script&amp;gt;./src/scripts/configure_server.cli&amp;lt;/script&amp;gt;
                &amp;lt;/scripts&amp;gt;
            &amp;lt;/packaging-script&amp;gt;
        &amp;lt;/packagingScripts&amp;gt;
    &amp;lt;/configuration&amp;gt;
    &amp;lt;executions&amp;gt;
        &amp;lt;execution&amp;gt;
            &amp;lt;goals&amp;gt;
                &amp;lt;goal&amp;gt;package&amp;lt;/goal&amp;gt;
            &amp;lt;/goals&amp;gt;
        &amp;lt;/execution&amp;gt;
    &amp;lt;/executions&amp;gt;
&amp;lt;/plugin&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;But using WildFly Glow we can make that way simpler:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&amp;lt;plugin&amp;gt;
    &amp;lt;groupId&amp;gt;org.wildfly.plugins&amp;lt;/groupId&amp;gt;
    &amp;lt;artifactId&amp;gt;wildfly-maven-plugin&amp;lt;/artifactId&amp;gt;
    &amp;lt;version&amp;gt;${version.wildfly.maven.plugin}&amp;lt;/version&amp;gt;
    &amp;lt;configuration&amp;gt;
        &amp;lt;discoverProvisioningInfo&amp;gt;
            &amp;lt;version&amp;gt;${version.wildfly.server}&amp;lt;/version&amp;gt;
            &amp;lt;spaces&amp;gt;
                &amp;lt;space&amp;gt;incubating&amp;lt;/space&amp;gt;
            &amp;lt;/spaces&amp;gt;
        &amp;lt;/discoverProvisioningInfo&amp;gt;
        &amp;lt;name&amp;gt;ROOT.war&amp;lt;/name&amp;gt;
        &amp;lt;bootableJar&amp;gt;true&amp;lt;/bootableJar&amp;gt;
        &amp;lt;packagingScripts&amp;gt;
            &amp;lt;packaging-script&amp;gt;
                &amp;lt;scripts&amp;gt;
                    &amp;lt;script&amp;gt;./src/scripts/configure_server.cli&amp;lt;/script&amp;gt;
                &amp;lt;/scripts&amp;gt;
            &amp;lt;/packaging-script&amp;gt;
        &amp;lt;/packagingScripts&amp;gt;
    &amp;lt;/configuration&amp;gt;
    &amp;lt;executions&amp;gt;
        &amp;lt;execution&amp;gt;
            &amp;lt;goals&amp;gt;
                &amp;lt;goal&amp;gt;package&amp;lt;/goal&amp;gt;
            &amp;lt;/goals&amp;gt;
        &amp;lt;/execution&amp;gt;
    &amp;lt;/executions&amp;gt;
&amp;lt;/plugin&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;AS you can see we are using the &lt;em&gt;discoverProvisioningInfo&lt;/em&gt; element to define which version of WildFly server we want to start from. AS you can see we have added an incubating  &lt;em&gt;space&lt;/em&gt; which enables the discovery of the WildFly AI Feature Pack.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Now when we run Apache Maven we can see the following traces :&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;imageblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;img src=&quot;/wildfly.org/assets/img/news/ai/glow_ai_fp.png&quot; alt=&quot;Glow traces&quot;&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;As you can see, Glow discovered the use of the following LLMs:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;ollama-chat-model&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;openai-chat-model&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;groq-chat-model&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;How did Glow found those ?&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;how-glow-works-under-the-hood-for-the-wildfly-ai-feature-pack&quot;&gt;How Glow works under the hood for the WildFly AI Feature Pack ?&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Here is where the magic is happening :&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;@ServerEndpoint(value = &quot;/chatbot&quot;,
        configurator = CustomConfigurator.class)
public class ChatBotWebSocketEndpoint {

    private static final Logger logger = Logger.getLogger(ChatBotWebSocketEndpoint.class.getName());

    @Inject
    @Named(value = &quot;ollama&quot;)
    ChatLanguageModel ollama;
    @Inject
    @Named(value = &quot;openai&quot;)
    ChatLanguageModel openai;
    @Inject
    @Named(value = &quot;groq&quot;)
    ChatLanguageModel groq;
    //@Inject Instance&amp;lt;ChatLanguageModel&amp;gt; instance;
    private PromptHandler promptHandler;
    private Bot bot;
    private List&amp;lt;McpClient&amp;gt; clients = new ArrayList&amp;lt;&amp;gt;();
    private final List&amp;lt;McpTransport&amp;gt; transports = new ArrayList&amp;lt;&amp;gt;();
    private Session session;
    private final ExecutorService executor = Executors.newFixedThreadPool(1);
    private final BlockingQueue&amp;lt;String&amp;gt; workQueue = new ArrayBlockingQueue&amp;lt;&amp;gt;(1);

    // It starts a Thread that notifies all sessions each second
    @PostConstruct
    public void init() {
    ...
    }
...
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;As you can see, we inject &lt;em&gt;dev.langchain4j.model.chat.ChatLanguageModel&lt;/em&gt; in the &lt;em&gt;org.wildfly.ai.chatbot. ChatBotWebSocketEndpoint&lt;/em&gt; using a &lt;em&gt;@Named&lt;/em&gt; annotation. This is the rule that Glow uses to detect what the application is using.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;You can see the Glow rule &lt;a href=&quot;https://github.com/wildfly-extras/wildfly-ai-feature-pack/blob/main/ai-feature-pack/src/main/resources/layers/standalone/ollama-chat-model/layer-spec.xml#L11&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;listingblock&quot;&gt;
&lt;div class=&quot;content&quot;&gt;
&lt;pre class=&quot;highlight&quot;&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt; &amp;lt;prop name=&quot;org.wildfly.rule.annotated.type&quot; value=&quot;dev.langchain4j.model.chat.ChatLanguageModel,jakarta.inject.Named[value=ollama]&quot;/&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;So this explain why Glow is detecting that the WildFly MCP application is using &lt;strong&gt;Groq&lt;/strong&gt;,&lt;strong&gt;OpenAI&lt;/strong&gt; and &lt;strong&gt;Ollama&lt;/strong&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Of course, similar rules exist for the embedding models and embedding store.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;in-conclusion&quot;&gt;In conclusion&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;As you could see, developping a Generative AI application using WildFly Glow and the WildFly AI Feature Pack is, as Duke Nukem used to say, a piece of cake.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</content>
      

      
      
      
      
      

      
        <author>
          <name>Emmanuel Hugonnet</name>
          
          
        </author>
      

      
        
      

      
        <category term="wildfly" />
      
        <category term="glow" />
      
        <category term="ai" />
      

      
        <summary type="html">In WildFly 35 Beta, WildFly Glow has also received a new feature to introduce spaces to structure discovered Galleon feature-packs, this allows feature packs to be grouped into spaces such as an incubating space to reflect the stability of the feature pack and to allow users to select which spaces they want to use.</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">WildFly 35.0.1 is released!</title>
      <link href="https://hpehl.github.io/wildfly.org/news/2025/02/06/WildFly3501-Released/" rel="alternate" type="text/html" title="WildFly 35.0.1 is released!" />
      <published>2025-02-06T00:00:00+01:00</published>
      <updated>2025-02-06T00:00:00+01:00</updated>
      <id>https://hpehl.github.io/wildfly.org/news/2025/02/06/WildFly3501-Released</id>
      
      
        <content type="html" xml:base="https://hpehl.github.io/wildfly.org/news/2025/02/06/WildFly3501-Released/">&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;WildFly 35.0.1.Final is now available &lt;a href=&quot;https://wildfly.org/downloads&quot;&gt;for download&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;I am pleased to announce that the WildFly 35.0.1.Final release is now available for download.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The following issues were resolved in 35.0.1:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;bugs&quot;&gt;Bugs&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;[&lt;a href=&quot;https://issues.redhat.com/browse/WFLY-20261&quot;&gt;WFLY-20261&lt;/a&gt;] - NPE in race condition between a thread committing a transaction and another thread performing recovery.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;[&lt;a href=&quot;https://issues.redhat.com/browse/WFLY-20290&quot;&gt;WFLY-20290&lt;/a&gt;] - CLI command &amp;quot;server=name:import-journal&amp;quot; for messaging subsystem throws &amp;quot;NoClassDefFoundError:&amp;quot; in Java 17&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;[&lt;a href=&quot;https://issues.redhat.com/browse/WFLY-20329&quot;&gt;WFLY-20329&lt;/a&gt;] - Incorrect module identifier handling in WeldDeploymentProcessor&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;component-upgrades&quot;&gt;Component Upgrades&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;[&lt;a href=&quot;https://issues.redhat.com/browse/WFLY-20303&quot;&gt;WFLY-20303&lt;/a&gt;] - Upgrade Arquillian from 1.9.2.Final to 1.9.3.Final&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;[&lt;a href=&quot;https://issues.redhat.com/browse/WFLY-20306&quot;&gt;WFLY-20306&lt;/a&gt;] - Upgrade Wiremock to 3.10.0&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;[&lt;a href=&quot;https://issues.redhat.com/browse/WFLY-20307&quot;&gt;WFLY-20307&lt;/a&gt;] - (WF 35) Upgrade HAL to 3.7.8.Final&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;[&lt;a href=&quot;https://issues.redhat.com/browse/WFLY-20309&quot;&gt;WFLY-20309&lt;/a&gt;] - Upgrade RESTEasy MicroProfile 3.0.0.Final to 3.0.1.Final&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;[&lt;a href=&quot;https://issues.redhat.com/browse/WFLY-20323&quot;&gt;WFLY-20323&lt;/a&gt;] - Upgrade openjdk-orb to 10.1.1.Final&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;[&lt;a href=&quot;https://issues.redhat.com/browse/WFLY-20324&quot;&gt;WFLY-20324&lt;/a&gt;] - Upgrade Narayana to 7.2.0.Final&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;[&lt;a href=&quot;https://issues.redhat.com/browse/WFLY-20341&quot;&gt;WFLY-20341&lt;/a&gt;] - Upgrade Apache Mime4j from 0.8.11 to 0.8.12&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;[&lt;a href=&quot;https://issues.redhat.com/browse/WFLY-20355&quot;&gt;WFLY-20355&lt;/a&gt;] - Upgrade WildFly Core to 27.0.1.Final&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;[&lt;a href=&quot;https://issues.redhat.com/browse/WFLY-20358&quot;&gt;WFLY-20358&lt;/a&gt;] - Upgrade Infinispan to 15.0.13.Final&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;[&lt;a href=&quot;https://issues.redhat.com/browse/WFLY-20085&quot;&gt;WFLY-20085&lt;/a&gt;] - Upgrade cxf from 4.0.5 to 4.0.6&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;tasks&quot;&gt;Tasks&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;[&lt;a href=&quot;https://issues.redhat.com/browse/WFLY-20272&quot;&gt;WFLY-20272&lt;/a&gt;] - Update microprofile-certification.sh to reflect that WildFly is now MP 7 compatible&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;[&lt;a href=&quot;https://issues.redhat.com/browse/WFLY-20273&quot;&gt;WFLY-20273&lt;/a&gt;] - Adapt microprofile-certification.sh to play nicely with the MicroProfile Telemetry TCK processing&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;[&lt;a href=&quot;https://issues.redhat.com/browse/WFLY-20275&quot;&gt;WFLY-20275&lt;/a&gt;] - Remove XercesUsageTestCase&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;[&lt;a href=&quot;https://issues.redhat.com/browse/WFLY-20339&quot;&gt;WFLY-20339&lt;/a&gt;] - Suppress CVE-2024-4109 as triaged as not a security vulnerability&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;sub-tasks&quot;&gt;Sub Tasks&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;[&lt;a href=&quot;https://issues.redhat.com/browse/WFLY-20259&quot;&gt;WFLY-20259&lt;/a&gt;] - MP REST Client TCK is never run with the security manager&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;The following issues were also resolved in the version of WildFly Core contained within this release:&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;bugs-2&quot;&gt;Bugs&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;[&lt;a href=&quot;https://issues.redhat.com/browse/WFCORE-7153&quot;&gt;WFCORE-7153&lt;/a&gt;] - CVE-2025-23367 org.wildfly.core/wildfly-server: Wildfly improper RBAC permission.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;component-upgrades-2&quot;&gt;Component Upgrades&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;[&lt;a href=&quot;https://issues.redhat.com/browse/WFCORE-7131&quot;&gt;WFCORE-7131&lt;/a&gt;] - Upgrade JBoss Marshalling to 2.2.2.Final&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Enjoy!&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</content>
      

      
      
      
      
      

      
        <author>
          <name>Darran Lofthouse</name>
          
          
        </author>
      

      
        
      

      
        <category term="announcement" />
      
        <category term="release" />
      

      
        <summary type="html">WildFly 35.0.1.Final is now available for download.</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">WildFly in a Foundation</title>
      <link href="https://hpehl.github.io/wildfly.org/news/2025/02/03/WildFly-in-a-Foundation/" rel="alternate" type="text/html" title="WildFly in a Foundation" />
      <published>2025-02-03T00:00:00+01:00</published>
      <updated>2025-02-03T00:00:00+01:00</updated>
      <id>https://hpehl.github.io/wildfly.org/news/2025/02/03/WildFly-in-a-Foundation</id>
      
      
        <content type="html" xml:base="https://hpehl.github.io/wildfly.org/news/2025/02/03/WildFly-in-a-Foundation/">&lt;div id=&quot;preamble&quot;&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;In the last two years we&amp;#8217;ve been putting a lot of effort into improving how the WildFly project interacts with our community, including adding new communication channels like our &lt;a href=&quot;https://www.wildfly.org/conference/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Mini Conferences&lt;/a&gt;, adding new &lt;a href=&quot;https://www.wildfly.org/guides/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;user guides&lt;/a&gt; and creating a transparent &lt;a href=&quot;https://docs.wildfly.org/wildfly-proposals/FEATURE_PROCESS.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;feature development process&lt;/a&gt;. WildFly has been a successful project for a long time now, and I believe that&amp;#8217;s largely because we are passionate about serving our community.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;To help us continue on this path, we are considering moving WildFly to a vendor-neutral software foundation. Our hope is that by doing this we could further expand our community, improve our openness and transparency, refresh our governance model, and encourage more participation by contributors not affiliated with Red Hat.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;important-considerations&quot;&gt;Important Considerations&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Moving to a foundation is not a trivial task, so it&amp;#8217;s critical that the choice we make is a net benefit to our community. To help ensure this, there are a number of key factors we&amp;#8217;re looking at when evaluating what foundation would be the best fit:&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;ulist&quot;&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Flexibility to continue shipping third-party components using a wide array of Open Source Initiative (OSI)-approved Open Source licences.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Maintain as much as possible our current release processes.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Retain independence in decision making, particularly on technical matters.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;support-and-alignment-with-red-hat-values&quot;&gt;Support and Alignment with Red Hat Values&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Red Hat is dedicated to participating in and supporting vendor-neutral collaboration projects, such as the Linux kernel, Kubernetes, and OpenJDK; doing so is part of the company&amp;#8217;s DNA. Red Hat business leaders are fully supportive of this move.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;sect1&quot;&gt;
&lt;h2 id=&quot;community-feedback&quot;&gt;Community Feedback&lt;/h2&gt;
&lt;div class=&quot;sectionbody&quot;&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;We&amp;#8217;d love to hear your thoughts on this. Let us know what you&amp;#8217;re thinking either on the &lt;a href=&quot;https://lists.jboss.org/archives/list/wildfly-dev@lists.jboss.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;developer mail list&lt;/a&gt;, in the &lt;a href=&quot;https://groups.google.com/g/wildfly&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;WildFly google group&lt;/a&gt; or in &lt;a href=&quot;https://wildfly.zulipchat.com/#narrow/channel/174184-wildfly-developers&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Zulip&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Best regards,&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;paragraph&quot;&gt;
&lt;p&gt;Brian&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</content>
      

      
      
      
      
      

      
        <author>
          <name>Brian Stansberry</name>
          
          
        </author>
      

      
        
      

      
        <category term="announcement" />
      
        <category term="foundation" />
      

      
        <summary type="html">In the last two years we&amp;#8217;ve been putting a lot of effort into improving how the WildFly project interacts with our community, including adding new communication channels like our Mini Conferences, adding new user guides and creating a transparent feature development process. WildFly has been a successful project for a long time now, and I believe that&amp;#8217;s largely because we are passionate about serving our community.</summary>
      

      
      
    </entry>
  

</feed>

